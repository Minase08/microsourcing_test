{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\mark.anthony.m.olaes\\\\Documents\\\\ReactJS\\\\SmartAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\mark.anthony.m.olaes\\\\Documents\\\\ReactJS\\\\SmartAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\n/*! Summernote v0.8.15 | (c) 2013- Alan Hong and other contributors | MIT license */\n!function (t, e) {\n  if (\"object\" == typeof exports && \"object\" == typeof module) module.exports = e(require(\"jquery\"));else if (\"function\" == typeof define && define.amd) define([\"jquery\"], e);else {\n    var o = \"object\" == typeof exports ? e(require(\"jquery\")) : e(t.jQuery);\n\n    for (var i in o) {\n      (\"object\" == typeof exports ? exports : t)[i] = o[i];\n    }\n  }\n}(window, function (t) {\n  return function (t) {\n    var e = {};\n\n    function o(i) {\n      if (e[i]) return e[i].exports;\n      var n = e[i] = {\n        i: i,\n        l: !1,\n        exports: {}\n      };\n      return t[i].call(n.exports, n, n.exports, o), n.l = !0, n.exports;\n    }\n\n    return o.m = t, o.c = e, o.d = function (t, e, i) {\n      o.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: i\n      });\n    }, o.r = function (t) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, o.t = function (t, e) {\n      if (1 & e && (t = o(t)), 8 & e) return t;\n      if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n      var i = Object.create(null);\n      if (o.r(i), Object.defineProperty(i, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var n in t) {\n        o.d(i, n, function (e) {\n          return t[e];\n        }.bind(null, n));\n      }\n      return i;\n    }, o.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return o.d(e, \"a\", e), e;\n    }, o.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, o.p = \"\", o(o.s = 51);\n  }({\n    0: function _(e, o) {\n      e.exports = t;\n    },\n    1: function _(t, e, o) {\n      \"use strict\";\n\n      var i = o(0),\n          n = o.n(i);\n\n      var s =\n      /*#__PURE__*/\n      function () {\n        function s(t, e, o, i) {\n          _classCallCheck(this, s);\n\n          this.markup = t, this.children = e, this.options = o, this.callback = i;\n        }\n\n        _createClass(s, [{\n          key: \"render\",\n          value: function render(t) {\n            var e = n()(this.markup);\n\n            if (this.options && this.options.contents && e.html(this.options.contents), this.options && this.options.className && e.addClass(this.options.className), this.options && this.options.data && n.a.each(this.options.data, function (t, o) {\n              e.attr(\"data-\" + t, o);\n            }), this.options && this.options.click && e.on(\"click\", this.options.click), this.children) {\n              var _t = e.find(\".note-children-container\");\n\n              this.children.forEach(function (o) {\n                o.render(_t.length ? _t : e);\n              });\n            }\n\n            return this.callback && this.callback(e, this.options), this.options && this.options.callback && this.options.callback(e), t && t.append(e), e;\n          }\n        }]);\n\n        return s;\n      }();\n\n      e.a = {\n        create: function create(t, e) {\n          return function () {\n            var o = \"object\" == typeof arguments[1] ? arguments[1] : arguments[0];\n            var i = Array.isArray(arguments[0]) ? arguments[0] : [];\n            return o && o.children && (i = o.children), new s(t, i, o, e);\n          };\n        }\n      };\n    },\n    2: function _(t, e) {\n      (function (e) {\n        t.exports = e;\n      }).call(this, {});\n    },\n    3: function _(t, e, o) {\n      \"use strict\";\n\n      var i = o(0),\n          n = o.n(i);\n      n.a.summernote = n.a.summernote || {\n        lang: {}\n      }, n.a.extend(n.a.summernote.lang, {\n        \"en-US\": {\n          font: {\n            bold: \"Bold\",\n            italic: \"Italic\",\n            underline: \"Underline\",\n            clear: \"Remove Font Style\",\n            height: \"Line Height\",\n            name: \"Font Family\",\n            strikethrough: \"Strikethrough\",\n            subscript: \"Subscript\",\n            superscript: \"Superscript\",\n            size: \"Font Size\",\n            sizeunit: \"Font Size Unit\"\n          },\n          image: {\n            image: \"Picture\",\n            insert: \"Insert Image\",\n            resizeFull: \"Resize full\",\n            resizeHalf: \"Resize half\",\n            resizeQuarter: \"Resize quarter\",\n            resizeNone: \"Original size\",\n            floatLeft: \"Float Left\",\n            floatRight: \"Float Right\",\n            floatNone: \"Remove float\",\n            shapeRounded: \"Shape: Rounded\",\n            shapeCircle: \"Shape: Circle\",\n            shapeThumbnail: \"Shape: Thumbnail\",\n            shapeNone: \"Shape: None\",\n            dragImageHere: \"Drag image or text here\",\n            dropImage: \"Drop image or Text\",\n            selectFromFiles: \"Select from files\",\n            maximumFileSize: \"Maximum file size\",\n            maximumFileSizeError: \"Maximum file size exceeded.\",\n            url: \"Image URL\",\n            remove: \"Remove Image\",\n            original: \"Original\"\n          },\n          video: {\n            video: \"Video\",\n            videoLink: \"Video Link\",\n            insert: \"Insert Video\",\n            url: \"Video URL\",\n            providers: \"(YouTube, Vimeo, Vine, Instagram, DailyMotion or Youku)\"\n          },\n          link: {\n            link: \"Link\",\n            insert: \"Insert Link\",\n            unlink: \"Unlink\",\n            edit: \"Edit\",\n            textToDisplay: \"Text to display\",\n            url: \"To what URL should this link go?\",\n            openInNewWindow: \"Open in new window\",\n            useProtocol: \"Use default protocol\"\n          },\n          table: {\n            table: \"Table\",\n            addRowAbove: \"Add row above\",\n            addRowBelow: \"Add row below\",\n            addColLeft: \"Add column left\",\n            addColRight: \"Add column right\",\n            delRow: \"Delete row\",\n            delCol: \"Delete column\",\n            delTable: \"Delete table\"\n          },\n          hr: {\n            insert: \"Insert Horizontal Rule\"\n          },\n          style: {\n            style: \"Style\",\n            p: \"Normal\",\n            blockquote: \"Quote\",\n            pre: \"Code\",\n            h1: \"Header 1\",\n            h2: \"Header 2\",\n            h3: \"Header 3\",\n            h4: \"Header 4\",\n            h5: \"Header 5\",\n            h6: \"Header 6\"\n          },\n          lists: {\n            unordered: \"Unordered list\",\n            ordered: \"Ordered list\"\n          },\n          options: {\n            help: \"Help\",\n            fullscreen: \"Full Screen\",\n            codeview: \"Code View\"\n          },\n          paragraph: {\n            paragraph: \"Paragraph\",\n            outdent: \"Outdent\",\n            indent: \"Indent\",\n            left: \"Align left\",\n            center: \"Align center\",\n            right: \"Align right\",\n            justify: \"Justify full\"\n          },\n          color: {\n            recent: \"Recent Color\",\n            more: \"More Color\",\n            background: \"Background Color\",\n            foreground: \"Text Color\",\n            transparent: \"Transparent\",\n            setTransparent: \"Set transparent\",\n            reset: \"Reset\",\n            resetToDefault: \"Reset to default\",\n            cpSelect: \"Select\"\n          },\n          shortcut: {\n            shortcuts: \"Keyboard shortcuts\",\n            close: \"Close\",\n            textFormatting: \"Text formatting\",\n            action: \"Action\",\n            paragraphFormatting: \"Paragraph formatting\",\n            documentStyle: \"Document Style\",\n            extraKeys: \"Extra keys\"\n          },\n          help: {\n            insertParagraph: \"Insert Paragraph\",\n            undo: \"Undoes the last command\",\n            redo: \"Redoes the last command\",\n            tab: \"Tab\",\n            untab: \"Untab\",\n            bold: \"Set a bold style\",\n            italic: \"Set a italic style\",\n            underline: \"Set a underline style\",\n            strikethrough: \"Set a strikethrough style\",\n            removeFormat: \"Clean a style\",\n            justifyLeft: \"Set left align\",\n            justifyCenter: \"Set center align\",\n            justifyRight: \"Set right align\",\n            justifyFull: \"Set full align\",\n            insertUnorderedList: \"Toggle unordered list\",\n            insertOrderedList: \"Toggle ordered list\",\n            outdent: \"Outdent on current paragraph\",\n            indent: \"Indent on current paragraph\",\n            formatPara: \"Change current block's format as a paragraph(P tag)\",\n            formatH1: \"Change current block's format as H1\",\n            formatH2: \"Change current block's format as H2\",\n            formatH3: \"Change current block's format as H3\",\n            formatH4: \"Change current block's format as H4\",\n            formatH5: \"Change current block's format as H5\",\n            formatH6: \"Change current block's format as H6\",\n            insertHorizontalRule: \"Insert horizontal rule\",\n            \"linkDialog.show\": \"Show Link Dialog\"\n          },\n          history: {\n            undo: \"Undo\",\n            redo: \"Redo\"\n          },\n          specialChar: {\n            specialChar: \"SPECIAL CHARACTERS\",\n            select: \"Select Special characters\"\n          },\n          output: {\n            noSelection: \"No Selection Made!\"\n          }\n        }\n      });\n      var s = \"function\" == typeof define && o(2),\n          r = [\"sans-serif\", \"serif\", \"monospace\", \"cursive\", \"fantasy\"];\n\n      function a(t) {\n        return -1 === n.a.inArray(t.toLowerCase(), r) ? \"'\".concat(t, \"'\") : t;\n      }\n\n      var l = navigator.userAgent,\n          c = /MSIE|Trident/i.test(l);\n      var h;\n\n      if (c) {\n        var _t2 = /MSIE (\\d+[.]\\d+)/.exec(l);\n\n        _t2 && (h = parseFloat(_t2[1])), _t2 = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(l), _t2 && (h = parseFloat(_t2[1]));\n      }\n\n      var d = /Edge\\/\\d+/.test(l);\n      var u = !!window.CodeMirror;\n      var p = \"ontouchstart\" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0,\n          m = c ? \"DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted\" : \"input\";\n      var f = {\n        isMac: navigator.appVersion.indexOf(\"Mac\") > -1,\n        isMSIE: c,\n        isEdge: d,\n        isFF: !d && /firefox/i.test(l),\n        isPhantom: /PhantomJS/i.test(l),\n        isWebkit: !d && /webkit/i.test(l),\n        isChrome: !d && /chrome/i.test(l),\n        isSafari: !d && /safari/i.test(l) && !/chrome/i.test(l),\n        browserVersion: h,\n        jqueryVersion: parseFloat(n.a.fn.jquery),\n        isSupportAmd: s,\n        isSupportTouch: p,\n        hasCodeMirror: u,\n        isFontInstalled: function isFontInstalled(t) {\n          var e = \"Comic Sans MS\" === t ? \"Courier New\" : \"Comic Sans MS\";\n          var o = document.createElement(\"canvas\").getContext(\"2d\");\n          o.font = \"200px '\" + e + \"'\";\n          var i = o.measureText(\"mmmmmmmmmmwwwww\").width;\n          return o.font = \"200px \" + a(t) + ', \"' + e + '\"', i !== o.measureText(\"mmmmmmmmmmwwwww\").width;\n        },\n        isW3CRangeSupport: !!document.createRange,\n        inputEventName: m,\n        genericFontFamilies: r,\n        validFontName: a\n      };\n      var g = 0;\n      var b = {\n        eq: function eq(t) {\n          return function (e) {\n            return t === e;\n          };\n        },\n        eq2: function eq2(t, e) {\n          return t === e;\n        },\n        peq2: function peq2(t) {\n          return function (e, o) {\n            return e[t] === o[t];\n          };\n        },\n        ok: function ok() {\n          return !0;\n        },\n        fail: function fail() {\n          return !1;\n        },\n        self: function self(t) {\n          return t;\n        },\n        not: function not(t) {\n          return function () {\n            return !t.apply(t, arguments);\n          };\n        },\n        and: function and(t, e) {\n          return function (o) {\n            return t(o) && e(o);\n          };\n        },\n        invoke: function invoke(t, e) {\n          return function () {\n            return t[e].apply(t, arguments);\n          };\n        },\n        resetUniqueId: function resetUniqueId() {\n          g = 0;\n        },\n        uniqueId: function uniqueId(t) {\n          var e = ++g + \"\";\n          return t ? t + e : e;\n        },\n        rect2bnd: function rect2bnd(t) {\n          var e = n()(document);\n          return {\n            top: t.top + e.scrollTop(),\n            left: t.left + e.scrollLeft(),\n            width: t.right - t.left,\n            height: t.bottom - t.top\n          };\n        },\n        invertObject: function invertObject(t) {\n          var e = {};\n\n          for (var _o in t) {\n            t.hasOwnProperty(_o) && (e[t[_o]] = _o);\n          }\n\n          return e;\n        },\n        namespaceToCamel: function namespaceToCamel(t, e) {\n          return (e = e || \"\") + t.split(\".\").map(function (t) {\n            return t.substring(0, 1).toUpperCase() + t.substring(1);\n          }).join(\"\");\n        },\n        debounce: function debounce(t, e, o) {\n          var i;\n          return function () {\n            var n = this,\n                s = arguments,\n                r = function r() {\n              i = null, o || t.apply(n, s);\n            },\n                a = o && !i;\n\n            clearTimeout(i), i = setTimeout(r, e), a && t.apply(n, s);\n          };\n        },\n        isValidUrl: function isValidUrl(t) {\n          return /[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi.test(t);\n        }\n      };\n\n      function v(t) {\n        return t[0];\n      }\n\n      function k(t) {\n        return t[t.length - 1];\n      }\n\n      function C(t) {\n        return t.slice(1);\n      }\n\n      function w(t, e) {\n        if (t && t.length && e) {\n          if (t.indexOf) return -1 !== t.indexOf(e);\n          if (t.contains) return t.contains(e);\n        }\n\n        return !1;\n      }\n\n      var y = {\n        head: v,\n        last: k,\n        initial: function initial(t) {\n          return t.slice(0, t.length - 1);\n        },\n        tail: C,\n        prev: function prev(t, e) {\n          if (t && t.length && e) {\n            var _o2 = t.indexOf(e);\n\n            return -1 === _o2 ? null : t[_o2 - 1];\n          }\n\n          return null;\n        },\n        next: function next(t, e) {\n          if (t && t.length && e) {\n            var _o3 = t.indexOf(e);\n\n            return -1 === _o3 ? null : t[_o3 + 1];\n          }\n\n          return null;\n        },\n        find: function find(t, e) {\n          for (var _o4 = 0, _i = t.length; _o4 < _i; _o4++) {\n            var _i2 = t[_o4];\n            if (e(_i2)) return _i2;\n          }\n        },\n        contains: w,\n        all: function all(t, e) {\n          for (var _o5 = 0, _i3 = t.length; _o5 < _i3; _o5++) {\n            if (!e(t[_o5])) return !1;\n          }\n\n          return !0;\n        },\n        sum: function sum(t, e) {\n          return e = e || b.self, t.reduce(function (t, o) {\n            return t + e(o);\n          }, 0);\n        },\n        from: function from(t) {\n          var e = [],\n              o = t.length;\n          var i = -1;\n\n          for (; ++i < o;) {\n            e[i] = t[i];\n          }\n\n          return e;\n        },\n        isEmpty: function isEmpty(t) {\n          return !t || !t.length;\n        },\n        clusterBy: function clusterBy(t, e) {\n          return t.length ? C(t).reduce(function (t, o) {\n            var i = k(t);\n            return e(k(i), o) ? i[i.length] = o : t[t.length] = [o], t;\n          }, [[v(t)]]) : [];\n        },\n        compact: function compact(t) {\n          var e = [];\n\n          for (var _o6 = 0, _i4 = t.length; _o6 < _i4; _o6++) {\n            t[_o6] && e.push(t[_o6]);\n          }\n\n          return e;\n        },\n        unique: function unique(t) {\n          var e = [];\n\n          for (var _o7 = 0, _i5 = t.length; _o7 < _i5; _o7++) {\n            w(e, t[_o7]) || e.push(t[_o7]);\n          }\n\n          return e;\n        }\n      };\n      var x = String.fromCharCode(160);\n\n      function S(t) {\n        return t && n()(t).hasClass(\"note-editable\");\n      }\n\n      function $(t) {\n        return t = t.toUpperCase(), function (e) {\n          return e && e.nodeName.toUpperCase() === t;\n        };\n      }\n\n      function I(t) {\n        return t && 3 === t.nodeType;\n      }\n\n      function T(t) {\n        return t && /^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(t.nodeName.toUpperCase());\n      }\n\n      function N(t) {\n        return !S(t) && t && /^DIV|^P|^LI|^H[1-7]/.test(t.nodeName.toUpperCase());\n      }\n\n      var E = $(\"PRE\"),\n          R = $(\"LI\");\n      var L = $(\"TABLE\"),\n          A = $(\"DATA\");\n\n      function P(t) {\n        return !(B(t) || F(t) || H(t) || N(t) || L(t) || z(t) || A(t));\n      }\n\n      function F(t) {\n        return t && /^UL|^OL/.test(t.nodeName.toUpperCase());\n      }\n\n      var H = $(\"HR\");\n\n      function D(t) {\n        return t && /^TD|^TH/.test(t.nodeName.toUpperCase());\n      }\n\n      var z = $(\"BLOCKQUOTE\");\n\n      function B(t) {\n        return D(t) || z(t) || S(t);\n      }\n\n      var M = $(\"A\");\n      var O = $(\"BODY\");\n      var U = f.isMSIE && f.browserVersion < 11 ? \"&nbsp;\" : \"<br>\";\n\n      function j(t) {\n        return I(t) ? t.nodeValue.length : t ? t.childNodes.length : 0;\n      }\n\n      function W(t) {\n        var e = j(t);\n        return 0 === e || !I(t) && 1 === e && t.innerHTML === U || !(!y.all(t.childNodes, I) || \"\" !== t.innerHTML);\n      }\n\n      function K(t) {\n        T(t) || j(t) || (t.innerHTML = U);\n      }\n\n      function q(t, e) {\n        for (; t;) {\n          if (e(t)) return t;\n          if (S(t)) break;\n          t = t.parentNode;\n        }\n\n        return null;\n      }\n\n      function V(t, e) {\n        e = e || b.fail;\n        var o = [];\n        return q(t, function (t) {\n          return S(t) || o.push(t), e(t);\n        }), o;\n      }\n\n      function _(t, e) {\n        e = e || b.fail;\n        var o = [];\n\n        for (; t && !e(t);) {\n          o.push(t), t = t.nextSibling;\n        }\n\n        return o;\n      }\n\n      function G(t, e) {\n        var o = e.nextSibling;\n        var i = e.parentNode;\n        return o ? i.insertBefore(t, o) : i.appendChild(t), t;\n      }\n\n      function Z(t, e) {\n        return n.a.each(e, function (e, o) {\n          t.appendChild(o);\n        }), t;\n      }\n\n      function Y(t) {\n        return 0 === t.offset;\n      }\n\n      function Q(t) {\n        return t.offset === j(t.node);\n      }\n\n      function J(t) {\n        return Y(t) || Q(t);\n      }\n\n      function X(t, e) {\n        for (; t && t !== e;) {\n          if (0 !== et(t)) return !1;\n          t = t.parentNode;\n        }\n\n        return !0;\n      }\n\n      function tt(t, e) {\n        if (!e) return !1;\n\n        for (; t && t !== e;) {\n          if (et(t) !== j(t.parentNode) - 1) return !1;\n          t = t.parentNode;\n        }\n\n        return !0;\n      }\n\n      function et(t) {\n        var e = 0;\n\n        for (; t = t.previousSibling;) {\n          e += 1;\n        }\n\n        return e;\n      }\n\n      function ot(t) {\n        return !!(t && t.childNodes && t.childNodes.length);\n      }\n\n      function it(t, e) {\n        var o, i;\n\n        if (0 === t.offset) {\n          if (S(t.node)) return null;\n          o = t.node.parentNode, i = et(t.node);\n        } else ot(t.node) ? (o = t.node.childNodes[t.offset - 1], i = j(o)) : (o = t.node, i = e ? 0 : t.offset - 1);\n\n        return {\n          node: o,\n          offset: i\n        };\n      }\n\n      function nt(t, e) {\n        var o, i;\n        if (W(t.node)) return null;\n\n        if (j(t.node) === t.offset) {\n          if (S(t.node)) return null;\n          o = t.node.parentNode, i = et(t.node) + 1;\n        } else if (ot(t.node)) {\n          if (o = t.node.childNodes[t.offset], i = 0, W(o)) return null;\n        } else if (o = t.node, i = e ? j(t.node) : t.offset + 1, W(o)) return null;\n\n        return {\n          node: o,\n          offset: i\n        };\n      }\n\n      function st(t, e) {\n        return t.node === e.node && t.offset === e.offset;\n      }\n\n      function rt(t, e) {\n        var o = e && e.isSkipPaddingBlankHTML;\n        var i = e && e.isNotSplitEdgePoint,\n            n = e && e.isDiscardEmptySplits;\n\n        if (n && (o = !0), J(t) && (I(t.node) || i)) {\n          if (Y(t)) return t.node;\n          if (Q(t)) return t.node.nextSibling;\n        }\n\n        if (I(t.node)) return t.node.splitText(t.offset);\n        {\n          var _e = t.node.childNodes[t.offset],\n              _i6 = G(t.node.cloneNode(!1), t.node);\n\n          return Z(_i6, _(_e)), o || (K(t.node), K(_i6)), n && (W(t.node) && ct(t.node), W(_i6)) ? (ct(_i6), t.node.nextSibling) : _i6;\n        }\n      }\n\n      function at(t, e, o) {\n        var i = V(e.node, b.eq(t));\n        return i.length ? 1 === i.length ? rt(e, o) : i.reduce(function (t, i) {\n          return t === e.node && (t = rt(e, o)), rt({\n            node: i,\n            offset: t ? et(t) : j(i)\n          }, o);\n        }) : null;\n      }\n\n      function lt(t) {\n        return document.createElement(t);\n      }\n\n      function ct(t, e) {\n        if (!t || !t.parentNode) return;\n        if (t.removeNode) return t.removeNode(e);\n        var o = t.parentNode;\n\n        if (!e) {\n          var _e2 = [];\n\n          for (var _o8 = 0, _i7 = t.childNodes.length; _o8 < _i7; _o8++) {\n            _e2.push(t.childNodes[_o8]);\n          }\n\n          for (var _i8 = 0, _n = _e2.length; _i8 < _n; _i8++) {\n            o.insertBefore(_e2[_i8], t);\n          }\n        }\n\n        o.removeChild(t);\n      }\n\n      var ht = $(\"TEXTAREA\");\n\n      function dt(t, e) {\n        var o = ht(t[0]) ? t.val() : t.html();\n        return e ? o.replace(/[\\n\\r]/g, \"\") : o;\n      }\n\n      var ut = {\n        NBSP_CHAR: x,\n        ZERO_WIDTH_NBSP_CHAR: \"\\uFEFF\",\n        blank: U,\n        emptyPara: \"<p>\".concat(U, \"</p>\"),\n        makePredByNodeName: $,\n        isEditable: S,\n        isControlSizing: function isControlSizing(t) {\n          return t && n()(t).hasClass(\"note-control-sizing\");\n        },\n        isText: I,\n        isElement: function isElement(t) {\n          return t && 1 === t.nodeType;\n        },\n        isVoid: T,\n        isPara: N,\n        isPurePara: function isPurePara(t) {\n          return N(t) && !R(t);\n        },\n        isHeading: function isHeading(t) {\n          return t && /^H[1-7]/.test(t.nodeName.toUpperCase());\n        },\n        isInline: P,\n        isBlock: b.not(P),\n        isBodyInline: function isBodyInline(t) {\n          return P(t) && !q(t, N);\n        },\n        isBody: O,\n        isParaInline: function isParaInline(t) {\n          return P(t) && !!q(t, N);\n        },\n        isPre: E,\n        isList: F,\n        isTable: L,\n        isData: A,\n        isCell: D,\n        isBlockquote: z,\n        isBodyContainer: B,\n        isAnchor: M,\n        isDiv: $(\"DIV\"),\n        isLi: R,\n        isBR: $(\"BR\"),\n        isSpan: $(\"SPAN\"),\n        isB: $(\"B\"),\n        isU: $(\"U\"),\n        isS: $(\"S\"),\n        isI: $(\"I\"),\n        isImg: $(\"IMG\"),\n        isTextarea: ht,\n        deepestChildIsEmpty: function deepestChildIsEmpty(t) {\n          do {\n            if (null === t.firstElementChild || \"\" === t.firstElementChild.innerHTML) break;\n          } while (t = t.firstElementChild);\n\n          return W(t);\n        },\n        isEmpty: W,\n        isEmptyAnchor: b.and(M, W),\n        isClosestSibling: function isClosestSibling(t, e) {\n          return t.nextSibling === e || t.previousSibling === e;\n        },\n        withClosestSiblings: function withClosestSiblings(t, e) {\n          e = e || b.ok;\n          var o = [];\n          return t.previousSibling && e(t.previousSibling) && o.push(t.previousSibling), o.push(t), t.nextSibling && e(t.nextSibling) && o.push(t.nextSibling), o;\n        },\n        nodeLength: j,\n        isLeftEdgePoint: Y,\n        isRightEdgePoint: Q,\n        isEdgePoint: J,\n        isLeftEdgeOf: X,\n        isRightEdgeOf: tt,\n        isLeftEdgePointOf: function isLeftEdgePointOf(t, e) {\n          return Y(t) && X(t.node, e);\n        },\n        isRightEdgePointOf: function isRightEdgePointOf(t, e) {\n          return Q(t) && tt(t.node, e);\n        },\n        prevPoint: it,\n        nextPoint: nt,\n        isSamePoint: st,\n        isVisiblePoint: function isVisiblePoint(t) {\n          if (I(t.node) || !ot(t.node) || W(t.node)) return !0;\n          var e = t.node.childNodes[t.offset - 1],\n              o = t.node.childNodes[t.offset];\n          return !(e && !T(e) || o && !T(o));\n        },\n        prevPointUntil: function prevPointUntil(t, e) {\n          for (; t;) {\n            if (e(t)) return t;\n            t = it(t);\n          }\n\n          return null;\n        },\n        nextPointUntil: function nextPointUntil(t, e) {\n          for (; t;) {\n            if (e(t)) return t;\n            t = nt(t);\n          }\n\n          return null;\n        },\n        isCharPoint: function isCharPoint(t) {\n          if (!I(t.node)) return !1;\n          var e = t.node.nodeValue.charAt(t.offset - 1);\n          return e && \" \" !== e && e !== x;\n        },\n        isSpacePoint: function isSpacePoint(t) {\n          if (!I(t.node)) return !1;\n          var e = t.node.nodeValue.charAt(t.offset - 1);\n          return \" \" === e || e === x;\n        },\n        walkPoint: function walkPoint(t, e, o, i) {\n          var n = t;\n\n          for (; n && (o(n), !st(n, e));) {\n            n = nt(n, i && t.node !== n.node && e.node !== n.node);\n          }\n        },\n        ancestor: q,\n        singleChildAncestor: function singleChildAncestor(t, e) {\n          for (t = t.parentNode; t && 1 === j(t);) {\n            if (e(t)) return t;\n            if (S(t)) break;\n            t = t.parentNode;\n          }\n\n          return null;\n        },\n        listAncestor: V,\n        lastAncestor: function lastAncestor(t, e) {\n          var o = V(t);\n          return y.last(o.filter(e));\n        },\n        listNext: _,\n        listPrev: function listPrev(t, e) {\n          e = e || b.fail;\n          var o = [];\n\n          for (; t && !e(t);) {\n            o.push(t), t = t.previousSibling;\n          }\n\n          return o;\n        },\n        listDescendant: function listDescendant(t, e) {\n          var o = [];\n          return e = e || b.ok, function i(n) {\n            t !== n && e(n) && o.push(n);\n\n            for (var _t3 = 0, _e3 = n.childNodes.length; _t3 < _e3; _t3++) {\n              i(n.childNodes[_t3]);\n            }\n          }(t), o;\n        },\n        commonAncestor: function commonAncestor(t, e) {\n          var o = V(t);\n\n          for (var _t4 = e; _t4; _t4 = _t4.parentNode) {\n            if (o.indexOf(_t4) > -1) return _t4;\n          }\n\n          return null;\n        },\n        wrap: function wrap(t, e) {\n          var o = t.parentNode,\n              i = n()(\"<\" + e + \">\")[0];\n          return o.insertBefore(i, t), i.appendChild(t), i;\n        },\n        insertAfter: G,\n        appendChildNodes: Z,\n        position: et,\n        hasChildren: ot,\n        makeOffsetPath: function makeOffsetPath(t, e) {\n          return V(e, b.eq(t)).map(et).reverse();\n        },\n        fromOffsetPath: function fromOffsetPath(t, e) {\n          var o = t;\n\n          for (var _t5 = 0, _i9 = e.length; _t5 < _i9; _t5++) {\n            o = o.childNodes.length <= e[_t5] ? o.childNodes[o.childNodes.length - 1] : o.childNodes[e[_t5]];\n          }\n\n          return o;\n        },\n        splitTree: at,\n        splitPoint: function splitPoint(t, e) {\n          var o = e ? N : B,\n              i = V(t.node, o),\n              n = y.last(i) || t.node;\n          var s, r;\n          o(n) ? (s = i[i.length - 2], r = n) : (s = n, r = s.parentNode);\n          var a = s && at(s, t, {\n            isSkipPaddingBlankHTML: e,\n            isNotSplitEdgePoint: e\n          });\n          return a || r !== t.node || (a = t.node.childNodes[t.offset]), {\n            rightNode: a,\n            container: r\n          };\n        },\n        create: lt,\n        createText: function createText(t) {\n          return document.createTextNode(t);\n        },\n        remove: ct,\n        removeWhile: function removeWhile(t, e) {\n          for (; t && !S(t) && e(t);) {\n            var _e4 = t.parentNode;\n            ct(t), t = _e4;\n          }\n        },\n        replace: function replace(t, e) {\n          if (t.nodeName.toUpperCase() === e.toUpperCase()) return t;\n          var o = lt(e);\n          return t.style.cssText && (o.style.cssText = t.style.cssText), Z(o, y.from(t.childNodes)), G(o, t), ct(t), o;\n        },\n        html: function html(t, e) {\n          var o = dt(t);\n\n          if (e) {\n            var _t6 = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\n            o = o.replace(_t6, function (t, e, o) {\n              o = o.toUpperCase();\n              var i = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(o) && !!e,\n                  n = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(o);\n              return t + (i || n ? \"\\n\" : \"\");\n            }), o = o.trim();\n          }\n\n          return o;\n        },\n        value: dt,\n        posFromPlaceholder: function posFromPlaceholder(t) {\n          var e = n()(t),\n              o = e.offset(),\n              i = e.outerHeight(!0);\n          return {\n            left: o.left,\n            top: o.top + i\n          };\n        },\n        attachEvents: function attachEvents(t, e) {\n          Object.keys(e).forEach(function (o) {\n            t.on(o, e[o]);\n          });\n        },\n        detachEvents: function detachEvents(t, e) {\n          Object.keys(e).forEach(function (o) {\n            t.off(o, e[o]);\n          });\n        },\n        isCustomStyleTag: function isCustomStyleTag(t) {\n          return t && !I(t) && y.contains(t.classList, \"note-styletag\");\n        }\n      };\n\n      var pt =\n      /*#__PURE__*/\n      function () {\n        function pt(t, e) {\n          _classCallCheck(this, pt);\n\n          this.$note = t, this.memos = {}, this.modules = {}, this.layoutInfo = {}, this.options = n.a.extend(!0, {}, e), n.a.summernote.ui = n.a.summernote.ui_template(this.options), this.ui = n.a.summernote.ui, this.initialize();\n        }\n\n        _createClass(pt, [{\n          key: \"initialize\",\n          value: function initialize() {\n            return this.layoutInfo = this.ui.createLayout(this.$note), this._initialize(), this.$note.hide(), this;\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this._destroy(), this.$note.removeData(\"summernote\"), this.ui.removeLayout(this.$note, this.layoutInfo);\n          }\n        }, {\n          key: \"reset\",\n          value: function reset() {\n            var t = this.isDisabled();\n            this.code(ut.emptyPara), this._destroy(), this._initialize(), t && this.disable();\n          }\n        }, {\n          key: \"_initialize\",\n          value: function _initialize() {\n            var _this = this;\n\n            this.options.id = b.uniqueId(n.a.now()), this.options.container = this.options.container || this.layoutInfo.editor;\n            var t = n.a.extend({}, this.options.buttons);\n            Object.keys(t).forEach(function (e) {\n              _this.memo(\"button.\" + e, t[e]);\n            });\n            var e = n.a.extend({}, this.options.modules, n.a.summernote.plugins || {});\n            Object.keys(e).forEach(function (t) {\n              _this.module(t, e[t], !0);\n            }), Object.keys(this.modules).forEach(function (t) {\n              _this.initializeModule(t);\n            });\n          }\n        }, {\n          key: \"_destroy\",\n          value: function _destroy() {\n            var _this2 = this;\n\n            Object.keys(this.modules).reverse().forEach(function (t) {\n              _this2.removeModule(t);\n            }), Object.keys(this.memos).forEach(function (t) {\n              _this2.removeMemo(t);\n            }), this.triggerEvent(\"destroy\", this);\n          }\n        }, {\n          key: \"code\",\n          value: function code(t) {\n            var e = this.invoke(\"codeview.isActivated\");\n            if (void 0 === t) return this.invoke(\"codeview.sync\"), e ? this.layoutInfo.codable.val() : this.layoutInfo.editable.html();\n            e ? this.layoutInfo.codable.val(t) : this.layoutInfo.editable.html(t), this.$note.val(t), this.triggerEvent(\"change\", t, this.layoutInfo.editable);\n          }\n        }, {\n          key: \"isDisabled\",\n          value: function isDisabled() {\n            return \"false\" === this.layoutInfo.editable.attr(\"contenteditable\");\n          }\n        }, {\n          key: \"enable\",\n          value: function enable() {\n            this.layoutInfo.editable.attr(\"contenteditable\", !0), this.invoke(\"toolbar.activate\", !0), this.triggerEvent(\"disable\", !1), this.options.editing = !0;\n          }\n        }, {\n          key: \"disable\",\n          value: function disable() {\n            this.invoke(\"codeview.isActivated\") && this.invoke(\"codeview.deactivate\"), this.layoutInfo.editable.attr(\"contenteditable\", !1), this.options.editing = !1, this.invoke(\"toolbar.deactivate\", !0), this.triggerEvent(\"disable\", !0);\n          }\n        }, {\n          key: \"triggerEvent\",\n          value: function triggerEvent() {\n            var t = y.head(arguments),\n                e = y.tail(y.from(arguments)),\n                o = this.options.callbacks[b.namespaceToCamel(t, \"on\")];\n            o && o.apply(this.$note[0], e), this.$note.trigger(\"summernote.\" + t, e);\n          }\n        }, {\n          key: \"initializeModule\",\n          value: function initializeModule(t) {\n            var e = this.modules[t];\n            e.shouldInitialize = e.shouldInitialize || b.ok, e.shouldInitialize() && (e.initialize && e.initialize(), e.events && ut.attachEvents(this.$note, e.events));\n          }\n        }, {\n          key: \"module\",\n          value: function module(t, e, o) {\n            if (1 === arguments.length) return this.modules[t];\n            this.modules[t] = new e(this), o || this.initializeModule(t);\n          }\n        }, {\n          key: \"removeModule\",\n          value: function removeModule(t) {\n            var e = this.modules[t];\n            e.shouldInitialize() && (e.events && ut.detachEvents(this.$note, e.events), e.destroy && e.destroy()), delete this.modules[t];\n          }\n        }, {\n          key: \"memo\",\n          value: function memo(t, e) {\n            if (1 === arguments.length) return this.memos[t];\n            this.memos[t] = e;\n          }\n        }, {\n          key: \"removeMemo\",\n          value: function removeMemo(t) {\n            this.memos[t] && this.memos[t].destroy && this.memos[t].destroy(), delete this.memos[t];\n          }\n        }, {\n          key: \"createInvokeHandlerAndUpdateState\",\n          value: function createInvokeHandlerAndUpdateState(t, e) {\n            var _this3 = this;\n\n            return function (o) {\n              _this3.createInvokeHandler(t, e)(o), _this3.invoke(\"buttons.updateCurrentStyle\");\n            };\n          }\n        }, {\n          key: \"createInvokeHandler\",\n          value: function createInvokeHandler(t, e) {\n            var _this4 = this;\n\n            return function (o) {\n              o.preventDefault();\n              var i = n()(o.target);\n\n              _this4.invoke(t, e || i.closest(\"[data-value]\").data(\"value\"), i);\n            };\n          }\n        }, {\n          key: \"invoke\",\n          value: function invoke() {\n            var t = y.head(arguments),\n                e = y.tail(y.from(arguments)),\n                o = t.split(\".\"),\n                i = o.length > 1,\n                n = i && y.head(o),\n                s = i ? y.last(o) : y.head(o),\n                r = this.modules[n || \"editor\"];\n            return !n && this[s] ? this[s].apply(this, e) : r && r[s] && r.shouldInitialize() ? r[s].apply(r, e) : void 0;\n          }\n        }]);\n\n        return pt;\n      }();\n\n      function mt(t, e) {\n        var o,\n            i = t.parentElement();\n        var n = document.body.createTextRange();\n        var s;\n        var r = y.from(i.childNodes);\n\n        for (o = 0; o < r.length; o++) {\n          if (!ut.isText(r[o])) {\n            if (n.moveToElementText(r[o]), n.compareEndPoints(\"StartToStart\", t) >= 0) break;\n            s = r[o];\n          }\n        }\n\n        if (0 !== o && ut.isText(r[o - 1])) {\n          var _n2 = document.body.createTextRange();\n\n          var _r = null;\n          _n2.moveToElementText(s || i), _n2.collapse(!s), _r = s ? s.nextSibling : i.firstChild;\n\n          var _a = t.duplicate();\n\n          _a.setEndPoint(\"StartToStart\", _n2);\n\n          var _l = _a.text.replace(/[\\r\\n]/g, \"\").length;\n\n          for (; _l > _r.nodeValue.length && _r.nextSibling;) {\n            _l -= _r.nodeValue.length, _r = _r.nextSibling;\n          }\n\n          _r.nodeValue;\n          e && _r.nextSibling && ut.isText(_r.nextSibling) && _l === _r.nodeValue.length && (_l -= _r.nodeValue.length, _r = _r.nextSibling), i = _r, o = _l;\n        }\n\n        return {\n          cont: i,\n          offset: o\n        };\n      }\n\n      function ft(t) {\n        var e = function e(t, o) {\n          var i, n;\n\n          if (ut.isText(t)) {\n            var _e5 = ut.listPrev(t, b.not(ut.isText)),\n                _s = y.last(_e5).previousSibling;\n\n            i = _s || t.parentNode, o += y.sum(y.tail(_e5), ut.nodeLength), n = !_s;\n          } else {\n            if (i = t.childNodes[o] || t, ut.isText(i)) return e(i, 0);\n            o = 0, n = !1;\n          }\n\n          return {\n            node: i,\n            collapseToStart: n,\n            offset: o\n          };\n        },\n            o = document.body.createTextRange(),\n            i = e(t.node, t.offset);\n\n        return o.moveToElementText(i.node), o.collapse(i.collapseToStart), o.moveStart(\"character\", i.offset), o;\n      }\n\n      n.a.fn.extend({\n        summernote: function summernote() {\n          var t = n.a.type(y.head(arguments)),\n              e = \"string\" === t,\n              o = \"object\" === t,\n              i = n.a.extend({}, n.a.summernote.options, o ? y.head(arguments) : {});\n          i.langInfo = n.a.extend(!0, {}, n.a.summernote.lang[\"en-US\"], n.a.summernote.lang[i.lang]), i.icons = n.a.extend(!0, {}, n.a.summernote.options.icons, i.icons), i.tooltip = \"auto\" === i.tooltip ? !f.isSupportTouch : i.tooltip, this.each(function (t, e) {\n            var o = n()(e);\n\n            if (!o.data(\"summernote\")) {\n              var _t7 = new pt(o, i);\n\n              o.data(\"summernote\", _t7), o.data(\"summernote\").triggerEvent(\"init\", _t7.layoutInfo);\n            }\n          });\n          var s = this.first();\n\n          if (s.length) {\n            var _t8 = s.data(\"summernote\");\n\n            if (e) return _t8.invoke.apply(_t8, y.from(arguments));\n            i.focus && _t8.invoke(\"editor.focus\");\n          }\n\n          return this;\n        }\n      });\n\n      var gt =\n      /*#__PURE__*/\n      function () {\n        function gt(t, e, o, i) {\n          _classCallCheck(this, gt);\n\n          this.sc = t, this.so = e, this.ec = o, this.eo = i, this.isOnEditable = this.makeIsOn(ut.isEditable), this.isOnList = this.makeIsOn(ut.isList), this.isOnAnchor = this.makeIsOn(ut.isAnchor), this.isOnCell = this.makeIsOn(ut.isCell), this.isOnData = this.makeIsOn(ut.isData);\n        }\n\n        _createClass(gt, [{\n          key: \"nativeRange\",\n          value: function nativeRange() {\n            if (f.isW3CRangeSupport) {\n              var _t9 = document.createRange();\n\n              return _t9.setStart(this.sc, this.sc.data && this.so > this.sc.data.length ? 0 : this.so), _t9.setEnd(this.ec, this.sc.data ? Math.min(this.eo, this.sc.data.length) : this.eo), _t9;\n            }\n\n            {\n              var _t10 = ft({\n                node: this.sc,\n                offset: this.so\n              });\n\n              return _t10.setEndPoint(\"EndToEnd\", ft({\n                node: this.ec,\n                offset: this.eo\n              })), _t10;\n            }\n          }\n        }, {\n          key: \"getPoints\",\n          value: function getPoints() {\n            return {\n              sc: this.sc,\n              so: this.so,\n              ec: this.ec,\n              eo: this.eo\n            };\n          }\n        }, {\n          key: \"getStartPoint\",\n          value: function getStartPoint() {\n            return {\n              node: this.sc,\n              offset: this.so\n            };\n          }\n        }, {\n          key: \"getEndPoint\",\n          value: function getEndPoint() {\n            return {\n              node: this.ec,\n              offset: this.eo\n            };\n          }\n        }, {\n          key: \"select\",\n          value: function select() {\n            var t = this.nativeRange();\n\n            if (f.isW3CRangeSupport) {\n              var _e6 = document.getSelection();\n\n              _e6.rangeCount > 0 && _e6.removeAllRanges(), _e6.addRange(t);\n            } else t.select();\n\n            return this;\n          }\n        }, {\n          key: \"scrollIntoView\",\n          value: function scrollIntoView(t) {\n            var e = n()(t).height();\n            return t.scrollTop + e < this.sc.offsetTop && (t.scrollTop += Math.abs(t.scrollTop + e - this.sc.offsetTop)), this;\n          }\n        }, {\n          key: \"normalize\",\n          value: function normalize() {\n            var t = function t(_t11, e) {\n              if (!_t11) return _t11;\n              if (ut.isVisiblePoint(_t11) && (!ut.isEdgePoint(_t11) || ut.isRightEdgePoint(_t11) && !e || ut.isLeftEdgePoint(_t11) && e || ut.isRightEdgePoint(_t11) && e && ut.isVoid(_t11.node.nextSibling) || ut.isLeftEdgePoint(_t11) && !e && ut.isVoid(_t11.node.previousSibling) || ut.isBlock(_t11.node) && ut.isEmpty(_t11.node))) return _t11;\n              var o = ut.ancestor(_t11.node, ut.isBlock);\n              var i = !1;\n\n              if (!i) {\n                var _n3 = ut.prevPoint(_t11) || {\n                  node: null\n                };\n\n                i = (ut.isLeftEdgePointOf(_t11, o) || ut.isVoid(_n3.node)) && !e;\n              }\n\n              var n = !1;\n\n              if (!n) {\n                var _i10 = ut.nextPoint(_t11) || {\n                  node: null\n                };\n\n                n = (ut.isRightEdgePointOf(_t11, o) || ut.isVoid(_i10.node)) && e;\n              }\n\n              if (i || n) {\n                if (ut.isVisiblePoint(_t11)) return _t11;\n                e = !e;\n              }\n\n              return (e ? ut.nextPointUntil(ut.nextPoint(_t11), ut.isVisiblePoint) : ut.prevPointUntil(ut.prevPoint(_t11), ut.isVisiblePoint)) || _t11;\n            },\n                e = t(this.getEndPoint(), !1),\n                o = this.isCollapsed() ? e : t(this.getStartPoint(), !0);\n\n            return new gt(o.node, o.offset, e.node, e.offset);\n          }\n        }, {\n          key: \"nodes\",\n          value: function nodes(t, e) {\n            t = t || b.ok;\n            var o = e && e.includeAncestor,\n                i = e && e.fullyContains,\n                n = this.getStartPoint(),\n                s = this.getEndPoint(),\n                r = [],\n                a = [];\n            return ut.walkPoint(n, s, function (e) {\n              if (ut.isEditable(e.node)) return;\n              var n;\n              i ? (ut.isLeftEdgePoint(e) && a.push(e.node), ut.isRightEdgePoint(e) && y.contains(a, e.node) && (n = e.node)) : n = o ? ut.ancestor(e.node, t) : e.node, n && t(n) && r.push(n);\n            }, !0), y.unique(r);\n          }\n        }, {\n          key: \"commonAncestor\",\n          value: function commonAncestor() {\n            return ut.commonAncestor(this.sc, this.ec);\n          }\n        }, {\n          key: \"expand\",\n          value: function expand(t) {\n            var e = ut.ancestor(this.sc, t),\n                o = ut.ancestor(this.ec, t);\n            if (!e && !o) return new gt(this.sc, this.so, this.ec, this.eo);\n            var i = this.getPoints();\n            return e && (i.sc = e, i.so = 0), o && (i.ec = o, i.eo = ut.nodeLength(o)), new gt(i.sc, i.so, i.ec, i.eo);\n          }\n        }, {\n          key: \"collapse\",\n          value: function collapse(t) {\n            return t ? new gt(this.sc, this.so, this.sc, this.so) : new gt(this.ec, this.eo, this.ec, this.eo);\n          }\n        }, {\n          key: \"splitText\",\n          value: function splitText() {\n            var t = this.sc === this.ec,\n                e = this.getPoints();\n            return ut.isText(this.ec) && !ut.isEdgePoint(this.getEndPoint()) && this.ec.splitText(this.eo), ut.isText(this.sc) && !ut.isEdgePoint(this.getStartPoint()) && (e.sc = this.sc.splitText(this.so), e.so = 0, t && (e.ec = e.sc, e.eo = this.eo - this.so)), new gt(e.sc, e.so, e.ec, e.eo);\n          }\n        }, {\n          key: \"deleteContents\",\n          value: function deleteContents() {\n            if (this.isCollapsed()) return this;\n            var t = this.splitText(),\n                e = t.nodes(null, {\n              fullyContains: !0\n            }),\n                o = ut.prevPointUntil(t.getStartPoint(), function (t) {\n              return !y.contains(e, t.node);\n            }),\n                i = [];\n            return n.a.each(e, function (t, e) {\n              var n = e.parentNode;\n              o.node !== n && 1 === ut.nodeLength(n) && i.push(n), ut.remove(e, !1);\n            }), n.a.each(i, function (t, e) {\n              ut.remove(e, !1);\n            }), new gt(o.node, o.offset, o.node, o.offset).normalize();\n          }\n        }, {\n          key: \"makeIsOn\",\n          value: function makeIsOn(t) {\n            return function () {\n              var e = ut.ancestor(this.sc, t);\n              return !!e && e === ut.ancestor(this.ec, t);\n            };\n          }\n        }, {\n          key: \"isLeftEdgeOf\",\n          value: function isLeftEdgeOf(t) {\n            if (!ut.isLeftEdgePoint(this.getStartPoint())) return !1;\n            var e = ut.ancestor(this.sc, t);\n            return e && ut.isLeftEdgeOf(this.sc, e);\n          }\n        }, {\n          key: \"isCollapsed\",\n          value: function isCollapsed() {\n            return this.sc === this.ec && this.so === this.eo;\n          }\n        }, {\n          key: \"wrapBodyInlineWithPara\",\n          value: function wrapBodyInlineWithPara() {\n            if (ut.isBodyContainer(this.sc) && ut.isEmpty(this.sc)) return this.sc.innerHTML = ut.emptyPara, new gt(this.sc.firstChild, 0, this.sc.firstChild, 0);\n            var t = this.normalize();\n            if (ut.isParaInline(this.sc) || ut.isPara(this.sc)) return t;\n            var e;\n\n            if (ut.isInline(t.sc)) {\n              var _o9 = ut.listAncestor(t.sc, b.not(ut.isInline));\n\n              e = y.last(_o9), ut.isInline(e) || (e = _o9[_o9.length - 2] || t.sc.childNodes[t.so]);\n            } else e = t.sc.childNodes[t.so > 0 ? t.so - 1 : 0];\n\n            if (e) {\n              var _t12 = ut.listPrev(e, ut.isParaInline).reverse();\n\n              if (_t12 = _t12.concat(ut.listNext(e.nextSibling, ut.isParaInline)), _t12.length) {\n                var _e7 = ut.wrap(y.head(_t12), \"p\");\n\n                ut.appendChildNodes(_e7, y.tail(_t12));\n              }\n            }\n\n            return this.normalize();\n          }\n        }, {\n          key: \"insertNode\",\n          value: function insertNode(t) {\n            var e = this;\n            (ut.isText(t) || ut.isInline(t)) && (e = this.wrapBodyInlineWithPara().deleteContents());\n            var o = ut.splitPoint(e.getStartPoint(), ut.isInline(t));\n            return o.rightNode ? o.rightNode.parentNode.insertBefore(t, o.rightNode) : o.container.appendChild(t), t;\n          }\n        }, {\n          key: \"pasteHTML\",\n          value: function pasteHTML(t) {\n            t = n.a.trim(t);\n            var e = n()(\"<div></div>\").html(t)[0];\n            var o = y.from(e.childNodes);\n            var i = this;\n            return i.so >= 0 && (o = o.reverse()), o = o.map(function (t) {\n              return i.insertNode(t);\n            }), i.so > 0 && (o = o.reverse()), o;\n          }\n        }, {\n          key: \"toString\",\n          value: function toString() {\n            var t = this.nativeRange();\n            return f.isW3CRangeSupport ? t.toString() : t.text;\n          }\n        }, {\n          key: \"getWordRange\",\n          value: function getWordRange(t) {\n            var e = this.getEndPoint();\n            if (!ut.isCharPoint(e)) return this;\n            var o = ut.prevPointUntil(e, function (t) {\n              return !ut.isCharPoint(t);\n            });\n            return t && (e = ut.nextPointUntil(e, function (t) {\n              return !ut.isCharPoint(t);\n            })), new gt(o.node, o.offset, e.node, e.offset);\n          }\n        }, {\n          key: \"getWordsRange\",\n          value: function getWordsRange(t) {\n            var e = this.getEndPoint(),\n                o = function o(t) {\n              return !ut.isCharPoint(t) && !ut.isSpacePoint(t);\n            };\n\n            if (o(e)) return this;\n            var i = ut.prevPointUntil(e, o);\n            return t && (e = ut.nextPointUntil(e, o)), new gt(i.node, i.offset, e.node, e.offset);\n          }\n        }, {\n          key: \"getWordsMatchRange\",\n          value: function getWordsMatchRange(t) {\n            var e = this.getEndPoint(),\n                o = ut.prevPointUntil(e, function (o) {\n              if (!ut.isCharPoint(o) && !ut.isSpacePoint(o)) return !0;\n              var i = new gt(o.node, o.offset, e.node, e.offset),\n                  n = t.exec(i.toString());\n              return n && 0 === n.index;\n            }),\n                i = new gt(o.node, o.offset, e.node, e.offset),\n                n = i.toString(),\n                s = t.exec(n);\n            return s && s[0].length === n.length ? i : null;\n          }\n        }, {\n          key: \"bookmark\",\n          value: function bookmark(t) {\n            return {\n              s: {\n                path: ut.makeOffsetPath(t, this.sc),\n                offset: this.so\n              },\n              e: {\n                path: ut.makeOffsetPath(t, this.ec),\n                offset: this.eo\n              }\n            };\n          }\n        }, {\n          key: \"paraBookmark\",\n          value: function paraBookmark(t) {\n            return {\n              s: {\n                path: y.tail(ut.makeOffsetPath(y.head(t), this.sc)),\n                offset: this.so\n              },\n              e: {\n                path: y.tail(ut.makeOffsetPath(y.last(t), this.ec)),\n                offset: this.eo\n              }\n            };\n          }\n        }, {\n          key: \"getClientRects\",\n          value: function getClientRects() {\n            return this.nativeRange().getClientRects();\n          }\n        }]);\n\n        return gt;\n      }();\n\n      var bt = {\n        create: function create(t, e, o, i) {\n          if (4 === arguments.length) return new gt(t, e, o, i);\n          if (2 === arguments.length) return new gt(t, e, o = t, i = e);\n          {\n            var _t13 = this.createFromSelection();\n\n            if (!_t13 && 1 === arguments.length) {\n              var _t14 = arguments[0];\n              return ut.isEditable(_t14) && (_t14 = _t14.lastChild), this.createFromBodyElement(_t14, ut.emptyPara === arguments[0].innerHTML);\n            }\n\n            return _t13;\n          }\n        },\n        createFromBodyElement: function createFromBodyElement(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n          return this.createFromNode(t).collapse(e);\n        },\n        createFromSelection: function createFromSelection() {\n          var t, e, o, i;\n\n          if (f.isW3CRangeSupport) {\n            var _n4 = document.getSelection();\n\n            if (!_n4 || 0 === _n4.rangeCount) return null;\n            if (ut.isBody(_n4.anchorNode)) return null;\n\n            var _s2 = _n4.getRangeAt(0);\n\n            t = _s2.startContainer, e = _s2.startOffset, o = _s2.endContainer, i = _s2.endOffset;\n          } else {\n            var _n5 = document.selection.createRange(),\n                _s3 = _n5.duplicate();\n\n            _s3.collapse(!1);\n\n            var _r2 = _n5;\n\n            _r2.collapse(!0);\n\n            var _a2 = mt(_r2, !0),\n                _l2 = mt(_s3, !1);\n\n            ut.isText(_a2.node) && ut.isLeftEdgePoint(_a2) && ut.isTextNode(_l2.node) && ut.isRightEdgePoint(_l2) && _l2.node.nextSibling === _a2.node && (_a2 = _l2), t = _a2.cont, e = _a2.offset, o = _l2.cont, i = _l2.offset;\n          }\n\n          return new gt(t, e, o, i);\n        },\n        createFromNode: function createFromNode(t) {\n          var e = t,\n              o = 0,\n              i = t,\n              n = ut.nodeLength(i);\n          return ut.isVoid(e) && (o = ut.listPrev(e).length - 1, e = e.parentNode), ut.isBR(i) ? (n = ut.listPrev(i).length - 1, i = i.parentNode) : ut.isVoid(i) && (n = ut.listPrev(i).length, i = i.parentNode), this.create(e, o, i, n);\n        },\n        createFromNodeBefore: function createFromNodeBefore(t) {\n          return this.createFromNode(t).collapse(!0);\n        },\n        createFromNodeAfter: function createFromNodeAfter(t) {\n          return this.createFromNode(t).collapse();\n        },\n        createFromBookmark: function createFromBookmark(t, e) {\n          var o = ut.fromOffsetPath(t, e.s.path),\n              i = e.s.offset,\n              n = ut.fromOffsetPath(t, e.e.path),\n              s = e.e.offset;\n          return new gt(o, i, n, s);\n        },\n        createFromParaBookmark: function createFromParaBookmark(t, e) {\n          var o = t.s.offset,\n              i = t.e.offset,\n              n = ut.fromOffsetPath(y.head(e), t.s.path),\n              s = ut.fromOffsetPath(y.last(e), t.e.path);\n          return new gt(n, o, s, i);\n        }\n      };\n      var vt = {\n        BACKSPACE: 8,\n        TAB: 9,\n        ENTER: 13,\n        SPACE: 32,\n        DELETE: 46,\n        LEFT: 37,\n        UP: 38,\n        RIGHT: 39,\n        DOWN: 40,\n        NUM0: 48,\n        NUM1: 49,\n        NUM2: 50,\n        NUM3: 51,\n        NUM4: 52,\n        NUM5: 53,\n        NUM6: 54,\n        NUM7: 55,\n        NUM8: 56,\n        B: 66,\n        E: 69,\n        I: 73,\n        J: 74,\n        K: 75,\n        L: 76,\n        R: 82,\n        S: 83,\n        U: 85,\n        V: 86,\n        Y: 89,\n        Z: 90,\n        SLASH: 191,\n        LEFTBRACKET: 219,\n        BACKSLASH: 220,\n        RIGHTBRACKET: 221,\n        HOME: 36,\n        END: 35,\n        PAGEUP: 33,\n        PAGEDOWN: 34\n      };\n      var kt = {\n        isEdit: function isEdit(t) {\n          return y.contains([vt.BACKSPACE, vt.TAB, vt.ENTER, vt.SPACE, vt.DELETE], t);\n        },\n        isMove: function isMove(t) {\n          return y.contains([vt.LEFT, vt.UP, vt.RIGHT, vt.DOWN], t);\n        },\n        isNavigation: function isNavigation(t) {\n          return y.contains([vt.HOME, vt.END, vt.PAGEUP, vt.PAGEDOWN], t);\n        },\n        nameFromCode: b.invertObject(vt),\n        code: vt\n      };\n\n      var Ct =\n      /*#__PURE__*/\n      function () {\n        function Ct(t) {\n          _classCallCheck(this, Ct);\n\n          this.stack = [], this.stackOffset = -1, this.$editable = t, this.editable = t[0];\n        }\n\n        _createClass(Ct, [{\n          key: \"makeSnapshot\",\n          value: function makeSnapshot() {\n            var t = bt.create(this.editable);\n            return {\n              contents: this.$editable.html(),\n              bookmark: t && t.isOnEditable() ? t.bookmark(this.editable) : {\n                s: {\n                  path: [],\n                  offset: 0\n                },\n                e: {\n                  path: [],\n                  offset: 0\n                }\n              }\n            };\n          }\n        }, {\n          key: \"applySnapshot\",\n          value: function applySnapshot(t) {\n            null !== t.contents && this.$editable.html(t.contents), null !== t.bookmark && bt.createFromBookmark(this.editable, t.bookmark).select();\n          }\n        }, {\n          key: \"rewind\",\n          value: function rewind() {\n            this.$editable.html() !== this.stack[this.stackOffset].contents && this.recordUndo(), this.stackOffset = 0, this.applySnapshot(this.stack[this.stackOffset]);\n          }\n        }, {\n          key: \"commit\",\n          value: function commit() {\n            this.stack = [], this.stackOffset = -1, this.recordUndo();\n          }\n        }, {\n          key: \"reset\",\n          value: function reset() {\n            this.stack = [], this.stackOffset = -1, this.$editable.html(\"\"), this.recordUndo();\n          }\n        }, {\n          key: \"undo\",\n          value: function undo() {\n            this.$editable.html() !== this.stack[this.stackOffset].contents && this.recordUndo(), this.stackOffset > 0 && (this.stackOffset--, this.applySnapshot(this.stack[this.stackOffset]));\n          }\n        }, {\n          key: \"redo\",\n          value: function redo() {\n            this.stack.length - 1 > this.stackOffset && (this.stackOffset++, this.applySnapshot(this.stack[this.stackOffset]));\n          }\n        }, {\n          key: \"recordUndo\",\n          value: function recordUndo() {\n            this.stackOffset++, this.stack.length > this.stackOffset && (this.stack = this.stack.slice(0, this.stackOffset)), this.stack.push(this.makeSnapshot());\n          }\n        }]);\n\n        return Ct;\n      }();\n\n      var wt =\n      /*#__PURE__*/\n      function () {\n        function wt() {\n          _classCallCheck(this, wt);\n        }\n\n        _createClass(wt, [{\n          key: \"jQueryCSS\",\n          value: function jQueryCSS(t, e) {\n            if (f.jqueryVersion < 1.9) {\n              var _o10 = {};\n              return n.a.each(e, function (e, i) {\n                _o10[i] = t.css(i);\n              }), _o10;\n            }\n\n            return t.css(e);\n          }\n        }, {\n          key: \"fromNode\",\n          value: function fromNode(t) {\n            var e = this.jQueryCSS(t, [\"font-family\", \"font-size\", \"text-align\", \"list-style-type\", \"line-height\"]) || {},\n                o = t[0].style.fontSize || e[\"font-size\"];\n            return e[\"font-size\"] = parseInt(o, 10), e[\"font-size-unit\"] = o.match(/[a-z%]+$/), e;\n          }\n        }, {\n          key: \"stylePara\",\n          value: function stylePara(t, e) {\n            n.a.each(t.nodes(ut.isPara, {\n              includeAncestor: !0\n            }), function (t, o) {\n              n()(o).css(e);\n            });\n          }\n        }, {\n          key: \"styleNodes\",\n          value: function styleNodes(t, e) {\n            t = t.splitText();\n            var o = e && e.nodeName || \"SPAN\",\n                i = !(!e || !e.expandClosestSibling),\n                s = !(!e || !e.onlyPartialContains);\n            if (t.isCollapsed()) return [t.insertNode(ut.create(o))];\n            var r = ut.makePredByNodeName(o);\n            var a = t.nodes(ut.isText, {\n              fullyContains: !0\n            }).map(function (t) {\n              return ut.singleChildAncestor(t, r) || ut.wrap(t, o);\n            });\n\n            if (i) {\n              if (s) {\n                var _e8 = t.nodes();\n\n                r = b.and(r, function (t) {\n                  return y.contains(_e8, t);\n                });\n              }\n\n              return a.map(function (t) {\n                var e = ut.withClosestSiblings(t, r),\n                    o = y.head(e),\n                    i = y.tail(e);\n                return n.a.each(i, function (t, e) {\n                  ut.appendChildNodes(o, e.childNodes), ut.remove(e);\n                }), y.head(e);\n              });\n            }\n\n            return a;\n          }\n        }, {\n          key: \"current\",\n          value: function current(t) {\n            var e = n()(ut.isElement(t.sc) ? t.sc : t.sc.parentNode);\n            var o = this.fromNode(e);\n\n            try {\n              o = n.a.extend(o, {\n                \"font-bold\": document.queryCommandState(\"bold\") ? \"bold\" : \"normal\",\n                \"font-italic\": document.queryCommandState(\"italic\") ? \"italic\" : \"normal\",\n                \"font-underline\": document.queryCommandState(\"underline\") ? \"underline\" : \"normal\",\n                \"font-subscript\": document.queryCommandState(\"subscript\") ? \"subscript\" : \"normal\",\n                \"font-superscript\": document.queryCommandState(\"superscript\") ? \"superscript\" : \"normal\",\n                \"font-strikethrough\": document.queryCommandState(\"strikethrough\") ? \"strikethrough\" : \"normal\",\n                \"font-family\": document.queryCommandValue(\"fontname\") || o[\"font-family\"]\n              });\n            } catch (t) {}\n\n            if (t.isOnList()) {\n              var _t15 = [\"circle\", \"disc\", \"disc-leading-zero\", \"square\"].indexOf(o[\"list-style-type\"]) > -1;\n\n              o[\"list-style\"] = _t15 ? \"unordered\" : \"ordered\";\n            } else o[\"list-style\"] = \"none\";\n\n            var i = ut.ancestor(t.sc, ut.isPara);\n            if (i && i.style[\"line-height\"]) o[\"line-height\"] = i.style.lineHeight;else {\n              var _t16 = parseInt(o[\"line-height\"], 10) / parseInt(o[\"font-size\"], 10);\n\n              o[\"line-height\"] = _t16.toFixed(1);\n            }\n            return o.anchor = t.isOnAnchor() && ut.ancestor(t.sc, ut.isAnchor), o.ancestors = ut.listAncestor(t.sc, ut.isEditable), o.range = t, o;\n          }\n        }]);\n\n        return wt;\n      }();\n\n      var yt =\n      /*#__PURE__*/\n      function () {\n        function yt() {\n          _classCallCheck(this, yt);\n        }\n\n        _createClass(yt, [{\n          key: \"insertOrderedList\",\n          value: function insertOrderedList(t) {\n            this.toggleList(\"OL\", t);\n          }\n        }, {\n          key: \"insertUnorderedList\",\n          value: function insertUnorderedList(t) {\n            this.toggleList(\"UL\", t);\n          }\n        }, {\n          key: \"indent\",\n          value: function indent(t) {\n            var _this5 = this;\n\n            var e = bt.create(t).wrapBodyInlineWithPara(),\n                o = e.nodes(ut.isPara, {\n              includeAncestor: !0\n            }),\n                i = y.clusterBy(o, b.peq2(\"parentNode\"));\n            n.a.each(i, function (t, e) {\n              var o = y.head(e);\n\n              if (ut.isLi(o)) {\n                var _t17 = _this5.findList(o.previousSibling);\n\n                _t17 ? e.map(function (e) {\n                  return _t17.appendChild(e);\n                }) : (_this5.wrapList(e, o.parentNode.nodeName), e.map(function (t) {\n                  return t.parentNode;\n                }).map(function (t) {\n                  return _this5.appendToPrevious(t);\n                }));\n              } else n.a.each(e, function (t, e) {\n                n()(e).css(\"marginLeft\", function (t, e) {\n                  return (parseInt(e, 10) || 0) + 25;\n                });\n              });\n            }), e.select();\n          }\n        }, {\n          key: \"outdent\",\n          value: function outdent(t) {\n            var _this6 = this;\n\n            var e = bt.create(t).wrapBodyInlineWithPara(),\n                o = e.nodes(ut.isPara, {\n              includeAncestor: !0\n            }),\n                i = y.clusterBy(o, b.peq2(\"parentNode\"));\n            n.a.each(i, function (t, e) {\n              var o = y.head(e);\n              ut.isLi(o) ? _this6.releaseList([e]) : n.a.each(e, function (t, e) {\n                n()(e).css(\"marginLeft\", function (t, e) {\n                  return (e = parseInt(e, 10) || 0) > 25 ? e - 25 : \"\";\n                });\n              });\n            }), e.select();\n          }\n        }, {\n          key: \"toggleList\",\n          value: function toggleList(t, e) {\n            var _this7 = this;\n\n            var o = bt.create(e).wrapBodyInlineWithPara();\n            var i = o.nodes(ut.isPara, {\n              includeAncestor: !0\n            });\n            var s = o.paraBookmark(i),\n                r = y.clusterBy(i, b.peq2(\"parentNode\"));\n\n            if (y.find(i, ut.isPurePara)) {\n              var _e9 = [];\n              n.a.each(r, function (o, i) {\n                _e9 = _e9.concat(_this7.wrapList(i, t));\n              }), i = _e9;\n            } else {\n              var _e10 = o.nodes(ut.isList, {\n                includeAncestor: !0\n              }).filter(function (e) {\n                return !n.a.nodeName(e, t);\n              });\n\n              _e10.length ? n.a.each(_e10, function (e, o) {\n                ut.replace(o, t);\n              }) : i = this.releaseList(r, !0);\n            }\n\n            bt.createFromParaBookmark(s, i).select();\n          }\n        }, {\n          key: \"wrapList\",\n          value: function wrapList(t, e) {\n            var o = y.head(t),\n                i = y.last(t),\n                n = ut.isList(o.previousSibling) && o.previousSibling,\n                s = ut.isList(i.nextSibling) && i.nextSibling,\n                r = n || ut.insertAfter(ut.create(e || \"UL\"), i);\n            return t = t.map(function (t) {\n              return ut.isPurePara(t) ? ut.replace(t, \"LI\") : t;\n            }), ut.appendChildNodes(r, t), s && (ut.appendChildNodes(r, y.from(s.childNodes)), ut.remove(s)), t;\n          }\n        }, {\n          key: \"releaseList\",\n          value: function releaseList(t, e) {\n            var _this8 = this;\n\n            var o = [];\n            return n.a.each(t, function (t, i) {\n              var s = y.head(i),\n                  r = y.last(i),\n                  a = e ? ut.lastAncestor(s, ut.isList) : s.parentNode,\n                  l = a.parentNode;\n              if (\"LI\" === a.parentNode.nodeName) i.map(function (t) {\n                var e = _this8.findNextSiblings(t);\n\n                l.nextSibling ? l.parentNode.insertBefore(t, l.nextSibling) : l.parentNode.appendChild(t), e.length && (_this8.wrapList(e, a.nodeName), t.appendChild(e[0].parentNode));\n              }), 0 === a.children.length && l.removeChild(a), 0 === l.childNodes.length && l.parentNode.removeChild(l);else {\n                var _t18 = a.childNodes.length > 1 ? ut.splitTree(a, {\n                  node: r.parentNode,\n                  offset: ut.position(r) + 1\n                }, {\n                  isSkipPaddingBlankHTML: !0\n                }) : null,\n                    _o11 = ut.splitTree(a, {\n                  node: s.parentNode,\n                  offset: ut.position(s)\n                }, {\n                  isSkipPaddingBlankHTML: !0\n                });\n\n                i = e ? ut.listDescendant(_o11, ut.isLi) : y.from(_o11.childNodes).filter(ut.isLi), !e && ut.isList(a.parentNode) || (i = i.map(function (t) {\n                  return ut.replace(t, \"P\");\n                })), n.a.each(y.from(i).reverse(), function (t, e) {\n                  ut.insertAfter(e, a);\n                });\n\n                var _l3 = y.compact([a, _o11, _t18]);\n\n                n.a.each(_l3, function (t, e) {\n                  var o = [e].concat(ut.listDescendant(e, ut.isList));\n                  n.a.each(o.reverse(), function (t, e) {\n                    ut.nodeLength(e) || ut.remove(e, !0);\n                  });\n                });\n              }\n              o = o.concat(i);\n            }), o;\n          }\n        }, {\n          key: \"appendToPrevious\",\n          value: function appendToPrevious(t) {\n            return t.previousSibling ? ut.appendChildNodes(t.previousSibling, [t]) : this.wrapList([t], \"LI\");\n          }\n        }, {\n          key: \"findList\",\n          value: function findList(t) {\n            return t ? y.find(t.children, function (t) {\n              return [\"OL\", \"UL\"].indexOf(t.nodeName) > -1;\n            }) : null;\n          }\n        }, {\n          key: \"findNextSiblings\",\n          value: function findNextSiblings(t) {\n            var e = [];\n\n            for (; t.nextSibling;) {\n              e.push(t.nextSibling), t = t.nextSibling;\n            }\n\n            return e;\n          }\n        }]);\n\n        return yt;\n      }();\n\n      var xt =\n      /*#__PURE__*/\n      function () {\n        function xt(t) {\n          _classCallCheck(this, xt);\n\n          this.bullet = new yt(), this.options = t.options;\n        }\n\n        _createClass(xt, [{\n          key: \"insertTab\",\n          value: function insertTab(t, e) {\n            var o = ut.createText(new Array(e + 1).join(ut.NBSP_CHAR));\n            (t = t.deleteContents()).insertNode(o, !0), (t = bt.create(o, e)).select();\n          }\n        }, {\n          key: \"insertParagraph\",\n          value: function insertParagraph(t, e) {\n            e = (e = (e = e || bt.create(t)).deleteContents()).wrapBodyInlineWithPara();\n            var o = ut.ancestor(e.sc, ut.isPara);\n            var i;\n\n            if (o) {\n              if (ut.isLi(o) && (ut.isEmpty(o) || ut.deepestChildIsEmpty(o))) return void this.bullet.toggleList(o.parentNode.nodeName);\n              {\n                var _t19 = null;\n\n                if (1 === this.options.blockquoteBreakingLevel ? _t19 = ut.ancestor(o, ut.isBlockquote) : 2 === this.options.blockquoteBreakingLevel && (_t19 = ut.lastAncestor(o, ut.isBlockquote)), _t19) {\n                  i = n()(ut.emptyPara)[0], ut.isRightEdgePoint(e.getStartPoint()) && ut.isBR(e.sc.nextSibling) && n()(e.sc.nextSibling).remove();\n\n                  var _o12 = ut.splitTree(_t19, e.getStartPoint(), {\n                    isDiscardEmptySplits: !0\n                  });\n\n                  _o12 ? _o12.parentNode.insertBefore(i, _o12) : ut.insertAfter(i, _t19);\n                } else {\n                  i = ut.splitTree(o, e.getStartPoint());\n\n                  var _t20 = ut.listDescendant(o, ut.isEmptyAnchor);\n\n                  _t20 = _t20.concat(ut.listDescendant(i, ut.isEmptyAnchor)), n.a.each(_t20, function (t, e) {\n                    ut.remove(e);\n                  }), (ut.isHeading(i) || ut.isPre(i) || ut.isCustomStyleTag(i)) && ut.isEmpty(i) && (i = ut.replace(i, \"p\"));\n                }\n              }\n            } else {\n              var _t21 = e.sc.childNodes[e.so];\n              i = n()(ut.emptyPara)[0], _t21 ? e.sc.insertBefore(i, _t21) : e.sc.appendChild(i);\n            }\n\n            bt.create(i, 0).normalize().select().scrollIntoView(t);\n          }\n        }]);\n\n        return xt;\n      }();\n\n      var St = function St(t, e, o, i) {\n        var n = {\n          colPos: 0,\n          rowPos: 0\n        },\n            s = [],\n            r = [];\n\n        function a(t, e, o, i, n, r, a) {\n          var l = {\n            baseRow: o,\n            baseCell: i,\n            isRowSpan: n,\n            isColSpan: r,\n            isVirtual: a\n          };\n          s[t] || (s[t] = []), s[t][e] = l;\n        }\n\n        function l(t, e, o, i) {\n          return {\n            baseCell: t.baseCell,\n            action: e,\n            virtualTable: {\n              rowIndex: o,\n              cellIndex: i\n            }\n          };\n        }\n\n        function c(t, e) {\n          if (!s[t]) return e;\n          if (!s[t][e]) return e;\n          var o = e;\n\n          for (; s[t][o];) {\n            if (o++, !s[t][o]) return o;\n          }\n        }\n\n        function h(t, e) {\n          var o = c(t.rowIndex, e.cellIndex),\n              i = e.colSpan > 1,\n              s = e.rowSpan > 1,\n              r = t.rowIndex === n.rowPos && e.cellIndex === n.colPos;\n          a(t.rowIndex, o, t, e, s, i, !1);\n          var l = e.attributes.rowSpan ? parseInt(e.attributes.rowSpan.value, 10) : 0;\n          if (l > 1) for (var _n6 = 1; _n6 < l; _n6++) {\n            var _s4 = t.rowIndex + _n6;\n\n            d(_s4, o, e, r), a(_s4, o, t, e, !0, i, !0);\n          }\n          var h = e.attributes.colSpan ? parseInt(e.attributes.colSpan.value, 10) : 0;\n          if (h > 1) for (var _i11 = 1; _i11 < h; _i11++) {\n            var _n7 = c(t.rowIndex, o + _i11);\n\n            d(t.rowIndex, _n7, e, r), a(t.rowIndex, _n7, t, e, s, !0, !0);\n          }\n        }\n\n        function d(t, e, o, i) {\n          t === n.rowPos && n.colPos >= o.cellIndex && o.cellIndex <= e && !i && n.colPos++;\n        }\n\n        function u(t) {\n          switch (e) {\n            case St.where.Column:\n              if (t.isColSpan) return St.resultAction.SubtractSpanCount;\n              break;\n\n            case St.where.Row:\n              if (!t.isVirtual && t.isRowSpan) return St.resultAction.AddCell;\n              if (t.isRowSpan) return St.resultAction.SubtractSpanCount;\n          }\n\n          return St.resultAction.RemoveCell;\n        }\n\n        function p(t) {\n          switch (e) {\n            case St.where.Column:\n              if (t.isColSpan) return St.resultAction.SumSpanCount;\n              if (t.isRowSpan && t.isVirtual) return St.resultAction.Ignore;\n              break;\n\n            case St.where.Row:\n              if (t.isRowSpan) return St.resultAction.SumSpanCount;\n              if (t.isColSpan && t.isVirtual) return St.resultAction.Ignore;\n          }\n\n          return St.resultAction.AddCell;\n        }\n\n        this.getActionList = function () {\n          var t = e === St.where.Row ? n.rowPos : -1,\n              i = e === St.where.Column ? n.colPos : -1;\n          var a = 0,\n              c = !0;\n\n          for (; c;) {\n            var _e11 = t >= 0 ? t : a,\n                _n8 = i >= 0 ? i : a,\n                _h = s[_e11];\n\n            if (!_h) return c = !1, r;\n            var _d = _h[_n8];\n            if (!_d) return c = !1, r;\n            var _m = St.resultAction.Ignore;\n\n            switch (o) {\n              case St.requestAction.Add:\n                _m = p(_d);\n                break;\n\n              case St.requestAction.Delete:\n                _m = u(_d);\n            }\n\n            r.push(l(_d, _m, _e11, _n8)), a++;\n          }\n\n          return r;\n        }, t && t.tagName && (\"td\" === t.tagName.toLowerCase() || \"th\" === t.tagName.toLowerCase()) ? (n.colPos = t.cellIndex, t.parentElement && t.parentElement.tagName && \"tr\" === t.parentElement.tagName.toLowerCase() ? n.rowPos = t.parentElement.rowIndex : console.error(\"Impossible to identify start Row point.\", t)) : console.error(\"Impossible to identify start Cell point.\", t), function () {\n          var t = i.rows;\n\n          for (var _e12 = 0; _e12 < t.length; _e12++) {\n            var _o13 = t[_e12].cells;\n\n            for (var _i12 = 0; _i12 < _o13.length; _i12++) {\n              h(t[_e12], _o13[_i12]);\n            }\n          }\n        }();\n      };\n\n      St.where = {\n        Row: 0,\n        Column: 1\n      }, St.requestAction = {\n        Add: 0,\n        Delete: 1\n      }, St.resultAction = {\n        Ignore: 0,\n        SubtractSpanCount: 1,\n        RemoveCell: 2,\n        AddCell: 3,\n        SumSpanCount: 4\n      };\n\n      var $t =\n      /*#__PURE__*/\n      function () {\n        function $t() {\n          _classCallCheck(this, $t);\n        }\n\n        _createClass($t, [{\n          key: \"tab\",\n          value: function tab(t, e) {\n            var o = ut.ancestor(t.commonAncestor(), ut.isCell),\n                i = ut.ancestor(o, ut.isTable),\n                n = ut.listDescendant(i, ut.isCell),\n                s = y[e ? \"prev\" : \"next\"](n, o);\n            s && bt.create(s, 0).select();\n          }\n        }, {\n          key: \"addRow\",\n          value: function addRow(t, e) {\n            var o = ut.ancestor(t.commonAncestor(), ut.isCell),\n                i = n()(o).closest(\"tr\"),\n                s = this.recoverAttributes(i),\n                r = n()(\"<tr\" + s + \"></tr>\"),\n                a = new St(o, St.where.Row, St.requestAction.Add, n()(i).closest(\"table\")[0]).getActionList();\n\n            for (var _t22 = 0; _t22 < a.length; _t22++) {\n              var _o14 = a[_t22],\n                  _s5 = this.recoverAttributes(_o14.baseCell);\n\n              switch (_o14.action) {\n                case St.resultAction.AddCell:\n                  r.append(\"<td\" + _s5 + \">\" + ut.blank + \"</td>\");\n                  break;\n\n                case St.resultAction.SumSpanCount:\n                  if (\"top\" === e) {\n                    if ((_o14.baseCell.parent ? _o14.baseCell.closest(\"tr\").rowIndex : 0) <= i[0].rowIndex) {\n                      var _t24 = n()(\"<div></div>\").append(n()(\"<td\" + _s5 + \">\" + ut.blank + \"</td>\").removeAttr(\"rowspan\")).html();\n\n                      r.append(_t24);\n                      break;\n                    }\n                  }\n\n                  var _t23 = parseInt(_o14.baseCell.rowSpan, 10);\n\n                  _t23++, _o14.baseCell.setAttribute(\"rowSpan\", _t23);\n              }\n            }\n\n            if (\"top\" === e) i.before(r);else {\n              if (o.rowSpan > 1) {\n                var _t25 = i[0].rowIndex + (o.rowSpan - 2);\n\n                return void n()(n()(i).parent().find(\"tr\")[_t25]).after(n()(r));\n              }\n\n              i.after(r);\n            }\n          }\n        }, {\n          key: \"addCol\",\n          value: function addCol(t, e) {\n            var o = ut.ancestor(t.commonAncestor(), ut.isCell),\n                i = n()(o).closest(\"tr\");\n            n()(i).siblings().push(i);\n            var s = new St(o, St.where.Column, St.requestAction.Add, n()(i).closest(\"table\")[0]).getActionList();\n\n            for (var _t26 = 0; _t26 < s.length; _t26++) {\n              var _o15 = s[_t26],\n                  _i13 = this.recoverAttributes(_o15.baseCell);\n\n              switch (_o15.action) {\n                case St.resultAction.AddCell:\n                  \"right\" === e ? n()(_o15.baseCell).after(\"<td\" + _i13 + \">\" + ut.blank + \"</td>\") : n()(_o15.baseCell).before(\"<td\" + _i13 + \">\" + ut.blank + \"</td>\");\n                  break;\n\n                case St.resultAction.SumSpanCount:\n                  if (\"right\" === e) {\n                    var _t27 = parseInt(_o15.baseCell.colSpan, 10);\n\n                    _t27++, _o15.baseCell.setAttribute(\"colSpan\", _t27);\n                  } else n()(_o15.baseCell).before(\"<td\" + _i13 + \">\" + ut.blank + \"</td>\");\n\n              }\n            }\n          }\n        }, {\n          key: \"recoverAttributes\",\n          value: function recoverAttributes(t) {\n            var e = \"\";\n            if (!t) return e;\n            var o = t.attributes || [];\n\n            for (var _t28 = 0; _t28 < o.length; _t28++) {\n              \"id\" !== o[_t28].name.toLowerCase() && o[_t28].specified && (e += \" \" + o[_t28].name + \"='\" + o[_t28].value + \"'\");\n            }\n\n            return e;\n          }\n        }, {\n          key: \"deleteRow\",\n          value: function deleteRow(t) {\n            var e = ut.ancestor(t.commonAncestor(), ut.isCell),\n                o = n()(e).closest(\"tr\"),\n                i = o.children(\"td, th\").index(n()(e)),\n                s = o[0].rowIndex,\n                r = new St(e, St.where.Row, St.requestAction.Delete, n()(o).closest(\"table\")[0]).getActionList();\n\n            for (var _t29 = 0; _t29 < r.length; _t29++) {\n              if (!r[_t29]) continue;\n\n              var _e13 = r[_t29].baseCell,\n                  _n9 = r[_t29].virtualTable,\n                  _a3 = _e13.rowSpan && _e13.rowSpan > 1;\n\n              var _l4 = _a3 ? parseInt(_e13.rowSpan, 10) : 0;\n\n              switch (_r3[_t30].action) {\n                case St.resultAction.Ignore:\n                  continue;\n\n                case St.resultAction.AddCell:\n                  var _t30 = o.next(\"tr\")[0];\n                  if (!_t30) continue;\n                  var _r3 = o[0].cells[i];\n                  _a3 && (_l4 > 2 ? (_l4--, _t30.insertBefore(_r3, _t30.cells[i]), _t30.cells[i].setAttribute(\"rowSpan\", _l4), _t30.cells[i].innerHTML = \"\") : 2 === _l4 && (_t30.insertBefore(_r3, _t30.cells[i]), _t30.cells[i].removeAttribute(\"rowSpan\"), _t30.cells[i].innerHTML = \"\"));\n                  continue;\n\n                case St.resultAction.SubtractSpanCount:\n                  _a3 && (_l4 > 2 ? (_l4--, _e13.setAttribute(\"rowSpan\", _l4), _n9.rowIndex !== s && _e13.cellIndex === i && (_e13.innerHTML = \"\")) : 2 === _l4 && (_e13.removeAttribute(\"rowSpan\"), _n9.rowIndex !== s && _e13.cellIndex === i && (_e13.innerHTML = \"\")));\n                  continue;\n\n                case St.resultAction.RemoveCell:\n                  continue;\n              }\n            }\n\n            o.remove();\n          }\n        }, {\n          key: \"deleteCol\",\n          value: function deleteCol(t) {\n            var e = ut.ancestor(t.commonAncestor(), ut.isCell),\n                o = n()(e).closest(\"tr\"),\n                i = o.children(\"td, th\").index(n()(e)),\n                s = new St(e, St.where.Column, St.requestAction.Delete, n()(o).closest(\"table\")[0]).getActionList();\n\n            for (var _t31 = 0; _t31 < s.length; _t31++) {\n              if (s[_t31]) switch (s[_t31].action) {\n                case St.resultAction.Ignore:\n                  continue;\n\n                case St.resultAction.SubtractSpanCount:\n                  var _e14 = s[_t31].baseCell;\n\n                  if (_e14.colSpan && _e14.colSpan > 1) {\n                    var _t32 = _e14.colSpan ? parseInt(_e14.colSpan, 10) : 0;\n\n                    _t32 > 2 ? (_t32--, _e14.setAttribute(\"colSpan\", _t32), _e14.cellIndex === i && (_e14.innerHTML = \"\")) : 2 === _t32 && (_e14.removeAttribute(\"colSpan\"), _e14.cellIndex === i && (_e14.innerHTML = \"\"));\n                  }\n\n                  continue;\n\n                case St.resultAction.RemoveCell:\n                  ut.remove(s[_t31].baseCell, !0);\n                  continue;\n              }\n            }\n          }\n        }, {\n          key: \"createTable\",\n          value: function createTable(t, e, o) {\n            var i = [];\n            var s;\n\n            for (var _e15 = 0; _e15 < t; _e15++) {\n              i.push(\"<td>\" + ut.blank + \"</td>\");\n            }\n\n            s = i.join(\"\");\n            var r = [];\n            var a;\n\n            for (var _t33 = 0; _t33 < e; _t33++) {\n              r.push(\"<tr>\" + s + \"</tr>\");\n            }\n\n            a = r.join(\"\");\n            var l = n()(\"<table>\" + a + \"</table>\");\n            return o && o.tableClassName && l.addClass(o.tableClassName), l[0];\n          }\n        }, {\n          key: \"deleteTable\",\n          value: function deleteTable(t) {\n            var e = ut.ancestor(t.commonAncestor(), ut.isCell);\n            n()(e).closest(\"table\").remove();\n          }\n        }]);\n\n        return $t;\n      }();\n\n      var It;\n      f.hasCodeMirror && (It = window.CodeMirror);\n      var Tt = /^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i;\n      n.a.summernote = n.a.extend(n.a.summernote, {\n        version: \"0.8.15\",\n        plugins: {},\n        dom: ut,\n        range: bt,\n        lists: y,\n        options: {\n          langInfo: n.a.summernote.lang[\"en-US\"],\n          editing: !0,\n          modules: {\n            editor:\n            /*#__PURE__*/\n            function () {\n              function editor(t) {\n                var _this9 = this;\n\n                _classCallCheck(this, editor);\n\n                this.context = t, this.$note = t.layoutInfo.note, this.$editor = t.layoutInfo.editor, this.$editable = t.layoutInfo.editable, this.options = t.options, this.lang = this.options.langInfo, this.editable = this.$editable[0], this.lastRange = null, this.snapshot = null, this.style = new wt(), this.table = new $t(), this.typing = new xt(t), this.bullet = new yt(), this.history = new Ct(this.$editable), this.context.memo(\"help.undo\", this.lang.help.undo), this.context.memo(\"help.redo\", this.lang.help.redo), this.context.memo(\"help.tab\", this.lang.help.tab), this.context.memo(\"help.untab\", this.lang.help.untab), this.context.memo(\"help.insertParagraph\", this.lang.help.insertParagraph), this.context.memo(\"help.insertOrderedList\", this.lang.help.insertOrderedList), this.context.memo(\"help.insertUnorderedList\", this.lang.help.insertUnorderedList), this.context.memo(\"help.indent\", this.lang.help.indent), this.context.memo(\"help.outdent\", this.lang.help.outdent), this.context.memo(\"help.formatPara\", this.lang.help.formatPara), this.context.memo(\"help.insertHorizontalRule\", this.lang.help.insertHorizontalRule), this.context.memo(\"help.fontName\", this.lang.help.fontName);\n                var e = [\"bold\", \"italic\", \"underline\", \"strikethrough\", \"superscript\", \"subscript\", \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\", \"formatBlock\", \"removeFormat\", \"backColor\"];\n\n                for (var _t34 = 0, _o16 = e.length; _t34 < _o16; _t34++) {\n                  this[e[_t34]] = function (t) {\n                    return function (e) {\n                      _this9.beforeCommand(), document.execCommand(t, !1, e), _this9.afterCommand(!0);\n                    };\n                  }(e[_t34]), this.context.memo(\"help.\" + e[_t34], this.lang.help[e[_t34]]);\n                }\n\n                this.fontName = this.wrapCommand(function (t) {\n                  return _this9.fontStyling(\"font-family\", f.validFontName(t));\n                }), this.fontSize = this.wrapCommand(function (t) {\n                  var e = _this9.currentStyle()[\"font-size-unit\"];\n\n                  return _this9.fontStyling(\"font-size\", t + e);\n                }), this.fontSizeUnit = this.wrapCommand(function (t) {\n                  var e = _this9.currentStyle()[\"font-size\"];\n\n                  return _this9.fontStyling(\"font-size\", e + t);\n                });\n\n                for (var _t35 = 1; _t35 <= 6; _t35++) {\n                  this[\"formatH\" + _t35] = function (t) {\n                    return function () {\n                      _this9.formatBlock(\"H\" + t);\n                    };\n                  }(_t35), this.context.memo(\"help.formatH\" + _t35, this.lang.help[\"formatH\" + _t35]);\n                }\n\n                this.insertParagraph = this.wrapCommand(function () {\n                  _this9.typing.insertParagraph(_this9.editable);\n                }), this.insertOrderedList = this.wrapCommand(function () {\n                  _this9.bullet.insertOrderedList(_this9.editable);\n                }), this.insertUnorderedList = this.wrapCommand(function () {\n                  _this9.bullet.insertUnorderedList(_this9.editable);\n                }), this.indent = this.wrapCommand(function () {\n                  _this9.bullet.indent(_this9.editable);\n                }), this.outdent = this.wrapCommand(function () {\n                  _this9.bullet.outdent(_this9.editable);\n                }), this.insertNode = this.wrapCommand(function (t) {\n                  if (_this9.isLimited(n()(t).text().length)) return;\n                  _this9.getLastRange().insertNode(t), _this9.setLastRange(bt.createFromNodeAfter(t).select());\n                }), this.insertText = this.wrapCommand(function (t) {\n                  if (_this9.isLimited(t.length)) return;\n\n                  var e = _this9.getLastRange().insertNode(ut.createText(t));\n\n                  _this9.setLastRange(bt.create(e, ut.nodeLength(e)).select());\n                }), this.pasteHTML = this.wrapCommand(function (t) {\n                  if (_this9.isLimited(t.length)) return;\n                  t = _this9.context.invoke(\"codeview.purify\", t);\n\n                  var e = _this9.getLastRange().pasteHTML(t);\n\n                  _this9.setLastRange(bt.createFromNodeAfter(y.last(e)).select());\n                }), this.formatBlock = this.wrapCommand(function (t, e) {\n                  var o = _this9.options.callbacks.onApplyCustomStyle;\n                  o ? o.call(_this9, e, _this9.context, _this9.onFormatBlock) : _this9.onFormatBlock(t, e);\n                }), this.insertHorizontalRule = this.wrapCommand(function () {\n                  var t = _this9.getLastRange().insertNode(ut.create(\"HR\"));\n\n                  t.nextSibling && _this9.setLastRange(bt.create(t.nextSibling, 0).normalize().select());\n                }), this.lineHeight = this.wrapCommand(function (t) {\n                  _this9.style.stylePara(_this9.getLastRange(), {\n                    lineHeight: t\n                  });\n                }), this.createLink = this.wrapCommand(function (t) {\n                  var e = t.url;\n                  var o = t.text,\n                      i = t.isNewWindow,\n                      s = t.checkProtocol;\n\n                  var r = t.range || _this9.getLastRange();\n\n                  var a = o.length - r.toString().length;\n                  if (a > 0 && _this9.isLimited(a)) return;\n                  var l = r.toString() !== o;\n                  \"string\" == typeof e && (e = e.trim()), _this9.options.onCreateLink ? e = _this9.options.onCreateLink(e) : s && (e = /^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/.test(e) ? e : _this9.options.defaultProtocol + e);\n                  var c = [];\n\n                  if (l) {\n                    r = r.deleteContents();\n\n                    var _t36 = r.insertNode(n()(\"<A>\" + o + \"</A>\")[0]);\n\n                    c.push(_t36);\n                  } else c = _this9.style.styleNodes(r, {\n                    nodeName: \"A\",\n                    expandClosestSibling: !0,\n                    onlyPartialContains: !0\n                  });\n\n                  n.a.each(c, function (t, o) {\n                    n()(o).attr(\"href\", e), i ? n()(o).attr(\"target\", \"_blank\") : n()(o).removeAttr(\"target\");\n                  });\n                  var h = bt.createFromNodeBefore(y.head(c)).getStartPoint(),\n                      d = bt.createFromNodeAfter(y.last(c)).getEndPoint();\n\n                  _this9.setLastRange(bt.create(h.node, h.offset, d.node, d.offset).select());\n                }), this.color = this.wrapCommand(function (t) {\n                  var e = t.foreColor,\n                      o = t.backColor;\n                  e && document.execCommand(\"foreColor\", !1, e), o && document.execCommand(\"backColor\", !1, o);\n                }), this.foreColor = this.wrapCommand(function (t) {\n                  document.execCommand(\"styleWithCSS\", !1, !0), document.execCommand(\"foreColor\", !1, t);\n                }), this.insertTable = this.wrapCommand(function (t) {\n                  var e = t.split(\"x\");\n\n                  _this9.getLastRange().deleteContents().insertNode(_this9.table.createTable(e[0], e[1], _this9.options));\n                }), this.removeMedia = this.wrapCommand(function () {\n                  var t = n()(_this9.restoreTarget()).parent();\n                  t.closest(\"figure\").length ? t.closest(\"figure\").remove() : t = n()(_this9.restoreTarget()).detach(), _this9.context.triggerEvent(\"media.delete\", t, _this9.$editable);\n                }), this.floatMe = this.wrapCommand(function (t) {\n                  var e = n()(_this9.restoreTarget());\n                  e.toggleClass(\"note-float-left\", \"left\" === t), e.toggleClass(\"note-float-right\", \"right\" === t), e.css(\"float\", \"none\" === t ? \"\" : t);\n                }), this.resize = this.wrapCommand(function (t) {\n                  var e = n()(_this9.restoreTarget());\n                  0 === (t = parseFloat(t)) ? e.css(\"width\", \"\") : e.css({\n                    width: 100 * t + \"%\",\n                    height: \"\"\n                  });\n                });\n              }\n\n              _createClass(editor, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  var _this10 = this;\n\n                  this.$editable.on(\"keydown\", function (t) {\n                    if (t.keyCode === kt.code.ENTER && _this10.context.triggerEvent(\"enter\", t), _this10.context.triggerEvent(\"keydown\", t), _this10.snapshot = _this10.history.makeSnapshot(), t.isDefaultPrevented() || (_this10.options.shortcuts ? _this10.handleKeyMap(t) : _this10.preventDefaultEditableShortCuts(t)), _this10.isLimited(1, t)) {\n                      var _t37 = _this10.getLastRange();\n\n                      if (_t37.eo - _t37.so == 0) return !1;\n                    }\n\n                    _this10.setLastRange();\n                  }).on(\"keyup\", function (t) {\n                    _this10.setLastRange(), _this10.context.triggerEvent(\"keyup\", t);\n                  }).on(\"focus\", function (t) {\n                    _this10.setLastRange(), _this10.context.triggerEvent(\"focus\", t);\n                  }).on(\"blur\", function (t) {\n                    _this10.context.triggerEvent(\"blur\", t);\n                  }).on(\"mousedown\", function (t) {\n                    _this10.context.triggerEvent(\"mousedown\", t);\n                  }).on(\"mouseup\", function (t) {\n                    _this10.setLastRange(), _this10.history.recordUndo(), _this10.context.triggerEvent(\"mouseup\", t);\n                  }).on(\"scroll\", function (t) {\n                    _this10.context.triggerEvent(\"scroll\", t);\n                  }).on(\"paste\", function (t) {\n                    _this10.setLastRange(), _this10.context.triggerEvent(\"paste\", t);\n                  }).on(\"input\", function (t) {\n                    _this10.isLimited(0) && _this10.snapshot && _this10.history.applySnapshot(_this10.snapshot);\n                  }), this.$editable.attr(\"spellcheck\", this.options.spellCheck), this.$editable.attr(\"autocorrect\", this.options.spellCheck), this.options.disableGrammar && this.$editable.attr(\"data-gramm\", !1), this.$editable.html(ut.html(this.$note) || ut.emptyPara), this.$editable.on(f.inputEventName, b.debounce(function () {\n                    _this10.context.triggerEvent(\"change\", _this10.$editable.html(), _this10.$editable);\n                  }, 10)), this.$editor.on(\"focusin\", function (t) {\n                    _this10.context.triggerEvent(\"focusin\", t);\n                  }).on(\"focusout\", function (t) {\n                    _this10.context.triggerEvent(\"focusout\", t);\n                  }), this.options.airMode || (this.options.width && this.$editor.outerWidth(this.options.width), this.options.height && this.$editable.outerHeight(this.options.height), this.options.maxHeight && this.$editable.css(\"max-height\", this.options.maxHeight), this.options.minHeight && this.$editable.css(\"min-height\", this.options.minHeight)), this.history.recordUndo(), this.setLastRange();\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$editable.off();\n                }\n              }, {\n                key: \"handleKeyMap\",\n                value: function handleKeyMap(t) {\n                  var e = this.options.keyMap[f.isMac ? \"mac\" : \"pc\"],\n                      o = [];\n                  t.metaKey && o.push(\"CMD\"), t.ctrlKey && !t.altKey && o.push(\"CTRL\"), t.shiftKey && o.push(\"SHIFT\");\n                  var i = kt.nameFromCode[t.keyCode];\n                  i && o.push(i);\n                  var n = e[o.join(\"+\")];\n                  \"TAB\" !== i || this.options.tabDisable ? n ? !1 !== this.context.invoke(n) && t.preventDefault() : kt.isEdit(t.keyCode) && this.afterCommand() : this.afterCommand();\n                }\n              }, {\n                key: \"preventDefaultEditableShortCuts\",\n                value: function preventDefaultEditableShortCuts(t) {\n                  (t.ctrlKey || t.metaKey) && y.contains([66, 73, 85], t.keyCode) && t.preventDefault();\n                }\n              }, {\n                key: \"isLimited\",\n                value: function isLimited(t, e) {\n                  return t = t || 0, (void 0 === e || !(kt.isMove(e.keyCode) || kt.isNavigation(e.keyCode) || e.ctrlKey || e.metaKey || y.contains([kt.code.BACKSPACE, kt.code.DELETE], e.keyCode))) && this.options.maxTextLength > 0 && this.$editable.text().length + t > this.options.maxTextLength;\n                }\n              }, {\n                key: \"createRange\",\n                value: function createRange() {\n                  return this.focus(), this.setLastRange(), this.getLastRange();\n                }\n              }, {\n                key: \"setLastRange\",\n                value: function setLastRange(t) {\n                  t ? this.lastRange = t : (this.lastRange = bt.create(this.editable), 0 === n()(this.lastRange.sc).closest(\".note-editable\").length && (this.lastRange = bt.createFromBodyElement(this.editable)));\n                }\n              }, {\n                key: \"getLastRange\",\n                value: function getLastRange() {\n                  return this.lastRange || this.setLastRange(), this.lastRange;\n                }\n              }, {\n                key: \"saveRange\",\n                value: function saveRange(t) {\n                  t && this.getLastRange().collapse().select();\n                }\n              }, {\n                key: \"restoreRange\",\n                value: function restoreRange() {\n                  this.lastRange && (this.lastRange.select(), this.focus());\n                }\n              }, {\n                key: \"saveTarget\",\n                value: function saveTarget(t) {\n                  this.$editable.data(\"target\", t);\n                }\n              }, {\n                key: \"clearTarget\",\n                value: function clearTarget() {\n                  this.$editable.removeData(\"target\");\n                }\n              }, {\n                key: \"restoreTarget\",\n                value: function restoreTarget() {\n                  return this.$editable.data(\"target\");\n                }\n              }, {\n                key: \"currentStyle\",\n                value: function currentStyle() {\n                  var t = bt.create();\n                  return t && (t = t.normalize()), t ? this.style.current(t) : this.style.fromNode(this.$editable);\n                }\n              }, {\n                key: \"styleFromNode\",\n                value: function styleFromNode(t) {\n                  return this.style.fromNode(t);\n                }\n              }, {\n                key: \"undo\",\n                value: function undo() {\n                  this.context.triggerEvent(\"before.command\", this.$editable.html()), this.history.undo(), this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n                }\n              }, {\n                key: \"commit\",\n                value: function commit() {\n                  this.context.triggerEvent(\"before.command\", this.$editable.html()), this.history.commit(), this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n                }\n              }, {\n                key: \"redo\",\n                value: function redo() {\n                  this.context.triggerEvent(\"before.command\", this.$editable.html()), this.history.redo(), this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n                }\n              }, {\n                key: \"beforeCommand\",\n                value: function beforeCommand() {\n                  this.context.triggerEvent(\"before.command\", this.$editable.html()), this.focus();\n                }\n              }, {\n                key: \"afterCommand\",\n                value: function afterCommand(t) {\n                  this.normalizeContent(), this.history.recordUndo(), t || this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n                }\n              }, {\n                key: \"tab\",\n                value: function tab() {\n                  var t = this.getLastRange();\n                  if (t.isCollapsed() && t.isOnCell()) this.table.tab(t);else {\n                    if (0 === this.options.tabSize) return !1;\n                    this.isLimited(this.options.tabSize) || (this.beforeCommand(), this.typing.insertTab(t, this.options.tabSize), this.afterCommand());\n                  }\n                }\n              }, {\n                key: \"untab\",\n                value: function untab() {\n                  var t = this.getLastRange();\n                  if (t.isCollapsed() && t.isOnCell()) this.table.tab(t, !0);else if (0 === this.options.tabSize) return !1;\n                }\n              }, {\n                key: \"wrapCommand\",\n                value: function wrapCommand(t) {\n                  return function () {\n                    this.beforeCommand(), t.apply(this, arguments), this.afterCommand();\n                  };\n                }\n              }, {\n                key: \"insertImage\",\n                value: function insertImage(t, e) {\n                  var _this11 = this;\n\n                  return (o = t, n.a.Deferred(function (t) {\n                    var e = n()(\"<img>\");\n                    e.one(\"load\", function () {\n                      e.off(\"error abort\"), t.resolve(e);\n                    }).one(\"error abort\", function () {\n                      e.off(\"load\").detach(), t.reject(e);\n                    }).css({\n                      display: \"none\"\n                    }).appendTo(document.body).attr(\"src\", o);\n                  }).promise()).then(function (t) {\n                    _this11.beforeCommand(), \"function\" == typeof e ? e(t) : (\"string\" == typeof e && t.attr(\"data-filename\", e), t.css(\"width\", Math.min(_this11.$editable.width(), t.width()))), t.show(), _this11.getLastRange().insertNode(t[0]), _this11.setLastRange(bt.createFromNodeAfter(t[0]).select()), _this11.afterCommand();\n                  }).fail(function (t) {\n                    _this11.context.triggerEvent(\"image.upload.error\", t);\n                  });\n                  var o;\n                }\n              }, {\n                key: \"insertImagesAsDataURL\",\n                value: function insertImagesAsDataURL(t) {\n                  var _this12 = this;\n\n                  n.a.each(t, function (t, e) {\n                    var o = e.name;\n                    _this12.options.maximumImageFileSize && _this12.options.maximumImageFileSize < e.size ? _this12.context.triggerEvent(\"image.upload.error\", _this12.lang.image.maximumFileSizeError) : function (t) {\n                      return n.a.Deferred(function (e) {\n                        n.a.extend(new FileReader(), {\n                          onload: function onload(t) {\n                            var o = t.target.result;\n                            e.resolve(o);\n                          },\n                          onerror: function onerror(t) {\n                            e.reject(t);\n                          }\n                        }).readAsDataURL(t);\n                      }).promise();\n                    }(e).then(function (t) {\n                      return _this12.insertImage(t, o);\n                    }).fail(function () {\n                      _this12.context.triggerEvent(\"image.upload.error\");\n                    });\n                  });\n                }\n              }, {\n                key: \"insertImagesOrCallback\",\n                value: function insertImagesOrCallback(t) {\n                  this.options.callbacks.onImageUpload ? this.context.triggerEvent(\"image.upload\", t) : this.insertImagesAsDataURL(t);\n                }\n              }, {\n                key: \"getSelectedText\",\n                value: function getSelectedText() {\n                  var t = this.getLastRange();\n                  return t.isOnAnchor() && (t = bt.createFromNode(ut.ancestor(t.sc, ut.isAnchor))), t.toString();\n                }\n              }, {\n                key: \"onFormatBlock\",\n                value: function onFormatBlock(t, e) {\n                  if (document.execCommand(\"FormatBlock\", !1, f.isMSIE ? \"<\" + t + \">\" : t), e && e.length && (e[0].tagName.toUpperCase() !== t.toUpperCase() && (e = e.find(t)), e && e.length)) {\n                    var _o17 = e[0].className || \"\";\n\n                    if (_o17) {\n                      var _e16 = this.createRange();\n\n                      n()([_e16.sc, _e16.ec]).closest(t).addClass(_o17);\n                    }\n                  }\n                }\n              }, {\n                key: \"formatPara\",\n                value: function formatPara() {\n                  this.formatBlock(\"P\");\n                }\n              }, {\n                key: \"fontStyling\",\n                value: function fontStyling(t, e) {\n                  var o = this.getLastRange();\n\n                  if (\"\" !== o) {\n                    var _i14 = this.style.styleNodes(o);\n\n                    if (this.$editor.find(\".note-status-output\").html(\"\"), n()(_i14).css(t, e), o.isCollapsed()) {\n                      var _t38 = y.head(_i14);\n\n                      _t38 && !ut.nodeLength(_t38) && (_t38.innerHTML = ut.ZERO_WIDTH_NBSP_CHAR, bt.createFromNodeAfter(_t38.firstChild).select(), this.setLastRange(), this.$editable.data(\"bogus\", _t38));\n                    }\n                  } else {\n                    var _t39 = n.a.now();\n\n                    this.$editor.find(\".note-status-output\").html('<div id=\"note-status-output-' + _t39 + '\" class=\"alert alert-info\">' + this.lang.output.noSelection + \"</div>\"), setTimeout(function () {\n                      n()(\"#note-status-output-\" + _t39).remove();\n                    }, 5e3);\n                  }\n                }\n              }, {\n                key: \"unlink\",\n                value: function unlink() {\n                  var t = this.getLastRange();\n\n                  if (t.isOnAnchor()) {\n                    var _e17 = ut.ancestor(t.sc, ut.isAnchor);\n\n                    t = bt.createFromNode(_e17), t.select(), this.setLastRange(), this.beforeCommand(), document.execCommand(\"unlink\"), this.afterCommand();\n                  }\n                }\n              }, {\n                key: \"getLinkInfo\",\n                value: function getLinkInfo() {\n                  var t = this.getLastRange().expand(ut.isAnchor),\n                      e = n()(y.head(t.nodes(ut.isAnchor))),\n                      o = {\n                    range: t,\n                    text: t.toString(),\n                    url: e.length ? e.attr(\"href\") : \"\"\n                  };\n                  return e.length && (o.isNewWindow = \"_blank\" === e.attr(\"target\")), o;\n                }\n              }, {\n                key: \"addRow\",\n                value: function addRow(t) {\n                  var e = this.getLastRange(this.$editable);\n                  e.isCollapsed() && e.isOnCell() && (this.beforeCommand(), this.table.addRow(e, t), this.afterCommand());\n                }\n              }, {\n                key: \"addCol\",\n                value: function addCol(t) {\n                  var e = this.getLastRange(this.$editable);\n                  e.isCollapsed() && e.isOnCell() && (this.beforeCommand(), this.table.addCol(e, t), this.afterCommand());\n                }\n              }, {\n                key: \"deleteRow\",\n                value: function deleteRow() {\n                  var t = this.getLastRange(this.$editable);\n                  t.isCollapsed() && t.isOnCell() && (this.beforeCommand(), this.table.deleteRow(t), this.afterCommand());\n                }\n              }, {\n                key: \"deleteCol\",\n                value: function deleteCol() {\n                  var t = this.getLastRange(this.$editable);\n                  t.isCollapsed() && t.isOnCell() && (this.beforeCommand(), this.table.deleteCol(t), this.afterCommand());\n                }\n              }, {\n                key: \"deleteTable\",\n                value: function deleteTable() {\n                  var t = this.getLastRange(this.$editable);\n                  t.isCollapsed() && t.isOnCell() && (this.beforeCommand(), this.table.deleteTable(t), this.afterCommand());\n                }\n              }, {\n                key: \"resizeTo\",\n                value: function resizeTo(t, e, o) {\n                  var i;\n\n                  if (o) {\n                    var _o18 = t.y / t.x,\n                        _n10 = e.data(\"ratio\");\n\n                    i = {\n                      width: _n10 > _o18 ? t.x : t.y / _n10,\n                      height: _n10 > _o18 ? t.x * _n10 : t.y\n                    };\n                  } else i = {\n                    width: t.x,\n                    height: t.y\n                  };\n\n                  e.css(i);\n                }\n              }, {\n                key: \"hasFocus\",\n                value: function hasFocus() {\n                  return this.$editable.is(\":focus\");\n                }\n              }, {\n                key: \"focus\",\n                value: function focus() {\n                  this.hasFocus() || this.$editable.focus();\n                }\n              }, {\n                key: \"isEmpty\",\n                value: function isEmpty() {\n                  return ut.isEmpty(this.$editable[0]) || ut.emptyPara === this.$editable.html();\n                }\n              }, {\n                key: \"empty\",\n                value: function empty() {\n                  this.context.invoke(\"code\", ut.emptyPara);\n                }\n              }, {\n                key: \"normalizeContent\",\n                value: function normalizeContent() {\n                  this.$editable[0].normalize();\n                }\n              }]);\n\n              return editor;\n            }(),\n            clipboard:\n            /*#__PURE__*/\n            function () {\n              function clipboard(t) {\n                _classCallCheck(this, clipboard);\n\n                this.context = t, this.$editable = t.layoutInfo.editable;\n              }\n\n              _createClass(clipboard, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  this.$editable.on(\"paste\", this.pasteByEvent.bind(this));\n                }\n              }, {\n                key: \"pasteByEvent\",\n                value: function pasteByEvent(t) {\n                  var e = t.originalEvent.clipboardData;\n\n                  if (e && e.items && e.items.length) {\n                    var _o19 = e.items.length > 1 ? e.items[1] : y.head(e.items);\n\n                    \"file\" === _o19.kind && -1 !== _o19.type.indexOf(\"image/\") ? (this.context.invoke(\"editor.insertImagesOrCallback\", [_o19.getAsFile()]), t.preventDefault(), this.context.invoke(\"editor.afterCommand\")) : \"string\" === _o19.kind && (this.context.invoke(\"editor.isLimited\", e.getData(\"Text\").length) ? t.preventDefault() : this.context.invoke(\"editor.afterCommand\"));\n                  }\n                }\n              }]);\n\n              return clipboard;\n            }(),\n            dropzone:\n            /*#__PURE__*/\n            function () {\n              function dropzone(t) {\n                _classCallCheck(this, dropzone);\n\n                this.context = t, this.$eventListener = n()(document), this.$editor = t.layoutInfo.editor, this.$editable = t.layoutInfo.editable, this.options = t.options, this.lang = this.options.langInfo, this.documentEventHandlers = {}, this.$dropzone = n()(['<div class=\"note-dropzone\">', '<div class=\"note-dropzone-message\"/>', \"</div>\"].join(\"\")).prependTo(this.$editor);\n              }\n\n              _createClass(dropzone, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  this.options.disableDragAndDrop ? (this.documentEventHandlers.onDrop = function (t) {\n                    t.preventDefault();\n                  }, this.$eventListener = this.$dropzone, this.$eventListener.on(\"drop\", this.documentEventHandlers.onDrop)) : this.attachDragAndDropEvent();\n                }\n              }, {\n                key: \"attachDragAndDropEvent\",\n                value: function attachDragAndDropEvent() {\n                  var _this13 = this;\n\n                  var t = n()();\n                  var e = this.$dropzone.find(\".note-dropzone-message\");\n                  this.documentEventHandlers.onDragenter = function (o) {\n                    var i = _this13.context.invoke(\"codeview.isActivated\"),\n                        n = _this13.$editor.width() > 0 && _this13.$editor.height() > 0;\n\n                    i || t.length || !n || (_this13.$editor.addClass(\"dragover\"), _this13.$dropzone.width(_this13.$editor.width()), _this13.$dropzone.height(_this13.$editor.height()), e.text(_this13.lang.image.dragImageHere)), t = t.add(o.target);\n                  }, this.documentEventHandlers.onDragleave = function (e) {\n                    t = t.not(e.target), t.length && \"BODY\" !== e.target.nodeName || (t = n()(), _this13.$editor.removeClass(\"dragover\"));\n                  }, this.documentEventHandlers.onDrop = function () {\n                    t = n()(), _this13.$editor.removeClass(\"dragover\");\n                  }, this.$eventListener.on(\"dragenter\", this.documentEventHandlers.onDragenter).on(\"dragleave\", this.documentEventHandlers.onDragleave).on(\"drop\", this.documentEventHandlers.onDrop), this.$dropzone.on(\"dragenter\", function () {\n                    _this13.$dropzone.addClass(\"hover\"), e.text(_this13.lang.image.dropImage);\n                  }).on(\"dragleave\", function () {\n                    _this13.$dropzone.removeClass(\"hover\"), e.text(_this13.lang.image.dragImageHere);\n                  }), this.$dropzone.on(\"drop\", function (t) {\n                    var e = t.originalEvent.dataTransfer;\n                    t.preventDefault(), e && e.files && e.files.length ? (_this13.$editable.focus(), _this13.context.invoke(\"editor.insertImagesOrCallback\", e.files)) : n.a.each(e.types, function (t, o) {\n                      if (o.toLowerCase().indexOf(\"_moz_\") > -1) return;\n                      var i = e.getData(o);\n                      o.toLowerCase().indexOf(\"text\") > -1 ? _this13.context.invoke(\"editor.pasteHTML\", i) : n()(i).each(function (t, e) {\n                        _this13.context.invoke(\"editor.insertNode\", e);\n                      });\n                    });\n                  }).on(\"dragover\", !1);\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  var _this14 = this;\n\n                  Object.keys(this.documentEventHandlers).forEach(function (t) {\n                    _this14.$eventListener.off(t.substr(2).toLowerCase(), _this14.documentEventHandlers[t]);\n                  }), this.documentEventHandlers = {};\n                }\n              }]);\n\n              return dropzone;\n            }(),\n            codeview:\n            /*#__PURE__*/\n            function () {\n              function codeview(t) {\n                _classCallCheck(this, codeview);\n\n                this.context = t, this.$editor = t.layoutInfo.editor, this.$editable = t.layoutInfo.editable, this.$codable = t.layoutInfo.codable, this.options = t.options;\n              }\n\n              _createClass(codeview, [{\n                key: \"sync\",\n                value: function sync() {\n                  this.isActivated() && f.hasCodeMirror && this.$codable.data(\"cmEditor\").save();\n                }\n              }, {\n                key: \"isActivated\",\n                value: function isActivated() {\n                  return this.$editor.hasClass(\"codeview\");\n                }\n              }, {\n                key: \"toggle\",\n                value: function toggle() {\n                  this.isActivated() ? this.deactivate() : this.activate(), this.context.triggerEvent(\"codeview.toggled\");\n                }\n              }, {\n                key: \"purify\",\n                value: function purify(t) {\n                  if (this.options.codeviewFilter && (t = t.replace(this.options.codeviewFilterRegex, \"\"), this.options.codeviewIframeFilter)) {\n                    var _e18 = this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);\n\n                    t = t.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi, function (t) {\n                      if (/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(t)) return \"\";\n                      var _iteratorNormalCompletion = true;\n                      var _didIteratorError = false;\n                      var _iteratorError = undefined;\n\n                      try {\n                        for (var _iterator = _e18[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                          var _o20 = _step.value;\n                          if (new RegExp('src=\"(https?:)?//' + _o20.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\") + '/(.+)\"').test(t)) return t;\n                        }\n                      } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                      } finally {\n                        try {\n                          if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                          }\n                        } finally {\n                          if (_didIteratorError) {\n                            throw _iteratorError;\n                          }\n                        }\n                      }\n\n                      return \"\";\n                    });\n                  }\n\n                  return t;\n                }\n              }, {\n                key: \"activate\",\n                value: function activate() {\n                  var _this15 = this;\n\n                  if (this.$codable.val(ut.html(this.$editable, this.options.prettifyHtml)), this.$codable.height(this.$editable.height()), this.context.invoke(\"toolbar.updateCodeview\", !0), this.$editor.addClass(\"codeview\"), this.$codable.focus(), f.hasCodeMirror) {\n                    var _t40 = It.fromTextArea(this.$codable[0], this.options.codemirror);\n\n                    if (this.options.codemirror.tern) {\n                      var _e19 = new It.TernServer(this.options.codemirror.tern);\n\n                      _t40.ternServer = _e19, _t40.on(\"cursorActivity\", function (t) {\n                        _e19.updateArgHints(t);\n                      });\n                    }\n\n                    _t40.on(\"blur\", function (e) {\n                      _this15.context.triggerEvent(\"blur.codeview\", _t40.getValue(), e);\n                    }), _t40.on(\"change\", function (e) {\n                      _this15.context.triggerEvent(\"change.codeview\", _t40.getValue(), _t40);\n                    }), _t40.setSize(null, this.$editable.outerHeight()), this.$codable.data(\"cmEditor\", _t40);\n                  } else this.$codable.on(\"blur\", function (t) {\n                    _this15.context.triggerEvent(\"blur.codeview\", _this15.$codable.val(), t);\n                  }), this.$codable.on(\"input\", function (t) {\n                    _this15.context.triggerEvent(\"change.codeview\", _this15.$codable.val(), _this15.$codable);\n                  });\n                }\n              }, {\n                key: \"deactivate\",\n                value: function deactivate() {\n                  if (f.hasCodeMirror) {\n                    var _t41 = this.$codable.data(\"cmEditor\");\n\n                    this.$codable.val(_t41.getValue()), _t41.toTextArea();\n                  }\n\n                  var t = this.purify(ut.value(this.$codable, this.options.prettifyHtml) || ut.emptyPara),\n                      e = this.$editable.html() !== t;\n                  this.$editable.html(t), this.$editable.height(this.options.height ? this.$codable.height() : \"auto\"), this.$editor.removeClass(\"codeview\"), e && this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable), this.$editable.focus(), this.context.invoke(\"toolbar.updateCodeview\", !1);\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.isActivated() && this.deactivate();\n                }\n              }]);\n\n              return codeview;\n            }(),\n            statusbar:\n            /*#__PURE__*/\n            function () {\n              function statusbar(t) {\n                _classCallCheck(this, statusbar);\n\n                this.$document = n()(document), this.$statusbar = t.layoutInfo.statusbar, this.$editable = t.layoutInfo.editable, this.options = t.options;\n              }\n\n              _createClass(statusbar, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  var _this16 = this;\n\n                  this.options.airMode || this.options.disableResizeEditor ? this.destroy() : this.$statusbar.on(\"mousedown\", function (t) {\n                    t.preventDefault(), t.stopPropagation();\n\n                    var e = _this16.$editable.offset().top - _this16.$document.scrollTop(),\n                        o = function o(t) {\n                      var o = t.clientY - (e + 24);\n                      o = _this16.options.minheight > 0 ? Math.max(o, _this16.options.minheight) : o, o = _this16.options.maxHeight > 0 ? Math.min(o, _this16.options.maxHeight) : o, _this16.$editable.height(o);\n                    };\n\n                    _this16.$document.on(\"mousemove\", o).one(\"mouseup\", function () {\n                      _this16.$document.off(\"mousemove\", o);\n                    });\n                  });\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$statusbar.off(), this.$statusbar.addClass(\"locked\");\n                }\n              }]);\n\n              return statusbar;\n            }(),\n            fullscreen:\n            /*#__PURE__*/\n            function () {\n              function fullscreen(t) {\n                var _this17 = this;\n\n                _classCallCheck(this, fullscreen);\n\n                this.context = t, this.$editor = t.layoutInfo.editor, this.$toolbar = t.layoutInfo.toolbar, this.$editable = t.layoutInfo.editable, this.$codable = t.layoutInfo.codable, this.$window = n()(window), this.$scrollbar = n()(\"html, body\"), this.onResize = function () {\n                  _this17.resizeTo({\n                    h: _this17.$window.height() - _this17.$toolbar.outerHeight()\n                  });\n                };\n              }\n\n              _createClass(fullscreen, [{\n                key: \"resizeTo\",\n                value: function resizeTo(t) {\n                  this.$editable.css(\"height\", t.h), this.$codable.css(\"height\", t.h), this.$codable.data(\"cmeditor\") && this.$codable.data(\"cmeditor\").setsize(null, t.h);\n                }\n              }, {\n                key: \"toggle\",\n                value: function toggle() {\n                  this.$editor.toggleClass(\"fullscreen\"), this.isFullscreen() ? (this.$editable.data(\"orgHeight\", this.$editable.css(\"height\")), this.$editable.data(\"orgMaxHeight\", this.$editable.css(\"maxHeight\")), this.$editable.css(\"maxHeight\", \"\"), this.$window.on(\"resize\", this.onResize).trigger(\"resize\"), this.$scrollbar.css(\"overflow\", \"hidden\")) : (this.$window.off(\"resize\", this.onResize), this.resizeTo({\n                    h: this.$editable.data(\"orgHeight\")\n                  }), this.$editable.css(\"maxHeight\", this.$editable.css(\"orgMaxHeight\")), this.$scrollbar.css(\"overflow\", \"visible\")), this.context.invoke(\"toolbar.updateFullscreen\", this.isFullscreen());\n                }\n              }, {\n                key: \"isFullscreen\",\n                value: function isFullscreen() {\n                  return this.$editor.hasClass(\"fullscreen\");\n                }\n              }]);\n\n              return fullscreen;\n            }(),\n            handle:\n            /*#__PURE__*/\n            function () {\n              function handle(t) {\n                var _this18 = this;\n\n                _classCallCheck(this, handle);\n\n                this.context = t, this.$document = n()(document), this.$editingArea = t.layoutInfo.editingArea, this.options = t.options, this.lang = this.options.langInfo, this.events = {\n                  \"summernote.mousedown\": function summernoteMousedown(t, e) {\n                    _this18.update(e.target, e) && e.preventDefault();\n                  },\n                  \"summernote.keyup summernote.scroll summernote.change summernote.dialog.shown\": function summernoteKeyupSummernoteScrollSummernoteChangeSummernoteDialogShown() {\n                    _this18.update();\n                  },\n                  \"summernote.disable summernote.blur\": function summernoteDisableSummernoteBlur() {\n                    _this18.hide();\n                  },\n                  \"summernote.codeview.toggled\": function summernoteCodeviewToggled() {\n                    _this18.update();\n                  }\n                };\n              }\n\n              _createClass(handle, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  var _this19 = this;\n\n                  this.$handle = n()(['<div class=\"note-handle\">', '<div class=\"note-control-selection\">', '<div class=\"note-control-selection-bg\"></div>', '<div class=\"note-control-holder note-control-nw\"></div>', '<div class=\"note-control-holder note-control-ne\"></div>', '<div class=\"note-control-holder note-control-sw\"></div>', '<div class=\"', this.options.disableResizeImage ? \"note-control-holder\" : \"note-control-sizing\", ' note-control-se\"></div>', this.options.disableResizeImage ? \"\" : '<div class=\"note-control-selection-info\"></div>', \"</div>\", \"</div>\"].join(\"\")).prependTo(this.$editingArea), this.$handle.on(\"mousedown\", function (t) {\n                    if (ut.isControlSizing(t.target)) {\n                      t.preventDefault(), t.stopPropagation();\n\n                      var _e20 = _this19.$handle.find(\".note-control-selection\").data(\"target\"),\n                          _o21 = _e20.offset(),\n                          _i15 = _this19.$document.scrollTop(),\n                          _n11 = function _n11(t) {\n                        _this19.context.invoke(\"editor.resizeTo\", {\n                          x: t.clientX - _o21.left,\n                          y: t.clientY - (_o21.top - _i15)\n                        }, _e20, !t.shiftKey), _this19.update(_e20[0], t);\n                      };\n\n                      _this19.$document.on(\"mousemove\", _n11).one(\"mouseup\", function (t) {\n                        t.preventDefault(), _this19.$document.off(\"mousemove\", _n11), _this19.context.invoke(\"editor.afterCommand\");\n                      }), _e20.data(\"ratio\") || _e20.data(\"ratio\", _e20.height() / _e20.width());\n                    }\n                  }), this.$handle.on(\"wheel\", function (t) {\n                    t.preventDefault(), _this19.update();\n                  });\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$handle.remove();\n                }\n              }, {\n                key: \"update\",\n                value: function update(t, e) {\n                  if (this.context.isDisabled()) return !1;\n                  var o = ut.isImg(t),\n                      i = this.$handle.find(\".note-control-selection\");\n\n                  if (this.context.invoke(\"imagePopover.update\", t, e), o) {\n                    var _e21 = n()(t),\n                        _o22 = _e21.position(),\n                        _s6 = {\n                      left: _o22.left + parseInt(_e21.css(\"marginLeft\"), 10),\n                      top: _o22.top + parseInt(_e21.css(\"marginTop\"), 10)\n                    },\n                        _r4 = {\n                      w: _e21.outerWidth(!1),\n                      h: _e21.outerHeight(!1)\n                    };\n\n                    i.css({\n                      display: \"block\",\n                      left: _s6.left,\n                      top: _s6.top,\n                      width: _r4.w,\n                      height: _r4.h\n                    }).data(\"target\", _e21);\n\n                    var _a4 = new Image();\n\n                    _a4.src = _e21.attr(\"src\");\n\n                    var _l5 = _r4.w + \"x\" + _r4.h + \" (\" + this.lang.image.original + \": \" + _a4.width + \"x\" + _a4.height + \")\";\n\n                    i.find(\".note-control-selection-info\").text(_l5), this.context.invoke(\"editor.saveTarget\", t);\n                  } else this.hide();\n\n                  return o;\n                }\n              }, {\n                key: \"hide\",\n                value: function hide() {\n                  this.context.invoke(\"editor.clearTarget\"), this.$handle.children().hide();\n                }\n              }]);\n\n              return handle;\n            }(),\n            hintPopover:\n            /*#__PURE__*/\n            function () {\n              function hintPopover(t) {\n                var _this20 = this;\n\n                _classCallCheck(this, hintPopover);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.$editable = t.layoutInfo.editable, this.options = t.options, this.hint = this.options.hint || [], this.direction = this.options.hintDirection || \"bottom\", this.hints = Array.isArray(this.hint) ? this.hint : [this.hint], this.events = {\n                  \"summernote.keyup\": function summernoteKeyup(t, e) {\n                    e.isDefaultPrevented() || _this20.handleKeyup(e);\n                  },\n                  \"summernote.keydown\": function summernoteKeydown(t, e) {\n                    _this20.handleKeydown(e);\n                  },\n                  \"summernote.disable summernote.dialog.shown summernote.blur\": function summernoteDisableSummernoteDialogShownSummernoteBlur() {\n                    _this20.hide();\n                  }\n                };\n              }\n\n              _createClass(hintPopover, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return this.hints.length > 0;\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  var _this21 = this;\n\n                  this.lastWordRange = null, this.matchingWord = null, this.$popover = this.ui.popover({\n                    className: \"note-hint-popover\",\n                    hideArrow: !0,\n                    direction: \"\"\n                  }).render().appendTo(this.options.container), this.$popover.hide(), this.$content = this.$popover.find(\".popover-content,.note-popover-content\"), this.$content.on(\"click\", \".note-hint-item\", function (t) {\n                    _this21.$content.find(\".active\").removeClass(\"active\"), n()(t.currentTarget).addClass(\"active\"), _this21.replace();\n                  }), this.$popover.on(\"mousedown\", function (t) {\n                    t.preventDefault();\n                  });\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$popover.remove();\n                }\n              }, {\n                key: \"selectItem\",\n                value: function selectItem(t) {\n                  this.$content.find(\".active\").removeClass(\"active\"), t.addClass(\"active\"), this.$content[0].scrollTop = t[0].offsetTop - this.$content.innerHeight() / 2;\n                }\n              }, {\n                key: \"moveDown\",\n                value: function moveDown() {\n                  var t = this.$content.find(\".note-hint-item.active\"),\n                      e = t.next();\n                  if (e.length) this.selectItem(e);else {\n                    var _e22 = t.parent().next();\n\n                    _e22.length || (_e22 = this.$content.find(\".note-hint-group\").first()), this.selectItem(_e22.find(\".note-hint-item\").first());\n                  }\n                }\n              }, {\n                key: \"moveUp\",\n                value: function moveUp() {\n                  var t = this.$content.find(\".note-hint-item.active\"),\n                      e = t.prev();\n                  if (e.length) this.selectItem(e);else {\n                    var _e23 = t.parent().prev();\n\n                    _e23.length || (_e23 = this.$content.find(\".note-hint-group\").last()), this.selectItem(_e23.find(\".note-hint-item\").last());\n                  }\n                }\n              }, {\n                key: \"replace\",\n                value: function replace() {\n                  var t = this.$content.find(\".note-hint-item.active\");\n\n                  if (t.length) {\n                    var e = this.nodeFromItem(t);\n                    if (null !== this.matchingWord && 0 === this.matchingWord.length) this.lastWordRange.so = this.lastWordRange.eo;else if (null !== this.matchingWord && this.matchingWord.length > 0 && !this.lastWordRange.isCollapsed()) {\n                      var _t42 = this.lastWordRange.eo - this.lastWordRange.so - this.matchingWord.length;\n\n                      _t42 > 0 && (this.lastWordRange.so += _t42);\n                    }\n\n                    if (this.lastWordRange.insertNode(e), \"next\" === this.options.hintSelect) {\n                      var o = document.createTextNode(\"\");\n                      n()(e).after(o), bt.createFromNodeBefore(o).select();\n                    } else bt.createFromNodeAfter(e).select();\n\n                    this.lastWordRange = null, this.hide(), this.context.invoke(\"editor.focus\");\n                  }\n                }\n              }, {\n                key: \"nodeFromItem\",\n                value: function nodeFromItem(t) {\n                  var e = this.hints[t.data(\"index\")],\n                      o = t.data(\"item\");\n                  var i = e.content ? e.content(o) : o;\n                  return \"string\" == typeof i && (i = ut.createText(i)), i;\n                }\n              }, {\n                key: \"createItemTemplates\",\n                value: function createItemTemplates(t, e) {\n                  var o = this.hints[t];\n                  return e.map(function (e, i) {\n                    var s = n()('<div class=\"note-hint-item\"/>');\n                    return s.append(o.template ? o.template(e) : e + \"\"), s.data({\n                      index: t,\n                      item: e\n                    }), s;\n                  });\n                }\n              }, {\n                key: \"handleKeydown\",\n                value: function handleKeydown(t) {\n                  this.$popover.is(\":visible\") && (t.keyCode === kt.code.ENTER ? (t.preventDefault(), this.replace()) : t.keyCode === kt.code.UP ? (t.preventDefault(), this.moveUp()) : t.keyCode === kt.code.DOWN && (t.preventDefault(), this.moveDown()));\n                }\n              }, {\n                key: \"searchKeyword\",\n                value: function searchKeyword(t, e, o) {\n                  var i = this.hints[t];\n\n                  if (i && i.match.test(e) && i.search) {\n                    var _t43 = i.match.exec(e);\n\n                    this.matchingWord = _t43[0], i.search(_t43[1], o);\n                  } else o();\n                }\n              }, {\n                key: \"createGroup\",\n                value: function createGroup(t, e) {\n                  var _this22 = this;\n\n                  var o = n()('<div class=\"note-hint-group note-hint-group-' + t + '\"/>');\n                  return this.searchKeyword(t, e, function (e) {\n                    (e = e || []).length && (o.html(_this22.createItemTemplates(t, e)), _this22.show());\n                  }), o;\n                }\n              }, {\n                key: \"handleKeyup\",\n                value: function handleKeyup(t) {\n                  var _this23 = this;\n\n                  if (!y.contains([kt.code.ENTER, kt.code.UP, kt.code.DOWN], t.keyCode)) {\n                    var _t44,\n                        _e24,\n                        _o23 = this.context.invoke(\"editor.getLastRange\");\n\n                    if (\"words\" === this.options.hintMode) {\n                      if (_t44 = _o23.getWordsRange(_o23), _e24 = _t44.toString(), this.hints.forEach(function (i) {\n                        if (i.match.test(_e24)) return _t44 = _o23.getWordsMatchRange(i.match), !1;\n                      }), !_t44) return void this.hide();\n                      _e24 = _t44.toString();\n                    } else _t44 = _o23.getWordRange(), _e24 = _t44.toString();\n\n                    if (this.hints.length && _e24) {\n                      this.$content.empty();\n\n                      var _o24 = b.rect2bnd(y.last(_t44.getClientRects())),\n                          _i16 = n()(this.options.container).offset();\n\n                      _o24 && (_o24.top -= _i16.top, _o24.left -= _i16.left, this.$popover.hide(), this.lastWordRange = _t44, this.hints.forEach(function (t, o) {\n                        t.match.test(_e24) && _this23.createGroup(o, _e24).appendTo(_this23.$content);\n                      }), this.$content.find(\".note-hint-item:first\").addClass(\"active\"), \"top\" === this.direction ? this.$popover.css({\n                        left: _o24.left,\n                        top: _o24.top - this.$popover.outerHeight() - 5\n                      }) : this.$popover.css({\n                        left: _o24.left,\n                        top: _o24.top + _o24.height + 5\n                      }));\n                    } else this.hide();\n                  }\n                }\n              }, {\n                key: \"show\",\n                value: function show() {\n                  this.$popover.show();\n                }\n              }, {\n                key: \"hide\",\n                value: function hide() {\n                  this.$popover.hide();\n                }\n              }]);\n\n              return hintPopover;\n            }(),\n            autoLink:\n            /*#__PURE__*/\n            function () {\n              function autoLink(t) {\n                var _this24 = this;\n\n                _classCallCheck(this, autoLink);\n\n                this.context = t, this.events = {\n                  \"summernote.keyup\": function summernoteKeyup(t, e) {\n                    e.isDefaultPrevented() || _this24.handleKeyup(e);\n                  },\n                  \"summernote.keydown\": function summernoteKeydown(t, e) {\n                    _this24.handleKeydown(e);\n                  }\n                };\n              }\n\n              _createClass(autoLink, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  this.lastWordRange = null;\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.lastWordRange = null;\n                }\n              }, {\n                key: \"replace\",\n                value: function replace() {\n                  if (!this.lastWordRange) return;\n                  var t = this.lastWordRange.toString(),\n                      e = t.match(Tt);\n\n                  if (e && (e[1] || e[2])) {\n                    var _o25 = e[1] ? t : \"http://\" + t,\n                        _i17 = t.replace(/^(?:https?:\\/\\/)?(?:tel?:?)?(?:mailto?:?)?(?:www\\.)?/i, \"\").split(\"/\")[0],\n                        _s7 = n()(\"<a />\").html(_i17).attr(\"href\", _o25)[0];\n\n                    this.context.options.linkTargetBlank && n()(_s7).attr(\"target\", \"_blank\"), this.lastWordRange.insertNode(_s7), this.lastWordRange = null, this.context.invoke(\"editor.focus\");\n                  }\n                }\n              }, {\n                key: \"handleKeydown\",\n                value: function handleKeydown(t) {\n                  if (y.contains([kt.code.ENTER, kt.code.SPACE], t.keyCode)) {\n                    var _t45 = this.context.invoke(\"editor.createRange\").getWordRange();\n\n                    this.lastWordRange = _t45;\n                  }\n                }\n              }, {\n                key: \"handleKeyup\",\n                value: function handleKeyup(t) {\n                  y.contains([kt.code.ENTER, kt.code.SPACE], t.keyCode) && this.replace();\n                }\n              }]);\n\n              return autoLink;\n            }(),\n            autoSync:\n            /*#__PURE__*/\n            function () {\n              function autoSync(t) {\n                var _this25 = this;\n\n                _classCallCheck(this, autoSync);\n\n                this.$note = t.layoutInfo.note, this.events = {\n                  \"summernote.change\": function summernoteChange() {\n                    _this25.$note.val(t.invoke(\"code\"));\n                  }\n                };\n              }\n\n              _createClass(autoSync, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return ut.isTextarea(this.$note[0]);\n                }\n              }]);\n\n              return autoSync;\n            }(),\n            autoReplace:\n            /*#__PURE__*/\n            function () {\n              function autoReplace(t) {\n                var _this26 = this;\n\n                _classCallCheck(this, autoReplace);\n\n                this.context = t, this.options = t.options.replace || {}, this.keys = [kt.code.ENTER, kt.code.SPACE, kt.code.PERIOD, kt.code.COMMA, kt.code.SEMICOLON, kt.code.SLASH], this.previousKeydownCode = null, this.events = {\n                  \"summernote.keyup\": function summernoteKeyup(t, e) {\n                    e.isDefaultPrevented() || _this26.handleKeyup(e);\n                  },\n                  \"summernote.keydown\": function summernoteKeydown(t, e) {\n                    _this26.handleKeydown(e);\n                  }\n                };\n              }\n\n              _createClass(autoReplace, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return !!this.options.match;\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  this.lastWord = null;\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.lastWord = null;\n                }\n              }, {\n                key: \"replace\",\n                value: function replace() {\n                  if (!this.lastWord) return;\n                  var t = this,\n                      e = this.lastWord.toString();\n                  this.options.match(e, function (e) {\n                    if (e) {\n                      var _o26 = \"\";\n                      if (\"string\" == typeof e ? _o26 = ut.createText(e) : e instanceof jQuery ? _o26 = e[0] : e instanceof Node && (_o26 = e), !_o26) return;\n                      t.lastWord.insertNode(_o26), t.lastWord = null, t.context.invoke(\"editor.focus\");\n                    }\n                  });\n                }\n              }, {\n                key: \"handleKeydown\",\n                value: function handleKeydown(t) {\n                  if (this.previousKeydownCode && y.contains(this.keys, this.previousKeydownCode)) this.previousKeydownCode = t.keyCode;else {\n                    if (y.contains(this.keys, t.keyCode)) {\n                      var _t46 = this.context.invoke(\"editor.createRange\").getWordRange();\n\n                      this.lastWord = _t46;\n                    }\n\n                    this.previousKeydownCode = t.keyCode;\n                  }\n                }\n              }, {\n                key: \"handleKeyup\",\n                value: function handleKeyup(t) {\n                  y.contains(this.keys, t.keyCode) && this.replace();\n                }\n              }]);\n\n              return autoReplace;\n            }(),\n            placeholder:\n            /*#__PURE__*/\n            function () {\n              function placeholder(t) {\n                var _this27 = this;\n\n                _classCallCheck(this, placeholder);\n\n                this.context = t, this.$editingArea = t.layoutInfo.editingArea, this.options = t.options, !0 === this.options.inheritPlaceholder && (this.options.placeholder = this.context.$note.attr(\"placeholder\") || this.options.placeholder), this.events = {\n                  \"summernote.init summernote.change\": function summernoteInitSummernoteChange() {\n                    _this27.update();\n                  },\n                  \"summernote.codeview.toggled\": function summernoteCodeviewToggled() {\n                    _this27.update();\n                  }\n                };\n              }\n\n              _createClass(placeholder, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return !!this.options.placeholder;\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  var _this28 = this;\n\n                  this.$placeholder = n()('<div class=\"note-placeholder\">'), this.$placeholder.on(\"click\", function () {\n                    _this28.context.invoke(\"focus\");\n                  }).html(this.options.placeholder).prependTo(this.$editingArea), this.update();\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$placeholder.remove();\n                }\n              }, {\n                key: \"update\",\n                value: function update() {\n                  var t = !this.context.invoke(\"codeview.isActivated\") && this.context.invoke(\"editor.isEmpty\");\n                  this.$placeholder.toggle(t);\n                }\n              }]);\n\n              return placeholder;\n            }(),\n            buttons:\n            /*#__PURE__*/\n            function () {\n              function buttons(t) {\n                _classCallCheck(this, buttons);\n\n                this.ui = n.a.summernote.ui, this.context = t, this.$toolbar = t.layoutInfo.toolbar, this.options = t.options, this.lang = this.options.langInfo, this.invertedKeyMap = b.invertObject(this.options.keyMap[f.isMac ? \"mac\" : \"pc\"]);\n              }\n\n              _createClass(buttons, [{\n                key: \"representShortcut\",\n                value: function representShortcut(t) {\n                  var e = this.invertedKeyMap[t];\n                  return this.options.shortcuts && e ? (f.isMac && (e = e.replace(\"CMD\", \"⌘\").replace(\"SHIFT\", \"⇧\")), e = e.replace(\"BACKSLASH\", \"\\\\\").replace(\"SLASH\", \"/\").replace(\"LEFTBRACKET\", \"[\").replace(\"RIGHTBRACKET\", \"]\"), \" (\" + e + \")\") : \"\";\n                }\n              }, {\n                key: \"button\",\n                value: function button(t) {\n                  return !this.options.tooltip && t.tooltip && delete t.tooltip, t.container = this.options.container, this.ui.button(t);\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  this.addToolbarButtons(), this.addImagePopoverButtons(), this.addLinkPopoverButtons(), this.addTablePopoverButtons(), this.fontInstalledMap = {};\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  delete this.fontInstalledMap;\n                }\n              }, {\n                key: \"isFontInstalled\",\n                value: function isFontInstalled(t) {\n                  return this.fontInstalledMap.hasOwnProperty(t) || (this.fontInstalledMap[t] = f.isFontInstalled(t) || y.contains(this.options.fontNamesIgnoreCheck, t)), this.fontInstalledMap[t];\n                }\n              }, {\n                key: \"isFontDeservedToAdd\",\n                value: function isFontDeservedToAdd(t) {\n                  return \"\" !== (t = t.toLowerCase()) && this.isFontInstalled(t) && -1 === f.genericFontFamilies.indexOf(t);\n                }\n              }, {\n                key: \"colorPalette\",\n                value: function colorPalette(t, e, o, i) {\n                  var _this29 = this;\n\n                  return this.ui.buttonGroup({\n                    className: \"note-color \" + t,\n                    children: [this.button({\n                      className: \"note-current-color-button\",\n                      contents: this.ui.icon(this.options.icons.font + \" note-recent-color\"),\n                      tooltip: e,\n                      click: function click(t) {\n                        var e = n()(t.currentTarget);\n                        o && i ? _this29.context.invoke(\"editor.color\", {\n                          backColor: e.attr(\"data-backColor\"),\n                          foreColor: e.attr(\"data-foreColor\")\n                        }) : o ? _this29.context.invoke(\"editor.color\", {\n                          backColor: e.attr(\"data-backColor\")\n                        }) : i && _this29.context.invoke(\"editor.color\", {\n                          foreColor: e.attr(\"data-foreColor\")\n                        });\n                      },\n                      callback: function callback(t) {\n                        var e = t.find(\".note-recent-color\");\n                        o && (e.css(\"background-color\", _this29.options.colorButton.backColor), t.attr(\"data-backColor\", _this29.options.colorButton.backColor)), i ? (e.css(\"color\", _this29.options.colorButton.foreColor), t.attr(\"data-foreColor\", _this29.options.colorButton.foreColor)) : e.css(\"color\", \"transparent\");\n                      }\n                    }), this.button({\n                      className: \"dropdown-toggle\",\n                      contents: this.ui.dropdownButtonContents(\"\", this.options),\n                      tooltip: this.lang.color.more,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), this.ui.dropdown({\n                      items: (o ? ['<div class=\"note-palette\">', '<div class=\"note-palette-title\">' + this.lang.color.background + \"</div>\", \"<div>\", '<button type=\"button\" class=\"note-color-reset btn btn-light\" data-event=\"backColor\" data-value=\"inherit\">', this.lang.color.transparent, \"</button>\", \"</div>\", '<div class=\"note-holder\" data-event=\"backColor\"/>', \"<div>\", '<button type=\"button\" class=\"note-color-select btn\" data-event=\"openPalette\" data-value=\"backColorPicker\">', this.lang.color.cpSelect, \"</button>\", '<input type=\"color\" id=\"backColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.backColor + '\" data-event=\"backColorPalette\">', \"</div>\", '<div class=\"note-holder-custom\" id=\"backColorPalette\" data-event=\"backColor\"/>', \"</div>\"].join(\"\") : \"\") + (i ? ['<div class=\"note-palette\">', '<div class=\"note-palette-title\">' + this.lang.color.foreground + \"</div>\", \"<div>\", '<button type=\"button\" class=\"note-color-reset btn btn-light\" data-event=\"removeFormat\" data-value=\"foreColor\">', this.lang.color.resetToDefault, \"</button>\", \"</div>\", '<div class=\"note-holder\" data-event=\"foreColor\"/>', \"<div>\", '<button type=\"button\" class=\"note-color-select btn\" data-event=\"openPalette\" data-value=\"foreColorPicker\">', this.lang.color.cpSelect, \"</button>\", '<input type=\"color\" id=\"foreColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.foreColor + '\" data-event=\"foreColorPalette\">', \"</div>\", '<div class=\"note-holder-custom\" id=\"foreColorPalette\" data-event=\"foreColor\"/>', \"</div>\"].join(\"\") : \"\"),\n                      callback: function callback(t) {\n                        t.find(\".note-holder\").each(function (t, e) {\n                          var o = n()(e);\n                          o.append(_this29.ui.palette({\n                            colors: _this29.options.colors,\n                            colorsName: _this29.options.colorsName,\n                            eventName: o.data(\"event\"),\n                            container: _this29.options.container,\n                            tooltip: _this29.options.tooltip\n                          }).render());\n                        });\n                        var e = [[\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"]];\n                        t.find(\".note-holder-custom\").each(function (t, o) {\n                          var i = n()(o);\n                          i.append(_this29.ui.palette({\n                            colors: e,\n                            colorsName: e,\n                            eventName: i.data(\"event\"),\n                            container: _this29.options.container,\n                            tooltip: _this29.options.tooltip\n                          }).render());\n                        }), t.find(\"input[type=color]\").each(function (e, o) {\n                          n()(o).change(function () {\n                            var e = t.find(\"#\" + n()(this).data(\"event\")).find(\".note-color-btn\").first(),\n                                o = this.value.toUpperCase();\n                            e.css(\"background-color\", o).attr(\"aria-label\", o).attr(\"data-value\", o).attr(\"data-original-title\", o), e.click();\n                          });\n                        });\n                      },\n                      click: function click(e) {\n                        e.stopPropagation();\n                        var o = n()(\".\" + t).find(\".show\"),\n                            i = n()(e.target),\n                            s = i.data(\"event\");\n                        var r = i.attr(\"data-value\");\n\n                        if (\"openPalette\" === s) {\n                          var _t47 = o.find(\"#\" + r),\n                              _e25 = n()(o.find(\"#\" + _t47.data(\"event\")).find(\".note-color-row\")[0]),\n                              _i18 = _e25.find(\".note-color-btn\").last().detach(),\n                              _s8 = _t47.val();\n\n                          _i18.css(\"background-color\", _s8).attr(\"aria-label\", _s8).attr(\"data-value\", _s8).attr(\"data-original-title\", _s8), _e25.prepend(_i18), _t47.click();\n                        } else if (y.contains([\"backColor\", \"foreColor\"], s)) {\n                          var _t48 = \"backColor\" === s ? \"background-color\" : \"color\",\n                              _e26 = i.closest(\".note-color\").find(\".note-recent-color\"),\n                              _o27 = i.closest(\".note-color\").find(\".note-current-color-button\");\n\n                          _e26.css(_t48, r), _o27.attr(\"data-\" + s, r), _this29.context.invoke(\"editor.\" + s, r);\n                        }\n                      }\n                    })]\n                  }).render();\n                }\n              }, {\n                key: \"addToolbarButtons\",\n                value: function addToolbarButtons() {\n                  var _this30 = this;\n\n                  this.context.memo(\"button.style\", function () {\n                    return _this30.ui.buttonGroup([_this30.button({\n                      className: \"dropdown-toggle\",\n                      contents: _this30.ui.dropdownButtonContents(_this30.ui.icon(_this30.options.icons.magic), _this30.options),\n                      tooltip: _this30.lang.style.style,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), _this30.ui.dropdown({\n                      className: \"dropdown-style\",\n                      items: _this30.options.styleTags,\n                      title: _this30.lang.style.style,\n                      template: function template(t) {\n                        \"string\" == typeof t && (t = {\n                          tag: t,\n                          title: _this30.lang.style.hasOwnProperty(t) ? _this30.lang.style[t] : t\n                        });\n                        var e = t.tag,\n                            o = t.title;\n                        return \"<\" + e + (t.style ? ' style=\"' + t.style + '\" ' : \"\") + (t.className ? ' class=\"' + t.className + '\"' : \"\") + \">\" + o + \"</\" + e + \">\";\n                      },\n                      click: _this30.context.createInvokeHandler(\"editor.formatBlock\")\n                    })]).render();\n                  });\n\n                  var _loop = function _loop(_t49, _e27) {\n                    var e = _this30.options.styleTags[_t49];\n\n                    _this30.context.memo(\"button.style.\" + e, function () {\n                      return _this30.button({\n                        className: \"note-btn-style-\" + e,\n                        contents: '<div data-value=\"' + e + '\">' + e.toUpperCase() + \"</div>\",\n                        tooltip: _this30.lang.style[e],\n                        click: _this30.context.createInvokeHandler(\"editor.formatBlock\")\n                      }).render();\n                    });\n                  };\n\n                  for (var _t49 = 0, _e27 = this.options.styleTags.length; _t49 < _e27; _t49++) {\n                    _loop(_t49, _e27);\n                  }\n\n                  this.context.memo(\"button.bold\", function () {\n                    return _this30.button({\n                      className: \"note-btn-bold\",\n                      contents: _this30.ui.icon(_this30.options.icons.bold),\n                      tooltip: _this30.lang.font.bold + _this30.representShortcut(\"bold\"),\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.bold\")\n                    }).render();\n                  }), this.context.memo(\"button.italic\", function () {\n                    return _this30.button({\n                      className: \"note-btn-italic\",\n                      contents: _this30.ui.icon(_this30.options.icons.italic),\n                      tooltip: _this30.lang.font.italic + _this30.representShortcut(\"italic\"),\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.italic\")\n                    }).render();\n                  }), this.context.memo(\"button.underline\", function () {\n                    return _this30.button({\n                      className: \"note-btn-underline\",\n                      contents: _this30.ui.icon(_this30.options.icons.underline),\n                      tooltip: _this30.lang.font.underline + _this30.representShortcut(\"underline\"),\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.underline\")\n                    }).render();\n                  }), this.context.memo(\"button.clear\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.eraser),\n                      tooltip: _this30.lang.font.clear + _this30.representShortcut(\"removeFormat\"),\n                      click: _this30.context.createInvokeHandler(\"editor.removeFormat\")\n                    }).render();\n                  }), this.context.memo(\"button.strikethrough\", function () {\n                    return _this30.button({\n                      className: \"note-btn-strikethrough\",\n                      contents: _this30.ui.icon(_this30.options.icons.strikethrough),\n                      tooltip: _this30.lang.font.strikethrough + _this30.representShortcut(\"strikethrough\"),\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.strikethrough\")\n                    }).render();\n                  }), this.context.memo(\"button.superscript\", function () {\n                    return _this30.button({\n                      className: \"note-btn-superscript\",\n                      contents: _this30.ui.icon(_this30.options.icons.superscript),\n                      tooltip: _this30.lang.font.superscript,\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.superscript\")\n                    }).render();\n                  }), this.context.memo(\"button.subscript\", function () {\n                    return _this30.button({\n                      className: \"note-btn-subscript\",\n                      contents: _this30.ui.icon(_this30.options.icons.subscript),\n                      tooltip: _this30.lang.font.subscript,\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.subscript\")\n                    }).render();\n                  }), this.context.memo(\"button.fontname\", function () {\n                    var t = _this30.context.invoke(\"editor.currentStyle\");\n\n                    return _this30.options.addDefaultFonts && n.a.each(t[\"font-family\"].split(\",\"), function (t, e) {\n                      e = e.trim().replace(/['\"]+/g, \"\"), _this30.isFontDeservedToAdd(e) && -1 === _this30.options.fontNames.indexOf(e) && _this30.options.fontNames.push(e);\n                    }), _this30.ui.buttonGroup([_this30.button({\n                      className: \"dropdown-toggle\",\n                      contents: _this30.ui.dropdownButtonContents('<span class=\"note-current-fontname\"/>', _this30.options),\n                      tooltip: _this30.lang.font.name,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), _this30.ui.dropdownCheck({\n                      className: \"dropdown-fontname\",\n                      checkClassName: _this30.options.icons.menuCheck,\n                      items: _this30.options.fontNames.filter(_this30.isFontInstalled.bind(_this30)),\n                      title: _this30.lang.font.name,\n                      template: function template(t) {\n                        return '<span style=\"font-family: ' + f.validFontName(t) + '\">' + t + \"</span>\";\n                      },\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.fontName\")\n                    })]).render();\n                  }), this.context.memo(\"button.fontsize\", function () {\n                    return _this30.ui.buttonGroup([_this30.button({\n                      className: \"dropdown-toggle\",\n                      contents: _this30.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"/>', _this30.options),\n                      tooltip: _this30.lang.font.size,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), _this30.ui.dropdownCheck({\n                      className: \"dropdown-fontsize\",\n                      checkClassName: _this30.options.icons.menuCheck,\n                      items: _this30.options.fontSizes,\n                      title: _this30.lang.font.size,\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.fontSize\")\n                    })]).render();\n                  }), this.context.memo(\"button.fontsizeunit\", function () {\n                    return _this30.ui.buttonGroup([_this30.button({\n                      className: \"dropdown-toggle\",\n                      contents: _this30.ui.dropdownButtonContents('<span class=\"note-current-fontsizeunit\"/>', _this30.options),\n                      tooltip: _this30.lang.font.sizeunit,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), _this30.ui.dropdownCheck({\n                      className: \"dropdown-fontsizeunit\",\n                      checkClassName: _this30.options.icons.menuCheck,\n                      items: _this30.options.fontSizeUnits,\n                      title: _this30.lang.font.sizeunit,\n                      click: _this30.context.createInvokeHandlerAndUpdateState(\"editor.fontSizeUnit\")\n                    })]).render();\n                  }), this.context.memo(\"button.color\", function () {\n                    return _this30.colorPalette(\"note-color-all\", _this30.lang.color.recent, !0, !0);\n                  }), this.context.memo(\"button.forecolor\", function () {\n                    return _this30.colorPalette(\"note-color-fore\", _this30.lang.color.foreground, !1, !0);\n                  }), this.context.memo(\"button.backcolor\", function () {\n                    return _this30.colorPalette(\"note-color-back\", _this30.lang.color.background, !0, !1);\n                  }), this.context.memo(\"button.ul\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.unorderedlist),\n                      tooltip: _this30.lang.lists.unordered + _this30.representShortcut(\"insertUnorderedList\"),\n                      click: _this30.context.createInvokeHandler(\"editor.insertUnorderedList\")\n                    }).render();\n                  }), this.context.memo(\"button.ol\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.orderedlist),\n                      tooltip: _this30.lang.lists.ordered + _this30.representShortcut(\"insertOrderedList\"),\n                      click: _this30.context.createInvokeHandler(\"editor.insertOrderedList\")\n                    }).render();\n                  });\n                  var t = this.button({\n                    contents: this.ui.icon(this.options.icons.alignLeft),\n                    tooltip: this.lang.paragraph.left + this.representShortcut(\"justifyLeft\"),\n                    click: this.context.createInvokeHandler(\"editor.justifyLeft\")\n                  }),\n                      e = this.button({\n                    contents: this.ui.icon(this.options.icons.alignCenter),\n                    tooltip: this.lang.paragraph.center + this.representShortcut(\"justifyCenter\"),\n                    click: this.context.createInvokeHandler(\"editor.justifyCenter\")\n                  }),\n                      o = this.button({\n                    contents: this.ui.icon(this.options.icons.alignRight),\n                    tooltip: this.lang.paragraph.right + this.representShortcut(\"justifyRight\"),\n                    click: this.context.createInvokeHandler(\"editor.justifyRight\")\n                  }),\n                      i = this.button({\n                    contents: this.ui.icon(this.options.icons.alignJustify),\n                    tooltip: this.lang.paragraph.justify + this.representShortcut(\"justifyFull\"),\n                    click: this.context.createInvokeHandler(\"editor.justifyFull\")\n                  }),\n                      s = this.button({\n                    contents: this.ui.icon(this.options.icons.outdent),\n                    tooltip: this.lang.paragraph.outdent + this.representShortcut(\"outdent\"),\n                    click: this.context.createInvokeHandler(\"editor.outdent\")\n                  }),\n                      r = this.button({\n                    contents: this.ui.icon(this.options.icons.indent),\n                    tooltip: this.lang.paragraph.indent + this.representShortcut(\"indent\"),\n                    click: this.context.createInvokeHandler(\"editor.indent\")\n                  });\n                  this.context.memo(\"button.justifyLeft\", b.invoke(t, \"render\")), this.context.memo(\"button.justifyCenter\", b.invoke(e, \"render\")), this.context.memo(\"button.justifyRight\", b.invoke(o, \"render\")), this.context.memo(\"button.justifyFull\", b.invoke(i, \"render\")), this.context.memo(\"button.outdent\", b.invoke(s, \"render\")), this.context.memo(\"button.indent\", b.invoke(r, \"render\")), this.context.memo(\"button.paragraph\", function () {\n                    return _this30.ui.buttonGroup([_this30.button({\n                      className: \"dropdown-toggle\",\n                      contents: _this30.ui.dropdownButtonContents(_this30.ui.icon(_this30.options.icons.alignLeft), _this30.options),\n                      tooltip: _this30.lang.paragraph.paragraph,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), _this30.ui.dropdown([_this30.ui.buttonGroup({\n                      className: \"note-align\",\n                      children: [t, e, o, i]\n                    }), _this30.ui.buttonGroup({\n                      className: \"note-list\",\n                      children: [s, r]\n                    })])]).render();\n                  }), this.context.memo(\"button.height\", function () {\n                    return _this30.ui.buttonGroup([_this30.button({\n                      className: \"dropdown-toggle\",\n                      contents: _this30.ui.dropdownButtonContents(_this30.ui.icon(_this30.options.icons.textHeight), _this30.options),\n                      tooltip: _this30.lang.font.height,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), _this30.ui.dropdownCheck({\n                      items: _this30.options.lineHeights,\n                      checkClassName: _this30.options.icons.menuCheck,\n                      className: \"dropdown-line-height\",\n                      title: _this30.lang.font.height,\n                      click: _this30.context.createInvokeHandler(\"editor.lineHeight\")\n                    })]).render();\n                  }), this.context.memo(\"button.table\", function () {\n                    return _this30.ui.buttonGroup([_this30.button({\n                      className: \"dropdown-toggle\",\n                      contents: _this30.ui.dropdownButtonContents(_this30.ui.icon(_this30.options.icons.table), _this30.options),\n                      tooltip: _this30.lang.table.table,\n                      data: {\n                        toggle: \"dropdown\"\n                      }\n                    }), _this30.ui.dropdown({\n                      title: _this30.lang.table.table,\n                      className: \"note-table\",\n                      items: ['<div class=\"note-dimension-picker\">', '<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"/>', '<div class=\"note-dimension-picker-highlighted\"/>', '<div class=\"note-dimension-picker-unhighlighted\"/>', \"</div>\", '<div class=\"note-dimension-display\">1 x 1</div>'].join(\"\")\n                    })], {\n                      callback: function callback(t) {\n                        t.find(\".note-dimension-picker-mousecatcher\").css({\n                          width: _this30.options.insertTableMaxSize.col + \"em\",\n                          height: _this30.options.insertTableMaxSize.row + \"em\"\n                        }).mousedown(_this30.context.createInvokeHandler(\"editor.insertTable\")).on(\"mousemove\", _this30.tableMoveHandler.bind(_this30));\n                      }\n                    }).render();\n                  }), this.context.memo(\"button.link\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.link),\n                      tooltip: _this30.lang.link.link + _this30.representShortcut(\"linkDialog.show\"),\n                      click: _this30.context.createInvokeHandler(\"linkDialog.show\")\n                    }).render();\n                  }), this.context.memo(\"button.picture\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.picture),\n                      tooltip: _this30.lang.image.image,\n                      click: _this30.context.createInvokeHandler(\"imageDialog.show\")\n                    }).render();\n                  }), this.context.memo(\"button.video\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.video),\n                      tooltip: _this30.lang.video.video,\n                      click: _this30.context.createInvokeHandler(\"videoDialog.show\")\n                    }).render();\n                  }), this.context.memo(\"button.hr\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.minus),\n                      tooltip: _this30.lang.hr.insert + _this30.representShortcut(\"insertHorizontalRule\"),\n                      click: _this30.context.createInvokeHandler(\"editor.insertHorizontalRule\")\n                    }).render();\n                  }), this.context.memo(\"button.fullscreen\", function () {\n                    return _this30.button({\n                      className: \"btn-fullscreen\",\n                      contents: _this30.ui.icon(_this30.options.icons.arrowsAlt),\n                      tooltip: _this30.lang.options.fullscreen,\n                      click: _this30.context.createInvokeHandler(\"fullscreen.toggle\")\n                    }).render();\n                  }), this.context.memo(\"button.codeview\", function () {\n                    return _this30.button({\n                      className: \"btn-codeview\",\n                      contents: _this30.ui.icon(_this30.options.icons.code),\n                      tooltip: _this30.lang.options.codeview,\n                      click: _this30.context.createInvokeHandler(\"codeview.toggle\")\n                    }).render();\n                  }), this.context.memo(\"button.redo\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.redo),\n                      tooltip: _this30.lang.history.redo + _this30.representShortcut(\"redo\"),\n                      click: _this30.context.createInvokeHandler(\"editor.redo\")\n                    }).render();\n                  }), this.context.memo(\"button.undo\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.undo),\n                      tooltip: _this30.lang.history.undo + _this30.representShortcut(\"undo\"),\n                      click: _this30.context.createInvokeHandler(\"editor.undo\")\n                    }).render();\n                  }), this.context.memo(\"button.help\", function () {\n                    return _this30.button({\n                      contents: _this30.ui.icon(_this30.options.icons.question),\n                      tooltip: _this30.lang.options.help,\n                      click: _this30.context.createInvokeHandler(\"helpDialog.show\")\n                    }).render();\n                  });\n                }\n              }, {\n                key: \"addImagePopoverButtons\",\n                value: function addImagePopoverButtons() {\n                  var _this31 = this;\n\n                  this.context.memo(\"button.resizeFull\", function () {\n                    return _this31.button({\n                      contents: '<span class=\"note-fontsize-10\">100%</span>',\n                      tooltip: _this31.lang.image.resizeFull,\n                      click: _this31.context.createInvokeHandler(\"editor.resize\", \"1\")\n                    }).render();\n                  }), this.context.memo(\"button.resizeHalf\", function () {\n                    return _this31.button({\n                      contents: '<span class=\"note-fontsize-10\">50%</span>',\n                      tooltip: _this31.lang.image.resizeHalf,\n                      click: _this31.context.createInvokeHandler(\"editor.resize\", \"0.5\")\n                    }).render();\n                  }), this.context.memo(\"button.resizeQuarter\", function () {\n                    return _this31.button({\n                      contents: '<span class=\"note-fontsize-10\">25%</span>',\n                      tooltip: _this31.lang.image.resizeQuarter,\n                      click: _this31.context.createInvokeHandler(\"editor.resize\", \"0.25\")\n                    }).render();\n                  }), this.context.memo(\"button.resizeNone\", function () {\n                    return _this31.button({\n                      contents: _this31.ui.icon(_this31.options.icons.rollback),\n                      tooltip: _this31.lang.image.resizeNone,\n                      click: _this31.context.createInvokeHandler(\"editor.resize\", \"0\")\n                    }).render();\n                  }), this.context.memo(\"button.floatLeft\", function () {\n                    return _this31.button({\n                      contents: _this31.ui.icon(_this31.options.icons.floatLeft),\n                      tooltip: _this31.lang.image.floatLeft,\n                      click: _this31.context.createInvokeHandler(\"editor.floatMe\", \"left\")\n                    }).render();\n                  }), this.context.memo(\"button.floatRight\", function () {\n                    return _this31.button({\n                      contents: _this31.ui.icon(_this31.options.icons.floatRight),\n                      tooltip: _this31.lang.image.floatRight,\n                      click: _this31.context.createInvokeHandler(\"editor.floatMe\", \"right\")\n                    }).render();\n                  }), this.context.memo(\"button.floatNone\", function () {\n                    return _this31.button({\n                      contents: _this31.ui.icon(_this31.options.icons.rollback),\n                      tooltip: _this31.lang.image.floatNone,\n                      click: _this31.context.createInvokeHandler(\"editor.floatMe\", \"none\")\n                    }).render();\n                  }), this.context.memo(\"button.removeMedia\", function () {\n                    return _this31.button({\n                      contents: _this31.ui.icon(_this31.options.icons.trash),\n                      tooltip: _this31.lang.image.remove,\n                      click: _this31.context.createInvokeHandler(\"editor.removeMedia\")\n                    }).render();\n                  });\n                }\n              }, {\n                key: \"addLinkPopoverButtons\",\n                value: function addLinkPopoverButtons() {\n                  var _this32 = this;\n\n                  this.context.memo(\"button.linkDialogShow\", function () {\n                    return _this32.button({\n                      contents: _this32.ui.icon(_this32.options.icons.link),\n                      tooltip: _this32.lang.link.edit,\n                      click: _this32.context.createInvokeHandler(\"linkDialog.show\")\n                    }).render();\n                  }), this.context.memo(\"button.unlink\", function () {\n                    return _this32.button({\n                      contents: _this32.ui.icon(_this32.options.icons.unlink),\n                      tooltip: _this32.lang.link.unlink,\n                      click: _this32.context.createInvokeHandler(\"editor.unlink\")\n                    }).render();\n                  });\n                }\n              }, {\n                key: \"addTablePopoverButtons\",\n                value: function addTablePopoverButtons() {\n                  var _this33 = this;\n\n                  this.context.memo(\"button.addRowUp\", function () {\n                    return _this33.button({\n                      className: \"btn-md\",\n                      contents: _this33.ui.icon(_this33.options.icons.rowAbove),\n                      tooltip: _this33.lang.table.addRowAbove,\n                      click: _this33.context.createInvokeHandler(\"editor.addRow\", \"top\")\n                    }).render();\n                  }), this.context.memo(\"button.addRowDown\", function () {\n                    return _this33.button({\n                      className: \"btn-md\",\n                      contents: _this33.ui.icon(_this33.options.icons.rowBelow),\n                      tooltip: _this33.lang.table.addRowBelow,\n                      click: _this33.context.createInvokeHandler(\"editor.addRow\", \"bottom\")\n                    }).render();\n                  }), this.context.memo(\"button.addColLeft\", function () {\n                    return _this33.button({\n                      className: \"btn-md\",\n                      contents: _this33.ui.icon(_this33.options.icons.colBefore),\n                      tooltip: _this33.lang.table.addColLeft,\n                      click: _this33.context.createInvokeHandler(\"editor.addCol\", \"left\")\n                    }).render();\n                  }), this.context.memo(\"button.addColRight\", function () {\n                    return _this33.button({\n                      className: \"btn-md\",\n                      contents: _this33.ui.icon(_this33.options.icons.colAfter),\n                      tooltip: _this33.lang.table.addColRight,\n                      click: _this33.context.createInvokeHandler(\"editor.addCol\", \"right\")\n                    }).render();\n                  }), this.context.memo(\"button.deleteRow\", function () {\n                    return _this33.button({\n                      className: \"btn-md\",\n                      contents: _this33.ui.icon(_this33.options.icons.rowRemove),\n                      tooltip: _this33.lang.table.delRow,\n                      click: _this33.context.createInvokeHandler(\"editor.deleteRow\")\n                    }).render();\n                  }), this.context.memo(\"button.deleteCol\", function () {\n                    return _this33.button({\n                      className: \"btn-md\",\n                      contents: _this33.ui.icon(_this33.options.icons.colRemove),\n                      tooltip: _this33.lang.table.delCol,\n                      click: _this33.context.createInvokeHandler(\"editor.deleteCol\")\n                    }).render();\n                  }), this.context.memo(\"button.deleteTable\", function () {\n                    return _this33.button({\n                      className: \"btn-md\",\n                      contents: _this33.ui.icon(_this33.options.icons.trash),\n                      tooltip: _this33.lang.table.delTable,\n                      click: _this33.context.createInvokeHandler(\"editor.deleteTable\")\n                    }).render();\n                  });\n                }\n              }, {\n                key: \"build\",\n                value: function build(t, e) {\n                  for (var _o28 = 0, _i19 = e.length; _o28 < _i19; _o28++) {\n                    var _i20 = e[_o28],\n                        _n12 = Array.isArray(_i20) ? _i20[0] : _i20,\n                        _s9 = Array.isArray(_i20) ? 1 === _i20.length ? [_i20[0]] : _i20[1] : [_i20],\n                        _r5 = this.ui.buttonGroup({\n                      className: \"note-\" + _n12\n                    }).render();\n\n                    for (var _t50 = 0, _e28 = _s9.length; _t50 < _e28; _t50++) {\n                      var _e29 = this.context.memo(\"button.\" + _s9[_t50]);\n\n                      _e29 && _r5.append(\"function\" == typeof _e29 ? _e29(this.context) : _e29);\n                    }\n\n                    _r5.appendTo(t);\n                  }\n                }\n              }, {\n                key: \"updateCurrentStyle\",\n                value: function updateCurrentStyle(t) {\n                  var _this34 = this;\n\n                  var e = t || this.$toolbar,\n                      o = this.context.invoke(\"editor.currentStyle\");\n\n                  if (this.updateBtnStates(e, {\n                    \".note-btn-bold\": function noteBtnBold() {\n                      return \"bold\" === o[\"font-bold\"];\n                    },\n                    \".note-btn-italic\": function noteBtnItalic() {\n                      return \"italic\" === o[\"font-italic\"];\n                    },\n                    \".note-btn-underline\": function noteBtnUnderline() {\n                      return \"underline\" === o[\"font-underline\"];\n                    },\n                    \".note-btn-subscript\": function noteBtnSubscript() {\n                      return \"subscript\" === o[\"font-subscript\"];\n                    },\n                    \".note-btn-superscript\": function noteBtnSuperscript() {\n                      return \"superscript\" === o[\"font-superscript\"];\n                    },\n                    \".note-btn-strikethrough\": function noteBtnStrikethrough() {\n                      return \"strikethrough\" === o[\"font-strikethrough\"];\n                    }\n                  }), o[\"font-family\"]) {\n                    var _t51 = o[\"font-family\"].split(\",\").map(function (t) {\n                      return t.replace(/[\\'\\\"]/g, \"\").replace(/\\s+$/, \"\").replace(/^\\s+/, \"\");\n                    }),\n                        _i21 = y.find(_t51, this.isFontInstalled.bind(this));\n\n                    e.find(\".dropdown-fontname a\").each(function (t, e) {\n                      var o = n()(e),\n                          s = o.data(\"value\") + \"\" == _i21 + \"\";\n\n                      o.toggleClass(\"checked\", s);\n                    }), e.find(\".note-current-fontname\").text(_i21).css(\"font-family\", _i21);\n                  }\n\n                  if (o[\"font-size\"]) {\n                    var _t52 = o[\"font-size\"];\n                    e.find(\".dropdown-fontsize a\").each(function (e, o) {\n                      var i = n()(o),\n                          s = i.data(\"value\") + \"\" == _t52 + \"\";\n\n                      i.toggleClass(\"checked\", s);\n                    }), e.find(\".note-current-fontsize\").text(_t52);\n                    var _i22 = o[\"font-size-unit\"];\n                    e.find(\".dropdown-fontsizeunit a\").each(function (t, e) {\n                      var o = n()(e),\n                          s = o.data(\"value\") + \"\" == _i22 + \"\";\n\n                      o.toggleClass(\"checked\", s);\n                    }), e.find(\".note-current-fontsizeunit\").text(_i22);\n                  }\n\n                  if (o[\"line-height\"]) {\n                    var _t53 = o[\"line-height\"];\n                    e.find(\".dropdown-line-height li a\").each(function (e, o) {\n                      var i = n()(o).data(\"value\") + \"\" == _t53 + \"\";\n\n                      _this34.className = i ? \"checked\" : \"\";\n                    });\n                  }\n                }\n              }, {\n                key: \"updateBtnStates\",\n                value: function updateBtnStates(t, e) {\n                  var _this35 = this;\n\n                  n.a.each(e, function (e, o) {\n                    _this35.ui.toggleBtnActive(t.find(e), o());\n                  });\n                }\n              }, {\n                key: \"tableMoveHandler\",\n                value: function tableMoveHandler(t) {\n                  var e = n()(t.target.parentNode),\n                      o = e.next(),\n                      i = e.find(\".note-dimension-picker-mousecatcher\"),\n                      s = e.find(\".note-dimension-picker-highlighted\"),\n                      r = e.find(\".note-dimension-picker-unhighlighted\");\n                  var a;\n\n                  if (void 0 === t.offsetX) {\n                    var _e30 = n()(t.target).offset();\n\n                    a = {\n                      x: t.pageX - _e30.left,\n                      y: t.pageY - _e30.top\n                    };\n                  } else a = {\n                    x: t.offsetX,\n                    y: t.offsetY\n                  };\n\n                  var l = Math.ceil(a.x / 18) || 1,\n                      c = Math.ceil(a.y / 18) || 1;\n                  s.css({\n                    width: l + \"em\",\n                    height: c + \"em\"\n                  }), i.data(\"value\", l + \"x\" + c), l > 3 && l < this.options.insertTableMaxSize.col && r.css({\n                    width: l + 1 + \"em\"\n                  }), c > 3 && c < this.options.insertTableMaxSize.row && r.css({\n                    height: c + 1 + \"em\"\n                  }), o.html(l + \" x \" + c);\n                }\n              }]);\n\n              return buttons;\n            }(),\n            toolbar:\n            /*#__PURE__*/\n            function () {\n              function toolbar(t) {\n                _classCallCheck(this, toolbar);\n\n                this.context = t, this.$window = n()(window), this.$document = n()(document), this.ui = n.a.summernote.ui, this.$note = t.layoutInfo.note, this.$editor = t.layoutInfo.editor, this.$toolbar = t.layoutInfo.toolbar, this.$editable = t.layoutInfo.editable, this.$statusbar = t.layoutInfo.statusbar, this.options = t.options, this.isFollowing = !1, this.followScroll = this.followScroll.bind(this);\n              }\n\n              _createClass(toolbar, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return !this.options.airMode;\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  var _this36 = this;\n\n                  this.options.toolbar = this.options.toolbar || [], this.options.toolbar.length ? this.context.invoke(\"buttons.build\", this.$toolbar, this.options.toolbar) : this.$toolbar.hide(), this.options.toolbarContainer && this.$toolbar.appendTo(this.options.toolbarContainer), this.changeContainer(!1), this.$note.on(\"summernote.keyup summernote.mouseup summernote.change\", function () {\n                    _this36.context.invoke(\"buttons.updateCurrentStyle\");\n                  }), this.context.invoke(\"buttons.updateCurrentStyle\"), this.options.followingToolbar && this.$window.on(\"scroll resize\", this.followScroll);\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$toolbar.children().remove(), this.options.followingToolbar && this.$window.off(\"scroll resize\", this.followScroll);\n                }\n              }, {\n                key: \"followScroll\",\n                value: function followScroll() {\n                  if (this.$editor.hasClass(\"fullscreen\")) return !1;\n                  var t = this.$editor.outerHeight(),\n                      e = this.$editor.width(),\n                      o = this.$toolbar.height(),\n                      i = this.$statusbar.height();\n                  var s = 0;\n                  this.options.otherStaticBar && (s = n()(this.options.otherStaticBar).outerHeight());\n                  var r = this.$document.scrollTop(),\n                      a = this.$editor.offset().top,\n                      l = a - s,\n                      c = a + t - s - o - i;\n                  !this.isFollowing && r > l && r < c - o ? (this.isFollowing = !0, this.$toolbar.css({\n                    position: \"fixed\",\n                    top: s,\n                    width: e,\n                    zIndex: 1e3\n                  }), this.$editable.css({\n                    marginTop: this.$toolbar.height() + 5\n                  })) : this.isFollowing && (r < l || r > c) && (this.isFollowing = !1, this.$toolbar.css({\n                    position: \"relative\",\n                    top: 0,\n                    width: \"100%\",\n                    zIndex: \"auto\"\n                  }), this.$editable.css({\n                    marginTop: \"\"\n                  }));\n                }\n              }, {\n                key: \"changeContainer\",\n                value: function changeContainer(t) {\n                  t ? this.$toolbar.prependTo(this.$editor) : this.options.toolbarContainer && this.$toolbar.appendTo(this.options.toolbarContainer), this.options.followingToolbar && this.followScroll();\n                }\n              }, {\n                key: \"updateFullscreen\",\n                value: function updateFullscreen(t) {\n                  this.ui.toggleBtnActive(this.$toolbar.find(\".btn-fullscreen\"), t), this.changeContainer(t);\n                }\n              }, {\n                key: \"updateCodeview\",\n                value: function updateCodeview(t) {\n                  this.ui.toggleBtnActive(this.$toolbar.find(\".btn-codeview\"), t), t ? this.deactivate() : this.activate();\n                }\n              }, {\n                key: \"activate\",\n                value: function activate(t) {\n                  var e = this.$toolbar.find(\"button\");\n                  t || (e = e.not(\".btn-codeview\").not(\".btn-fullscreen\")), this.ui.toggleBtn(e, !0);\n                }\n              }, {\n                key: \"deactivate\",\n                value: function deactivate(t) {\n                  var e = this.$toolbar.find(\"button\");\n                  t || (e = e.not(\".btn-codeview\").not(\".btn-fullscreen\")), this.ui.toggleBtn(e, !1);\n                }\n              }]);\n\n              return toolbar;\n            }(),\n            linkDialog:\n            /*#__PURE__*/\n            function () {\n              function linkDialog(t) {\n                _classCallCheck(this, linkDialog);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.$body = n()(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo, t.memo(\"help.linkDialog.show\", this.options.langInfo.help[\"linkDialog.show\"]);\n              }\n\n              _createClass(linkDialog, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  var t = this.options.dialogsInBody ? this.$body : this.options.container,\n                      e = ['<div class=\"form-group note-form-group\">', \"<label for=\\\"note-dialog-link-txt-\".concat(this.options.id, \"\\\" class=\\\"note-form-label\\\">\").concat(this.lang.link.textToDisplay, \"</label>\"), \"<input id=\\\"note-dialog-link-txt-\".concat(this.options.id, \"\\\" class=\\\"note-link-text form-control note-form-control note-input\\\" type=\\\"text\\\"/>\"), \"</div>\", '<div class=\"form-group note-form-group\">', \"<label for=\\\"note-dialog-link-url-\".concat(this.options.id, \"\\\" class=\\\"note-form-label\\\">\").concat(this.lang.link.url, \"</label>\"), \"<input id=\\\"note-dialog-link-url-\".concat(this.options.id, \"\\\" class=\\\"note-link-url form-control note-form-control note-input\\\" type=\\\"text\\\" value=\\\"http://\\\"/>\"), \"</div>\", this.options.disableLinkTarget ? \"\" : n()(\"<div/>\").append(this.ui.checkbox({\n                    className: \"sn-checkbox-open-in-new-window\",\n                    text: this.lang.link.openInNewWindow,\n                    checked: !0\n                  }).render()).html(), n()(\"<div/>\").append(this.ui.checkbox({\n                    className: \"sn-checkbox-use-protocol\",\n                    text: this.lang.link.useProtocol,\n                    checked: !0\n                  }).render()).html()].join(\"\"),\n                      o = \"<input type=\\\"button\\\" href=\\\"#\\\" class=\\\"btn btn-primary note-btn note-btn-primary note-link-btn\\\" value=\\\"\".concat(this.lang.link.insert, \"\\\" disabled>\");\n                  this.$dialog = this.ui.dialog({\n                    className: \"link-dialog\",\n                    title: this.lang.link.insert,\n                    fade: this.options.dialogsFade,\n                    body: e,\n                    footer: o\n                  }).render().appendTo(t);\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n                }\n              }, {\n                key: \"bindEnterKey\",\n                value: function bindEnterKey(t, e) {\n                  t.on(\"keypress\", function (t) {\n                    t.keyCode === kt.code.ENTER && (t.preventDefault(), e.trigger(\"click\"));\n                  });\n                }\n              }, {\n                key: \"toggleLinkBtn\",\n                value: function toggleLinkBtn(t, e, o) {\n                  this.ui.toggleBtn(t, e.val() && o.val());\n                }\n              }, {\n                key: \"showLinkDialog\",\n                value: function showLinkDialog(t) {\n                  var _this37 = this;\n\n                  return n.a.Deferred(function (e) {\n                    var o = _this37.$dialog.find(\".note-link-text\"),\n                        i = _this37.$dialog.find(\".note-link-url\"),\n                        n = _this37.$dialog.find(\".note-link-btn\"),\n                        s = _this37.$dialog.find(\".sn-checkbox-open-in-new-window input[type=checkbox]\"),\n                        r = _this37.$dialog.find(\".sn-checkbox-use-protocol input[type=checkbox]\");\n\n                    _this37.ui.onDialogShown(_this37.$dialog, function () {\n                      _this37.context.triggerEvent(\"dialog.shown\"), !t.url && b.isValidUrl(t.text) && (t.url = t.text), o.on(\"input paste propertychange\", function () {\n                        t.text = o.val(), _this37.toggleLinkBtn(n, o, i);\n                      }).val(t.text), i.on(\"input paste propertychange\", function () {\n                        t.text || o.val(i.val()), _this37.toggleLinkBtn(n, o, i);\n                      }).val(t.url), f.isSupportTouch || i.trigger(\"focus\"), _this37.toggleLinkBtn(n, o, i), _this37.bindEnterKey(i, n), _this37.bindEnterKey(o, n);\n                      var a = void 0 !== t.isNewWindow ? t.isNewWindow : _this37.context.options.linkTargetBlank;\n                      s.prop(\"checked\", a);\n                      var l = !t.url && _this37.context.options.useProtocol;\n                      r.prop(\"checked\", l), n.one(\"click\", function (n) {\n                        n.preventDefault(), e.resolve({\n                          range: t.range,\n                          url: i.val(),\n                          text: o.val(),\n                          isNewWindow: s.is(\":checked\"),\n                          checkProtocol: r.is(\":checked\")\n                        }), _this37.ui.hideDialog(_this37.$dialog);\n                      });\n                    }), _this37.ui.onDialogHidden(_this37.$dialog, function () {\n                      o.off(), i.off(), n.off(), \"pending\" === e.state() && e.reject();\n                    }), _this37.ui.showDialog(_this37.$dialog);\n                  }).promise();\n                }\n              }, {\n                key: \"show\",\n                value: function show() {\n                  var _this38 = this;\n\n                  var t = this.context.invoke(\"editor.getLinkInfo\");\n                  this.context.invoke(\"editor.saveRange\"), this.showLinkDialog(t).then(function (t) {\n                    _this38.context.invoke(\"editor.restoreRange\"), _this38.context.invoke(\"editor.createLink\", t);\n                  }).fail(function () {\n                    _this38.context.invoke(\"editor.restoreRange\");\n                  });\n                }\n              }]);\n\n              return linkDialog;\n            }(),\n            linkPopover:\n            /*#__PURE__*/\n            function () {\n              function linkPopover(t) {\n                var _this39 = this;\n\n                _classCallCheck(this, linkPopover);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.options = t.options, this.events = {\n                  \"summernote.keyup summernote.mouseup summernote.change summernote.scroll\": function summernoteKeyupSummernoteMouseupSummernoteChangeSummernoteScroll() {\n                    _this39.update();\n                  },\n                  \"summernote.disable summernote.dialog.shown summernote.blur\": function summernoteDisableSummernoteDialogShownSummernoteBlur() {\n                    _this39.hide();\n                  }\n                };\n              }\n\n              _createClass(linkPopover, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return !y.isEmpty(this.options.popover.link);\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  this.$popover = this.ui.popover({\n                    className: \"note-link-popover\",\n                    callback: function callback(t) {\n                      t.find(\".popover-content,.note-popover-content\").prepend('<span><a target=\"_blank\"></a>&nbsp;</span>');\n                    }\n                  }).render().appendTo(this.options.container);\n                  var t = this.$popover.find(\".popover-content,.note-popover-content\");\n                  this.context.invoke(\"buttons.build\", t, this.options.popover.link), this.$popover.on(\"mousedown\", function (t) {\n                    t.preventDefault();\n                  });\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$popover.remove();\n                }\n              }, {\n                key: \"update\",\n                value: function update() {\n                  if (!this.context.invoke(\"editor.hasFocus\")) return void this.hide();\n                  var t = this.context.invoke(\"editor.getLastRange\");\n\n                  if (t.isCollapsed() && t.isOnAnchor()) {\n                    var _e31 = ut.ancestor(t.sc, ut.isAnchor),\n                        _o29 = n()(_e31).attr(\"href\");\n\n                    this.$popover.find(\"a\").attr(\"href\", _o29).html(_o29);\n\n                    var _i23 = ut.posFromPlaceholder(_e31),\n                        _s10 = n()(this.options.container).offset();\n\n                    _i23.top -= _s10.top, _i23.left -= _s10.left, this.$popover.css({\n                      display: \"block\",\n                      left: _i23.left,\n                      top: _i23.top\n                    });\n                  } else this.hide();\n                }\n              }, {\n                key: \"hide\",\n                value: function hide() {\n                  this.$popover.hide();\n                }\n              }]);\n\n              return linkPopover;\n            }(),\n            imageDialog:\n            /*#__PURE__*/\n            function () {\n              function imageDialog(t) {\n                _classCallCheck(this, imageDialog);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.$body = n()(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo;\n              }\n\n              _createClass(imageDialog, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  var t = \"\";\n\n                  if (this.options.maximumImageFileSize) {\n                    var _e32 = Math.floor(Math.log(this.options.maximumImageFileSize) / Math.log(1024)),\n                        _o30 = 1 * (this.options.maximumImageFileSize / Math.pow(1024, _e32)).toFixed(2) + \" \" + \" KMGTP\"[_e32] + \"B\";\n\n                    t = \"<small>\".concat(this.lang.image.maximumFileSize + \" : \" + _o30, \"</small>\");\n                  }\n\n                  var e = this.options.dialogsInBody ? this.$body : this.options.container,\n                      o = ['<div class=\"form-group note-form-group note-group-select-from-files\">', '<label for=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.selectFromFiles + \"</label>\", '<input id=\"note-dialog-image-file-' + this.options.id + '\" class=\"note-image-input form-control-file note-form-control note-input\" ', ' type=\"file\" name=\"files\" accept=\"image/*\" multiple=\"multiple\"/>', t, \"</div>\", '<div class=\"form-group note-group-image-url\">', '<label for=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-form-label\">' + this.lang.image.url + \"</label>\", '<input id=\"note-dialog-image-url-' + this.options.id + '\" class=\"note-image-url form-control note-form-control note-input\" type=\"text\"/>', \"</div>\"].join(\"\"),\n                      i = \"<input type=\\\"button\\\" href=\\\"#\\\" class=\\\"btn btn-primary note-btn note-btn-primary note-image-btn\\\" value=\\\"\".concat(this.lang.image.insert, \"\\\" disabled>\");\n                  this.$dialog = this.ui.dialog({\n                    title: this.lang.image.insert,\n                    fade: this.options.dialogsFade,\n                    body: o,\n                    footer: i\n                  }).render().appendTo(e);\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n                }\n              }, {\n                key: \"bindEnterKey\",\n                value: function bindEnterKey(t, e) {\n                  t.on(\"keypress\", function (t) {\n                    t.keyCode === kt.code.ENTER && (t.preventDefault(), e.trigger(\"click\"));\n                  });\n                }\n              }, {\n                key: \"show\",\n                value: function show() {\n                  var _this40 = this;\n\n                  this.context.invoke(\"editor.saveRange\"), this.showImageDialog().then(function (t) {\n                    _this40.ui.hideDialog(_this40.$dialog), _this40.context.invoke(\"editor.restoreRange\"), \"string\" == typeof t ? _this40.options.callbacks.onImageLinkInsert ? _this40.context.triggerEvent(\"image.link.insert\", t) : _this40.context.invoke(\"editor.insertImage\", t) : _this40.context.invoke(\"editor.insertImagesOrCallback\", t);\n                  }).fail(function () {\n                    _this40.context.invoke(\"editor.restoreRange\");\n                  });\n                }\n              }, {\n                key: \"showImageDialog\",\n                value: function showImageDialog() {\n                  var _this41 = this;\n\n                  return n.a.Deferred(function (t) {\n                    var e = _this41.$dialog.find(\".note-image-input\"),\n                        o = _this41.$dialog.find(\".note-image-url\"),\n                        i = _this41.$dialog.find(\".note-image-btn\");\n\n                    _this41.ui.onDialogShown(_this41.$dialog, function () {\n                      _this41.context.triggerEvent(\"dialog.shown\"), e.replaceWith(e.clone().on(\"change\", function (e) {\n                        t.resolve(e.target.files || e.target.value);\n                      }).val(\"\")), o.on(\"input paste propertychange\", function () {\n                        _this41.ui.toggleBtn(i, o.val());\n                      }).val(\"\"), f.isSupportTouch || o.trigger(\"focus\"), i.click(function (e) {\n                        e.preventDefault(), t.resolve(o.val());\n                      }), _this41.bindEnterKey(o, i);\n                    }), _this41.ui.onDialogHidden(_this41.$dialog, function () {\n                      e.off(), o.off(), i.off(), \"pending\" === t.state() && t.reject();\n                    }), _this41.ui.showDialog(_this41.$dialog);\n                  });\n                }\n              }]);\n\n              return imageDialog;\n            }(),\n            imagePopover:\n            /*#__PURE__*/\n            function () {\n              function imagePopover(t) {\n                var _this42 = this;\n\n                _classCallCheck(this, imagePopover);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.editable = t.layoutInfo.editable[0], this.options = t.options, this.events = {\n                  \"summernote.disable summernote.blur\": function summernoteDisableSummernoteBlur() {\n                    _this42.hide();\n                  }\n                };\n              }\n\n              _createClass(imagePopover, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return !y.isEmpty(this.options.popover.image);\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  this.$popover = this.ui.popover({\n                    className: \"note-image-popover\"\n                  }).render().appendTo(this.options.container);\n                  var t = this.$popover.find(\".popover-content,.note-popover-content\");\n                  this.context.invoke(\"buttons.build\", t, this.options.popover.image), this.$popover.on(\"mousedown\", function (t) {\n                    t.preventDefault();\n                  });\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$popover.remove();\n                }\n              }, {\n                key: \"update\",\n                value: function update(t, e) {\n                  if (ut.isImg(t)) {\n                    var _o31 = n()(t).offset(),\n                        _i24 = n()(this.options.container).offset();\n\n                    var _s11 = {};\n                    this.options.popatmouse ? (_s11.left = e.pageX - 20, _s11.top = e.pageY) : _s11 = _o31, _s11.top -= _i24.top, _s11.left -= _i24.left, this.$popover.css({\n                      display: \"block\",\n                      left: _s11.left,\n                      top: _s11.top\n                    });\n                  } else this.hide();\n                }\n              }, {\n                key: \"hide\",\n                value: function hide() {\n                  this.$popover.hide();\n                }\n              }]);\n\n              return imagePopover;\n            }(),\n            tablePopover:\n            /*#__PURE__*/\n            function () {\n              function tablePopover(t) {\n                var _this43 = this;\n\n                _classCallCheck(this, tablePopover);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.options = t.options, this.events = {\n                  \"summernote.mousedown\": function summernoteMousedown(t, e) {\n                    _this43.update(e.target);\n                  },\n                  \"summernote.keyup summernote.scroll summernote.change\": function summernoteKeyupSummernoteScrollSummernoteChange() {\n                    _this43.update();\n                  },\n                  \"summernote.disable summernote.blur\": function summernoteDisableSummernoteBlur() {\n                    _this43.hide();\n                  }\n                };\n              }\n\n              _createClass(tablePopover, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return !y.isEmpty(this.options.popover.table);\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  this.$popover = this.ui.popover({\n                    className: \"note-table-popover\"\n                  }).render().appendTo(this.options.container);\n                  var t = this.$popover.find(\".popover-content,.note-popover-content\");\n                  this.context.invoke(\"buttons.build\", t, this.options.popover.table), f.isFF && document.execCommand(\"enableInlineTableEditing\", !1, !1), this.$popover.on(\"mousedown\", function (t) {\n                    t.preventDefault();\n                  });\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$popover.remove();\n                }\n              }, {\n                key: \"update\",\n                value: function update(t) {\n                  if (this.context.isDisabled()) return !1;\n                  var e = ut.isCell(t);\n\n                  if (e) {\n                    var _e33 = ut.posFromPlaceholder(t),\n                        _o32 = n()(this.options.container).offset();\n\n                    _e33.top -= _o32.top, _e33.left -= _o32.left, this.$popover.css({\n                      display: \"block\",\n                      left: _e33.left,\n                      top: _e33.top\n                    });\n                  } else this.hide();\n\n                  return e;\n                }\n              }, {\n                key: \"hide\",\n                value: function hide() {\n                  this.$popover.hide();\n                }\n              }]);\n\n              return tablePopover;\n            }(),\n            videoDialog:\n            /*#__PURE__*/\n            function () {\n              function videoDialog(t) {\n                _classCallCheck(this, videoDialog);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.$body = n()(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo;\n              }\n\n              _createClass(videoDialog, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  var t = this.options.dialogsInBody ? this.$body : this.options.container,\n                      e = ['<div class=\"form-group note-form-group row-fluid\">', \"<label for=\\\"note-dialog-video-url-\".concat(this.options.id, \"\\\" class=\\\"note-form-label\\\">\").concat(this.lang.video.url, \" <small class=\\\"text-muted\\\">\").concat(this.lang.video.providers, \"</small></label>\"), \"<input id=\\\"note-dialog-video-url-\".concat(this.options.id, \"\\\" class=\\\"note-video-url form-control note-form-control note-input\\\" type=\\\"text\\\"/>\"), \"</div>\"].join(\"\"),\n                      o = \"<input type=\\\"button\\\" href=\\\"#\\\" class=\\\"btn btn-primary note-btn note-btn-primary note-video-btn\\\" value=\\\"\".concat(this.lang.video.insert, \"\\\" disabled>\");\n                  this.$dialog = this.ui.dialog({\n                    title: this.lang.video.insert,\n                    fade: this.options.dialogsFade,\n                    body: e,\n                    footer: o\n                  }).render().appendTo(t);\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n                }\n              }, {\n                key: \"bindEnterKey\",\n                value: function bindEnterKey(t, e) {\n                  t.on(\"keypress\", function (t) {\n                    t.keyCode === kt.code.ENTER && (t.preventDefault(), e.trigger(\"click\"));\n                  });\n                }\n              }, {\n                key: \"createVideoNode\",\n                value: function createVideoNode(t) {\n                  var e = /^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/,\n                      o = t.match(/\\/\\/(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([\\w|-]{11})(?:(?:[\\?&]t=)(\\S+))?$/),\n                      i = t.match(/(?:www\\.|\\/\\/)instagram\\.com\\/p\\/(.[a-zA-Z0-9_-]*)/),\n                      s = t.match(/\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/),\n                      r = t.match(/\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/),\n                      a = t.match(/.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/),\n                      l = t.match(/\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/),\n                      c = t.match(/\\/\\/v\\.qq\\.com.*?vid=(.+)/),\n                      h = t.match(/\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/),\n                      d = t.match(/^.+.(mp4|m4v)$/),\n                      u = t.match(/^.+.(ogg|ogv)$/),\n                      p = t.match(/^.+.(webm)$/),\n                      m = t.match(/(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/);\n                  var f;\n\n                  if (o && 11 === o[1].length) {\n                    var _t54 = o[1];\n                    var g = 0;\n\n                    if (void 0 !== o[2]) {\n                      var _t55 = o[2].match(e);\n\n                      if (_t55) for (var b = [3600, 60, 1], v = 0, k = b.length; v < k; v++) {\n                        g += void 0 !== _t55[v + 1] ? b[v] * parseInt(_t55[v + 1], 10) : 0;\n                      }\n                    }\n\n                    f = n()(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"//www.youtube.com/embed/\" + _t54 + (g > 0 ? \"?start=\" + g : \"\")).attr(\"width\", \"640\").attr(\"height\", \"360\");\n                  } else if (i && i[0].length) f = n()(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"https://instagram.com/p/\" + i[1] + \"/embed/\").attr(\"width\", \"612\").attr(\"height\", \"710\").attr(\"scrolling\", \"no\").attr(\"allowtransparency\", \"true\");else if (s && s[0].length) f = n()(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", s[0] + \"/embed/simple\").attr(\"width\", \"600\").attr(\"height\", \"600\").attr(\"class\", \"vine-embed\");else if (r && r[3].length) f = n()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\", 0).attr(\"src\", \"//player.vimeo.com/video/\" + r[3]).attr(\"width\", \"640\").attr(\"height\", \"360\");else if (a && a[2].length) f = n()(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"//www.dailymotion.com/embed/video/\" + a[2]).attr(\"width\", \"640\").attr(\"height\", \"360\");else if (l && l[1].length) f = n()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\", 0).attr(\"height\", \"498\").attr(\"width\", \"510\").attr(\"src\", \"//player.youku.com/embed/\" + l[1]);else if (c && c[1].length || h && h[2].length) {\n                    var _t56 = c && c[1].length ? c[1] : h[2];\n\n                    f = n()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\", 0).attr(\"height\", \"310\").attr(\"width\", \"500\").attr(\"src\", \"https://v.qq.com/iframe/player.html?vid=\" + _t56 + \"&amp;auto=0\");\n                  } else if (d || u || p) f = n()(\"<video controls>\").attr(\"src\", t).attr(\"width\", \"640\").attr(\"height\", \"360\");else {\n                    if (!m || !m[0].length) return !1;\n                    f = n()(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"https://www.facebook.com/plugins/video.php?href=\" + encodeURIComponent(m[0]) + \"&show_text=0&width=560\").attr(\"width\", \"560\").attr(\"height\", \"301\").attr(\"scrolling\", \"no\").attr(\"allowtransparency\", \"true\");\n                  }\n\n                  return f.addClass(\"note-video-clip\"), f[0];\n                }\n              }, {\n                key: \"show\",\n                value: function show() {\n                  var _this44 = this;\n\n                  var t = this.context.invoke(\"editor.getSelectedText\");\n                  this.context.invoke(\"editor.saveRange\"), this.showVideoDialog(t).then(function (t) {\n                    _this44.ui.hideDialog(_this44.$dialog), _this44.context.invoke(\"editor.restoreRange\");\n\n                    var e = _this44.createVideoNode(t);\n\n                    e && _this44.context.invoke(\"editor.insertNode\", e);\n                  }).fail(function () {\n                    _this44.context.invoke(\"editor.restoreRange\");\n                  });\n                }\n              }, {\n                key: \"showVideoDialog\",\n                value: function showVideoDialog(t) {\n                  var _this45 = this;\n\n                  return n.a.Deferred(function (t) {\n                    var e = _this45.$dialog.find(\".note-video-url\"),\n                        o = _this45.$dialog.find(\".note-video-btn\");\n\n                    _this45.ui.onDialogShown(_this45.$dialog, function () {\n                      _this45.context.triggerEvent(\"dialog.shown\"), e.on(\"input paste propertychange\", function () {\n                        _this45.ui.toggleBtn(o, e.val());\n                      }), f.isSupportTouch || e.trigger(\"focus\"), o.click(function (o) {\n                        o.preventDefault(), t.resolve(e.val());\n                      }), _this45.bindEnterKey(e, o);\n                    }), _this45.ui.onDialogHidden(_this45.$dialog, function () {\n                      e.off(), o.off(), \"pending\" === t.state() && t.reject();\n                    }), _this45.ui.showDialog(_this45.$dialog);\n                  });\n                }\n              }]);\n\n              return videoDialog;\n            }(),\n            helpDialog:\n            /*#__PURE__*/\n            function () {\n              function helpDialog(t) {\n                _classCallCheck(this, helpDialog);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.$body = n()(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo;\n              }\n\n              _createClass(helpDialog, [{\n                key: \"initialize\",\n                value: function initialize() {\n                  var t = this.options.dialogsInBody ? this.$body : this.options.container,\n                      e = ['<p class=\"text-center\">', '<a href=\"http://summernote.org/\" target=\"_blank\">Summernote 0.8.15</a> · ', '<a href=\"https://github.com/summernote/summernote\" target=\"_blank\">Project</a> · ', '<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\">Issues</a>', \"</p>\"].join(\"\");\n                  this.$dialog = this.ui.dialog({\n                    title: this.lang.options.help,\n                    fade: this.options.dialogsFade,\n                    body: this.createShortcutList(),\n                    footer: e,\n                    callback: function callback(t) {\n                      t.find(\".modal-body,.note-modal-body\").css({\n                        \"max-height\": 300,\n                        overflow: \"scroll\"\n                      });\n                    }\n                  }).render().appendTo(t);\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n                }\n              }, {\n                key: \"createShortcutList\",\n                value: function createShortcutList() {\n                  var _this46 = this;\n\n                  var t = this.options.keyMap[f.isMac ? \"mac\" : \"pc\"];\n                  return Object.keys(t).map(function (e) {\n                    var o = t[e],\n                        i = n()('<div><div class=\"help-list-item\"/></div>');\n                    return i.append(n()(\"<label><kbd>\" + e + \"</kdb></label>\").css({\n                      width: 180,\n                      \"margin-right\": 10\n                    })).append(n()(\"<span/>\").html(_this46.context.memo(\"help.\" + o) || o)), i.html();\n                  }).join(\"\");\n                }\n              }, {\n                key: \"showHelpDialog\",\n                value: function showHelpDialog() {\n                  var _this47 = this;\n\n                  return n.a.Deferred(function (t) {\n                    _this47.ui.onDialogShown(_this47.$dialog, function () {\n                      _this47.context.triggerEvent(\"dialog.shown\"), t.resolve();\n                    }), _this47.ui.showDialog(_this47.$dialog);\n                  }).promise();\n                }\n              }, {\n                key: \"show\",\n                value: function show() {\n                  var _this48 = this;\n\n                  this.context.invoke(\"editor.saveRange\"), this.showHelpDialog().then(function () {\n                    _this48.context.invoke(\"editor.restoreRange\");\n                  });\n                }\n              }]);\n\n              return helpDialog;\n            }(),\n            airPopover:\n            /*#__PURE__*/\n            function () {\n              function airPopover(t) {\n                var _this49 = this;\n\n                _classCallCheck(this, airPopover);\n\n                this.context = t, this.ui = n.a.summernote.ui, this.options = t.options, this.hidable = !0, this.events = {\n                  \"summernote.keyup summernote.mouseup summernote.scroll\": function summernoteKeyupSummernoteMouseupSummernoteScroll() {\n                    _this49.options.editing && _this49.update();\n                  },\n                  \"summernote.disable summernote.change summernote.dialog.shown summernote.blur\": function summernoteDisableSummernoteChangeSummernoteDialogShownSummernoteBlur() {\n                    _this49.hide();\n                  },\n                  \"summernote.focusout\": function summernoteFocusout(t, e) {\n                    _this49.$popover.is(\":active,:focus\") || _this49.hide();\n                  }\n                };\n              }\n\n              _createClass(airPopover, [{\n                key: \"shouldInitialize\",\n                value: function shouldInitialize() {\n                  return this.options.airMode && !y.isEmpty(this.options.popover.air);\n                }\n              }, {\n                key: \"initialize\",\n                value: function initialize() {\n                  var _this50 = this;\n\n                  this.$popover = this.ui.popover({\n                    className: \"note-air-popover\"\n                  }).render().appendTo(this.options.container);\n                  var t = this.$popover.find(\".popover-content\");\n                  this.context.invoke(\"buttons.build\", t, this.options.popover.air), this.$popover.on(\"mousedown\", function () {\n                    _this50.hidable = !1;\n                  }), this.$popover.on(\"mouseup\", function () {\n                    _this50.hidable = !0;\n                  });\n                }\n              }, {\n                key: \"destroy\",\n                value: function destroy() {\n                  this.$popover.remove();\n                }\n              }, {\n                key: \"update\",\n                value: function update() {\n                  var t = this.context.invoke(\"editor.currentStyle\");\n\n                  if (t.range && !t.range.isCollapsed()) {\n                    var _e34 = y.last(t.range.getClientRects());\n\n                    if (_e34) {\n                      var _t57 = b.rect2bnd(_e34);\n\n                      this.$popover.css({\n                        display: \"block\",\n                        left: Math.max(_t57.left + _t57.width / 2, 0) - 20,\n                        top: _t57.top + _t57.height\n                      }), this.context.invoke(\"buttons.updateCurrentStyle\", this.$popover);\n                    }\n                  } else this.hide();\n                }\n              }, {\n                key: \"hide\",\n                value: function hide() {\n                  this.hidable && this.$popover.hide();\n                }\n              }]);\n\n              return airPopover;\n            }()\n          },\n          buttons: {},\n          lang: \"en-US\",\n          followingToolbar: !1,\n          toolbarPosition: \"top\",\n          otherStaticBar: \"\",\n          toolbar: [[\"style\", [\"style\"]], [\"font\", [\"bold\", \"underline\", \"clear\"]], [\"fontname\", [\"fontname\"]], [\"color\", [\"color\"]], [\"para\", [\"ul\", \"ol\", \"paragraph\"]], [\"table\", [\"table\"]], [\"insert\", [\"link\", \"picture\", \"video\"]], [\"view\", [\"fullscreen\", \"codeview\", \"help\"]]],\n          popatmouse: !0,\n          popover: {\n            image: [[\"resize\", [\"resizeFull\", \"resizeHalf\", \"resizeQuarter\", \"resizeNone\"]], [\"float\", [\"floatLeft\", \"floatRight\", \"floatNone\"]], [\"remove\", [\"removeMedia\"]]],\n            link: [[\"link\", [\"linkDialogShow\", \"unlink\"]]],\n            table: [[\"add\", [\"addRowDown\", \"addRowUp\", \"addColLeft\", \"addColRight\"]], [\"delete\", [\"deleteRow\", \"deleteCol\", \"deleteTable\"]]],\n            air: [[\"color\", [\"color\"]], [\"font\", [\"bold\", \"underline\", \"clear\"]], [\"para\", [\"ul\", \"paragraph\"]], [\"table\", [\"table\"]], [\"insert\", [\"link\", \"picture\"]], [\"view\", [\"fullscreen\", \"codeview\"]]]\n          },\n          airMode: !1,\n          width: null,\n          height: null,\n          linkTargetBlank: !0,\n          useProtocol: !0,\n          defaultProtocol: \"http://\",\n          focus: !1,\n          tabDisabled: !1,\n          tabSize: 4,\n          styleWithSpan: !0,\n          shortcuts: !0,\n          textareaAutoSync: !0,\n          tooltip: \"auto\",\n          container: null,\n          maxTextLength: 0,\n          blockquoteBreakingLevel: 2,\n          spellCheck: !0,\n          disableGrammar: !1,\n          placeholder: null,\n          inheritPlaceholder: !1,\n          hintMode: \"word\",\n          hintSelect: \"after\",\n          hintDirection: \"bottom\",\n          styleTags: [\"p\", \"blockquote\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n          fontNames: [\"Arial\", \"Arial Black\", \"Comic Sans MS\", \"Courier New\", \"Helvetica Neue\", \"Helvetica\", \"Impact\", \"Lucida Grande\", \"Tahoma\", \"Times New Roman\", \"Verdana\"],\n          fontNamesIgnoreCheck: [],\n          addDefaultFonts: !0,\n          fontSizes: [\"8\", \"9\", \"10\", \"11\", \"12\", \"14\", \"18\", \"24\", \"36\"],\n          fontSizeUnits: [\"px\", \"pt\"],\n          colors: [[\"#000000\", \"#424242\", \"#636363\", \"#9C9C94\", \"#CEC6CE\", \"#EFEFEF\", \"#F7F7F7\", \"#FFFFFF\"], [\"#FF0000\", \"#FF9C00\", \"#FFFF00\", \"#00FF00\", \"#00FFFF\", \"#0000FF\", \"#9C00FF\", \"#FF00FF\"], [\"#F7C6CE\", \"#FFE7CE\", \"#FFEFC6\", \"#D6EFD6\", \"#CEDEE7\", \"#CEE7F7\", \"#D6D6E7\", \"#E7D6DE\"], [\"#E79C9C\", \"#FFC69C\", \"#FFE79C\", \"#B5D6A5\", \"#A5C6CE\", \"#9CC6EF\", \"#B5A5D6\", \"#D6A5BD\"], [\"#E76363\", \"#F7AD6B\", \"#FFD663\", \"#94BD7B\", \"#73A5AD\", \"#6BADDE\", \"#8C7BC6\", \"#C67BA5\"], [\"#CE0000\", \"#E79439\", \"#EFC631\", \"#6BA54A\", \"#4A7B8C\", \"#3984C6\", \"#634AA5\", \"#A54A7B\"], [\"#9C0000\", \"#B56308\", \"#BD9400\", \"#397B21\", \"#104A5A\", \"#085294\", \"#311873\", \"#731842\"], [\"#630000\", \"#7B3900\", \"#846300\", \"#295218\", \"#083139\", \"#003163\", \"#21104A\", \"#4A1031\"]],\n          colorsName: [[\"Black\", \"Tundora\", \"Dove Gray\", \"Star Dust\", \"Pale Slate\", \"Gallery\", \"Alabaster\", \"White\"], [\"Red\", \"Orange Peel\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Electric Violet\", \"Magenta\"], [\"Azalea\", \"Karry\", \"Egg White\", \"Zanah\", \"Botticelli\", \"Tropical Blue\", \"Mischka\", \"Twilight\"], [\"Tonys Pink\", \"Peach Orange\", \"Cream Brulee\", \"Sprout\", \"Casper\", \"Perano\", \"Cold Purple\", \"Careys Pink\"], [\"Mandy\", \"Rajah\", \"Dandelion\", \"Olivine\", \"Gulf Stream\", \"Viking\", \"Blue Marguerite\", \"Puce\"], [\"Guardsman Red\", \"Fire Bush\", \"Golden Dream\", \"Chelsea Cucumber\", \"Smalt Blue\", \"Boston Blue\", \"Butterfly Bush\", \"Cadillac\"], [\"Sangria\", \"Mai Tai\", \"Buddha Gold\", \"Forest Green\", \"Eden\", \"Venice Blue\", \"Meteorite\", \"Claret\"], [\"Rosewood\", \"Cinnamon\", \"Olive\", \"Parsley\", \"Tiber\", \"Midnight Blue\", \"Valentino\", \"Loulou\"]],\n          colorButton: {\n            foreColor: \"#000000\",\n            backColor: \"#FFFF00\"\n          },\n          lineHeights: [\"1.0\", \"1.2\", \"1.4\", \"1.5\", \"1.6\", \"1.8\", \"2.0\", \"3.0\"],\n          tableClassName: \"table table-bordered\",\n          insertTableMaxSize: {\n            col: 10,\n            row: 10\n          },\n          dialogsInBody: !1,\n          dialogsFade: !1,\n          maximumImageFileSize: null,\n          callbacks: {\n            onBeforeCommand: null,\n            onBlur: null,\n            onBlurCodeview: null,\n            onChange: null,\n            onChangeCodeview: null,\n            onDialogShown: null,\n            onEnter: null,\n            onFocus: null,\n            onImageLinkInsert: null,\n            onImageUpload: null,\n            onImageUploadError: null,\n            onInit: null,\n            onKeydown: null,\n            onKeyup: null,\n            onMousedown: null,\n            onMouseup: null,\n            onPaste: null,\n            onScroll: null\n          },\n          codemirror: {\n            mode: \"text/html\",\n            htmlMode: !0,\n            lineNumbers: !0\n          },\n          codeviewFilter: !1,\n          codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,\n          codeviewIframeFilter: !0,\n          codeviewIframeWhitelistSrc: [],\n          codeviewIframeWhitelistSrcBase: [\"www.youtube.com\", \"www.youtube-nocookie.com\", \"www.facebook.com\", \"vine.co\", \"instagram.com\", \"player.vimeo.com\", \"www.dailymotion.com\", \"player.youku.com\", \"v.qq.com\"],\n          keyMap: {\n            pc: {\n              ENTER: \"insertParagraph\",\n              \"CTRL+Z\": \"undo\",\n              \"CTRL+Y\": \"redo\",\n              TAB: \"tab\",\n              \"SHIFT+TAB\": \"untab\",\n              \"CTRL+B\": \"bold\",\n              \"CTRL+I\": \"italic\",\n              \"CTRL+U\": \"underline\",\n              \"CTRL+SHIFT+S\": \"strikethrough\",\n              \"CTRL+BACKSLASH\": \"removeFormat\",\n              \"CTRL+SHIFT+L\": \"justifyLeft\",\n              \"CTRL+SHIFT+E\": \"justifyCenter\",\n              \"CTRL+SHIFT+R\": \"justifyRight\",\n              \"CTRL+SHIFT+J\": \"justifyFull\",\n              \"CTRL+SHIFT+NUM7\": \"insertUnorderedList\",\n              \"CTRL+SHIFT+NUM8\": \"insertOrderedList\",\n              \"CTRL+LEFTBRACKET\": \"outdent\",\n              \"CTRL+RIGHTBRACKET\": \"indent\",\n              \"CTRL+NUM0\": \"formatPara\",\n              \"CTRL+NUM1\": \"formatH1\",\n              \"CTRL+NUM2\": \"formatH2\",\n              \"CTRL+NUM3\": \"formatH3\",\n              \"CTRL+NUM4\": \"formatH4\",\n              \"CTRL+NUM5\": \"formatH5\",\n              \"CTRL+NUM6\": \"formatH6\",\n              \"CTRL+ENTER\": \"insertHorizontalRule\",\n              \"CTRL+K\": \"linkDialog.show\"\n            },\n            mac: {\n              ENTER: \"insertParagraph\",\n              \"CMD+Z\": \"undo\",\n              \"CMD+SHIFT+Z\": \"redo\",\n              TAB: \"tab\",\n              \"SHIFT+TAB\": \"untab\",\n              \"CMD+B\": \"bold\",\n              \"CMD+I\": \"italic\",\n              \"CMD+U\": \"underline\",\n              \"CMD+SHIFT+S\": \"strikethrough\",\n              \"CMD+BACKSLASH\": \"removeFormat\",\n              \"CMD+SHIFT+L\": \"justifyLeft\",\n              \"CMD+SHIFT+E\": \"justifyCenter\",\n              \"CMD+SHIFT+R\": \"justifyRight\",\n              \"CMD+SHIFT+J\": \"justifyFull\",\n              \"CMD+SHIFT+NUM7\": \"insertUnorderedList\",\n              \"CMD+SHIFT+NUM8\": \"insertOrderedList\",\n              \"CMD+LEFTBRACKET\": \"outdent\",\n              \"CMD+RIGHTBRACKET\": \"indent\",\n              \"CMD+NUM0\": \"formatPara\",\n              \"CMD+NUM1\": \"formatH1\",\n              \"CMD+NUM2\": \"formatH2\",\n              \"CMD+NUM3\": \"formatH3\",\n              \"CMD+NUM4\": \"formatH4\",\n              \"CMD+NUM5\": \"formatH5\",\n              \"CMD+NUM6\": \"formatH6\",\n              \"CMD+ENTER\": \"insertHorizontalRule\",\n              \"CMD+K\": \"linkDialog.show\"\n            }\n          },\n          icons: {\n            align: \"note-icon-align\",\n            alignCenter: \"note-icon-align-center\",\n            alignJustify: \"note-icon-align-justify\",\n            alignLeft: \"note-icon-align-left\",\n            alignRight: \"note-icon-align-right\",\n            rowBelow: \"note-icon-row-below\",\n            colBefore: \"note-icon-col-before\",\n            colAfter: \"note-icon-col-after\",\n            rowAbove: \"note-icon-row-above\",\n            rowRemove: \"note-icon-row-remove\",\n            colRemove: \"note-icon-col-remove\",\n            indent: \"note-icon-align-indent\",\n            outdent: \"note-icon-align-outdent\",\n            arrowsAlt: \"note-icon-arrows-alt\",\n            bold: \"note-icon-bold\",\n            caret: \"note-icon-caret\",\n            circle: \"note-icon-circle\",\n            close: \"note-icon-close\",\n            code: \"note-icon-code\",\n            eraser: \"note-icon-eraser\",\n            floatLeft: \"note-icon-float-left\",\n            floatRight: \"note-icon-float-right\",\n            font: \"note-icon-font\",\n            frame: \"note-icon-frame\",\n            italic: \"note-icon-italic\",\n            link: \"note-icon-link\",\n            unlink: \"note-icon-chain-broken\",\n            magic: \"note-icon-magic\",\n            menuCheck: \"note-icon-menu-check\",\n            minus: \"note-icon-minus\",\n            orderedlist: \"note-icon-orderedlist\",\n            pencil: \"note-icon-pencil\",\n            picture: \"note-icon-picture\",\n            question: \"note-icon-question\",\n            redo: \"note-icon-redo\",\n            rollback: \"note-icon-rollback\",\n            square: \"note-icon-square\",\n            strikethrough: \"note-icon-strikethrough\",\n            subscript: \"note-icon-subscript\",\n            superscript: \"note-icon-superscript\",\n            table: \"note-icon-table\",\n            textHeight: \"note-icon-text-height\",\n            trash: \"note-icon-trash\",\n            underline: \"note-icon-underline\",\n            undo: \"note-icon-undo\",\n            unorderedlist: \"note-icon-unorderedlist\",\n            video: \"note-icon-video\"\n          }\n        }\n      });\n    },\n    4: function _(t, e, o) {},\n    51: function _(t, e, o) {\n      \"use strict\";\n\n      o.r(e);\n      var i = o(0),\n          n = o.n(i),\n          s = o(1);\n\n      var r = s.a.create('<div class=\"note-editor note-frame panel panel-default\"/>'),\n          a = s.a.create('<div class=\"note-toolbar panel-heading\" role=\"toolbar\"></div></div>'),\n          l = s.a.create('<div class=\"note-editing-area\"/>'),\n          c = s.a.create('<textarea class=\"note-codable\" aria-multiline=\"true\"/>'),\n          h = s.a.create('<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"/>'),\n          d = s.a.create(['<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"/>', '<div class=\"note-statusbar\" role=\"status\">', '<div class=\"note-resizebar\" aria-label=\"Resize\">', '<div class=\"note-icon-bar\"/>', '<div class=\"note-icon-bar\"/>', '<div class=\"note-icon-bar\"/>', \"</div>\", \"</div>\"].join(\"\")),\n          u = s.a.create('<div class=\"note-editor note-airframe\"/>'),\n          p = s.a.create(['<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"/>', '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"/>'].join(\"\")),\n          m = s.a.create('<div class=\"note-btn-group btn-group\">'),\n          f = s.a.create('<ul class=\"note-dropdown-menu dropdown-menu\">', function (t, e) {\n        var o = Array.isArray(e.items) ? e.items.map(function (t) {\n          var o = \"string\" == typeof t ? t : t.value || \"\",\n              i = e.template ? e.template(t) : t,\n              n = \"object\" == typeof t ? t.option : void 0;\n          return '<li aria-label=\"' + o + '\"><a href=\"#\" ' + ('data-value=\"' + o + '\"' + (void 0 !== n ? ' data-option=\"' + n + '\"' : \"\")) + \">\" + i + \"</a></li>\";\n        }).join(\"\") : e.items;\n        t.html(o).attr({\n          \"aria-label\": e.title\n        });\n      }),\n          g = function g(t, e) {\n        return t + \" \" + w(e.icons.caret, \"span\");\n      },\n          b = s.a.create('<ul class=\"note-dropdown-menu dropdown-menu note-check\">', function (t, e) {\n        var o = Array.isArray(e.items) ? e.items.map(function (t) {\n          var o = \"string\" == typeof t ? t : t.value || \"\",\n              i = e.template ? e.template(t) : t;\n          return '<li aria-label=\"' + t + '\"><a href=\"#\" data-value=\"' + o + '\">' + w(e.checkClassName) + \" \" + i + \"</a></li>\";\n        }).join(\"\") : e.items;\n        t.html(o).attr({\n          \"aria-label\": e.title\n        });\n      }),\n          v = s.a.create('<div class=\"modal note-modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"/>', function (t, e) {\n        e.fade && t.addClass(\"fade\"), t.attr({\n          \"aria-label\": e.title\n        }), t.html(['<div class=\"modal-dialog\">', '<div class=\"modal-content\">', e.title ? '<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\">&times;</button><h4 class=\"modal-title\">' + e.title + \"</h4></div>\" : \"\", '<div class=\"modal-body\">' + e.body + \"</div>\", e.footer ? '<div class=\"modal-footer\">' + e.footer + \"</div>\" : \"\", \"</div>\", \"</div>\"].join(\"\"));\n      }),\n          k = s.a.create(['<div class=\"note-popover popover in\">', '<div class=\"arrow\"/>', '<div class=\"popover-content note-children-container\"/>', \"</div>\"].join(\"\"), function (t, e) {\n        var o = void 0 !== e.direction ? e.direction : \"bottom\";\n        t.addClass(o), e.hideArrow && t.find(\".arrow\").hide();\n      }),\n          C = s.a.create('<div class=\"checkbox\"></div>', function (t, e) {\n        t.html([\"<label\" + (e.id ? ' for=\"note-' + e.id + '\"' : \"\") + \">\", '<input type=\"checkbox\"' + (e.id ? ' id=\"note-' + e.id + '\"' : \"\"), e.checked ? \" checked\" : \"\", ' aria-checked=\"' + (e.checked ? \"true\" : \"false\") + '\"/>', e.text ? e.text : \"\", \"</label>\"].join(\"\"));\n      }),\n          w = function w(t, e) {\n        return \"<\" + (e = e || \"i\") + ' class=\"' + t + '\"/>';\n      };\n\n      var y = function y(t) {\n        return {\n          editor: r,\n          toolbar: a,\n          editingArea: l,\n          codable: c,\n          editable: h,\n          statusbar: d,\n          airEditor: u,\n          airEditable: p,\n          buttonGroup: m,\n          dropdown: f,\n          dropdownButtonContents: g,\n          dropdownCheck: b,\n          dialog: v,\n          popover: k,\n          checkbox: C,\n          icon: w,\n          options: t,\n          palette: function palette(e, o) {\n            return s.a.create('<div class=\"note-color-palette\"/>', function (e, o) {\n              var i = [];\n\n              for (var _t58 = 0, _e35 = o.colors.length; _t58 < _e35; _t58++) {\n                var _e36 = o.eventName,\n                    _n13 = o.colors[_t58],\n                    _s12 = o.colorsName[_t58],\n                    _r6 = [];\n\n                for (var _t59 = 0, _o33 = _n13.length; _t59 < _o33; _t59++) {\n                  var _o34 = _n13[_t59],\n                      _i25 = _s12[_t59];\n\n                  _r6.push(['<button type=\"button\" class=\"note-color-btn\"', 'style=\"background-color:', _o34, '\" ', 'data-event=\"', _e36, '\" ', 'data-value=\"', _o34, '\" ', 'title=\"', _i25, '\" ', 'aria-label=\"', _i25, '\" ', 'data-toggle=\"button\" tabindex=\"-1\"></button>'].join(\"\"));\n                }\n\n                i.push('<div class=\"note-color-row\">' + _r6.join(\"\") + \"</div>\");\n              }\n\n              e.html(i.join(\"\")), o.tooltip && e.find(\".note-color-btn\").tooltip({\n                container: o.container || t.container,\n                trigger: \"hover\",\n                placement: \"bottom\"\n              });\n            })(e, o);\n          },\n          button: function button(e, o) {\n            return s.a.create('<button type=\"button\" class=\"note-btn btn btn-default btn-sm\" tabindex=\"-1\">', function (e, o) {\n              o && o.tooltip && e.attr({\n                title: o.tooltip,\n                \"aria-label\": o.tooltip\n              }).tooltip({\n                container: o.container || t.container,\n                trigger: \"hover\",\n                placement: \"bottom\"\n              }).on(\"click\", function (t) {\n                n()(t.currentTarget).tooltip(\"hide\");\n              });\n            })(e, o);\n          },\n          toggleBtn: function toggleBtn(t, e) {\n            t.toggleClass(\"disabled\", !e), t.attr(\"disabled\", !e);\n          },\n          toggleBtnActive: function toggleBtnActive(t, e) {\n            t.toggleClass(\"active\", e);\n          },\n          onDialogShown: function onDialogShown(t, e) {\n            t.one(\"shown.bs.modal\", e);\n          },\n          onDialogHidden: function onDialogHidden(t, e) {\n            t.one(\"hidden.bs.modal\", e);\n          },\n          showDialog: function showDialog(t) {\n            t.modal(\"show\");\n          },\n          hideDialog: function hideDialog(t) {\n            t.modal(\"hide\");\n          },\n          createLayout: function createLayout(e) {\n            var o = (t.airMode ? u([l([c(), p()])]) : \"bottom\" === t.toolbarPosition ? r([l([c(), h()]), a(), d()]) : r([a(), l([c(), h()]), d()])).render();\n            return o.insertAfter(e), {\n              note: e,\n              editor: o,\n              toolbar: o.find(\".note-toolbar\"),\n              editingArea: o.find(\".note-editing-area\"),\n              editable: o.find(\".note-editable\"),\n              codable: o.find(\".note-codable\"),\n              statusbar: o.find(\".note-statusbar\")\n            };\n          },\n          removeLayout: function removeLayout(t, e) {\n            t.html(e.editable.html()), e.editor.remove(), t.show();\n          }\n        };\n      };\n\n      o(3), o(4);\n      n.a.summernote = n.a.extend(n.a.summernote, {\n        ui_template: y,\n        interface: \"bs3\"\n      });\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"script"}